digraph "CFG formil.nga.geopackage.extension.coverage.CoverageDataCore.reprojectCoverageData([[Ljava\/lang\/Double;IILmil\/nga\/geopackage\/BoundingBox;Lmil\/nga\/geopackage\/projection\/ProjectionTransform;Lmil\/nga\/geopackage\/BoundingBox;)[[Ljava\/lang\/Double;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x0002: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r24 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0004: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r25 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0006: INVOKE  (r3 I:double) = (r26 I:mil.nga.geopackage.BoundingBox) mil.nga.geopackage.BoundingBox.getMaxLongitude():double type: VIRTUAL \l0x000a: INVOKE  (r5 I:double) = (r26 I:mil.nga.geopackage.BoundingBox) mil.nga.geopackage.BoundingBox.getMinLongitude():double type: VIRTUAL \l0x000e: ARITH  (r3 I:double) = (r3 I:double) \- (r5 I:double) \l0x000f: CAST  (r5 I:double) = (double) (r1 I:int) \l0x0010: ARITH  (r3 I:double) = (r3 I:double) \/ (r5 I:double) \l0x0011: INVOKE  (r5 I:double) = (r26 I:mil.nga.geopackage.BoundingBox) mil.nga.geopackage.BoundingBox.getMaxLatitude():double type: VIRTUAL \l0x0015: INVOKE  (r7 I:double) = (r26 I:mil.nga.geopackage.BoundingBox) mil.nga.geopackage.BoundingBox.getMinLatitude():double type: VIRTUAL \l0x0019: ARITH  (r5 I:double) = (r5 I:double) \- (r7 I:double) \l0x001a: CAST  (r7 I:double) = (double) (r2 I:int) \l0x001b: ARITH  (r5 I:double) = (r5 I:double) \/ (r7 I:double) \l0x001c: INVOKE  (r7 I:double) = (r28 I:mil.nga.geopackage.BoundingBox) mil.nga.geopackage.BoundingBox.getMaxLongitude():double type: VIRTUAL \l0x0020: INVOKE  (r9 I:double) = (r28 I:mil.nga.geopackage.BoundingBox) mil.nga.geopackage.BoundingBox.getMinLongitude():double type: VIRTUAL \l0x0024: ARITH  (r7 I:double) = (r7 I:double) \- (r9 I:double) \l0x0025: INVOKE  (r9 I:double) = (r28 I:mil.nga.geopackage.BoundingBox) mil.nga.geopackage.BoundingBox.getMaxLatitude():double type: VIRTUAL \l0x0029: INVOKE  (r11 I:double) = (r28 I:mil.nga.geopackage.BoundingBox) mil.nga.geopackage.BoundingBox.getMinLatitude():double type: VIRTUAL \l0x002d: ARITH  (r9 I:double) = (r9 I:double) \- (r11 I:double) \l0x002e: CONST  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x002f: AGET  (r12 I:?[OBJECT, ARRAY]) = \l  (r0 I:?[OBJECT, ARRAY][])\l  (r11 I:?[int, short, byte, char])\l \l0x0031: ARRAY_LENGTH  (r12 I:int) = (r12 I:?[]) \l0x0032: ARRAY_LENGTH  (r13 I:int) = (r0 I:?[]) \l0x0033: FILLED_NEW_ARRAY  (r14 I:int[]) = (r2 I:int A[IMMUTABLE_TYPE]), (r1 I:int A[IMMUTABLE_TYPE]) elemType: int \l0x0037: CONST_CLASS  (r15 I:java.lang.Class\<java.lang.Double\>) =  java.lang.Double.class \l0x0039: INVOKE  (r14 I:java.lang.Object) = (r15 I:java.lang.Class), (r14 I:int[]) java.lang.reflect.Array.newInstance(java.lang.Class, int[]):java.lang.Object type: STATIC \l0x003d: CHECK_CAST  (r14 I:java.lang.Double[][]) = (java.lang.Double[][]) (r14 I:?[OBJECT, ARRAY]) \l0x003f: CONST  (r15 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0040|0x0040: IF  (r15 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:5:0x00bd \l}"];
Node_2 [shape=record,label="{2\:\ 0x0042|0x0042: IF  (r11 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:4:0x00ae \l}"];
Node_3 [shape=record,label="{3\:\ 0x0044|0x0044: INVOKE  (r16 I:double) = (r26 I:mil.nga.geopackage.BoundingBox) mil.nga.geopackage.BoundingBox.getMinLongitude():double type: VIRTUAL \l0x0048: CAST  (r1 I:double) = (double) (r11 I:int) \l0x0049: ARITH  (r1 I:double) = (r1 I:double) * (r3 I:double) \l0x004b: ARITH  (r1 I:double) = (r16 I:double) + (r1 I:double) \l0x004d: INVOKE  (r16 I:double) = (r26 I:mil.nga.geopackage.BoundingBox) mil.nga.geopackage.BoundingBox.getMaxLatitude():double type: VIRTUAL \l0x0051: MOVE  (r18 I:?[long, double]) = (r3 I:?[long, double]) \l0x0053: CAST  (r3 I:double) = (double) (r15 I:int) \l0x0054: ARITH  (r3 I:double) = (r3 I:double) * (r5 I:double) \l0x0056: ARITH  (r3 I:double) = (r16 I:double) \- (r3 I:double) \l0x0058: MOVE  (r20 I:?[long, double]) = (r5 I:?[long, double]) \l0x005a: NEW_INSTANCE  (r5 I:org.osgeo.proj4j.ProjCoordinate) =  org.osgeo.proj4j.ProjCoordinate \l0x005c: INVOKE  \l  (r5 I:org.osgeo.proj4j.ProjCoordinate)\l  (r1 I:double)\l  (r3 I:double)\l org.osgeo.proj4j.ProjCoordinate.\<init\>(double, double):void type: DIRECT \l0x005f: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r27 I:?[OBJECT, ARRAY]) \l0x0061: INVOKE  (r2 I:org.osgeo.proj4j.ProjCoordinate) = \l  (r1 I:mil.nga.geopackage.projection.ProjectionTransform)\l  (r5 I:org.osgeo.proj4j.ProjCoordinate)\l mil.nga.geopackage.projection.ProjectionTransform.transform(org.osgeo.proj4j.ProjCoordinate):org.osgeo.proj4j.ProjCoordinate type: VIRTUAL \l0x0065: IGET  (r3 I:double) = (r2 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.x double \l0x0067: IGET  (r5 I:double) = (r2 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x0069: INVOKE  (r16 I:double) = (r28 I:mil.nga.geopackage.BoundingBox) mil.nga.geopackage.BoundingBox.getMinLongitude():double type: VIRTUAL \l0x006d: ARITH  (r3 I:double) = (r3 I:double) \- (r16 I:double) \l0x006f: ARITH  (r3 I:double) = (r3 I:double) \/ (r7 I:double) \l0x0070: CAST  (r1 I:double) = (double) (r12 I:int) \l0x0071: ARITH  (r3 I:double) = (r3 I:double) * (r1 I:double) \l0x0073: INVOKE  (r1 I:long) = (r3 I:double) java.lang.Math.round(double):long type: STATIC \l0x0077: CAST  (r1 I:int) = (int) (r1 I:long) \l0x0078: INVOKE  (r2 I:double) = (r28 I:mil.nga.geopackage.BoundingBox) mil.nga.geopackage.BoundingBox.getMaxLatitude():double type: VIRTUAL \l0x007c: ARITH  (r2 I:double) = (r2 I:double) \- (r5 I:double) \l0x007d: ARITH  (r2 I:double) = (r2 I:double) \/ (r9 I:double) \l0x007e: CAST  (r4 I:double) = (double) (r13 I:int) \l0x007f: ARITH  (r2 I:double) = (r2 I:double) * (r4 I:double) \l0x0081: INVOKE  (r2 I:long) = (r2 I:double) java.lang.Math.round(double):long type: STATIC \l0x0085: CAST  (r2 I:int) = (int) (r2 I:long) \l0x0086: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0087: INVOKE  (r1 I:int) = (r3 I:int), (r1 I:int) java.lang.Math.max(int, int):int type: STATIC \l0x008b: ARITH  (r4 I:int) = (r12 I:int) + (\-1 int) \l0x008d: INVOKE  (r1 I:int) = (r4 I:int), (r1 I:int) java.lang.Math.min(int, int):int type: STATIC \l0x0091: INVOKE  (r2 I:int) = (r3 I:int), (r2 I:int) java.lang.Math.max(int, int):int type: STATIC \l0x0095: ARITH  (r4 I:int) = (r13 I:int) + (\-1 int) \l0x0097: INVOKE  (r2 I:int) = (r4 I:int), (r2 I:int) java.lang.Math.min(int, int):int type: STATIC \l0x009b: AGET  (r2 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY][]), (r2 I:?[int, short, byte, char]) \l0x009d: AGET  (r1 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY][]), (r1 I:?[int, short, byte, char]) \l0x009f: AGET  (r2 I:?[OBJECT, ARRAY]) = \l  (r14 I:?[OBJECT, ARRAY][])\l  (r15 I:?[int, short, byte, char])\l \l0x00a1: APUT  \l  (r2 I:?[OBJECT, ARRAY][])\l  (r11 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l0x00a3: ARITH  (r11 I:int) = (r11 I:int) + (1 int) \l0x00a5: MOVE  (r3 I:?[long, double]) = (r18 I:?[long, double]) \l0x00a7: MOVE  (r5 I:?[long, double]) = (r20 I:?[long, double]) \l0x00a9: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r24 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00ab: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r25 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x00ae|0x00ae: MOVE  (r18 I:?[long, double]) = (r3 I:?[long, double]) \l0x00b0: MOVE  (r20 I:?[long, double]) = (r5 I:?[long, double]) \l0x00b2: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00b3: ARITH  (r15 I:int) = (r15 I:int) + (1 int) \l0x00b5: MOVE  (r3 I:?[long, double]) = (r18 I:?[long, double]) \l0x00b7: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r24 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00b9: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r25 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00bb: CONST  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x00bd|0x00bd: RETURN  (r14 I:java.lang.Double[][]) \l}"];
MethodNode[shape=record,label="{protected java.lang.Double[][] mil.nga.geopackage.extension.coverage.CoverageDataCore.reprojectCoverageData((r22 'this' I:mil.nga.geopackage.extension.coverage.CoverageDataCore A[IMMUTABLE_TYPE, THIS]), (r23 I:java.lang.Double[][] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r25 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r26 I:mil.nga.geopackage.BoundingBox A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r27 I:mil.nga.geopackage.projection.ProjectionTransform A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r28 I:mil.nga.geopackage.BoundingBox A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_2;
Node_4 -> Node_1;
}

