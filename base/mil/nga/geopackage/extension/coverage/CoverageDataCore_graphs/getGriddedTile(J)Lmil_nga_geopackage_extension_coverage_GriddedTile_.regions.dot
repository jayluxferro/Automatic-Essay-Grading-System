digraph "CFG formil.nga.geopackage.extension.coverage.CoverageDataCore.getGriddedTile(J)Lmil\/nga\/geopackage\/extension\/coverage\/GriddedTile;" {
subgraph cluster_Region_244703633 {
label = "R(1:(1:(2:(1:8)|(1:4))))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_519760946 {
label = "Try: R(1:(2:(1:8)|(1:4))) catches: R(3:5|6|7)";
node [shape=record,color=blue];
subgraph cluster_Region_595084487 {
label = "R(1:(2:(1:8)|(1:4)))";
node [shape=record,color=blue];
subgraph cluster_Region_1499498495 {
label = "R(2:(1:8)|(1:4))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2027449387 {
label = "IF [B:2:0x0006] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0006|Catch:\{ SQLException \-\> 0x0017 \}\l|if (r4.griddedTileDao.isTableExists() == true) goto L_0x0008     \/\/ Catch:\{ SQLException \-\> 0x0017 \}\l}"];
subgraph cluster_Region_831165566 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\l|return r4.griddedTileDao.query(r4.tileMatrixSet.getTableName(), r5)\l}"];
}
}
subgraph cluster_Region_1345695988 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0015|SYNTHETIC\lRETURN\lORIG_RETURN\l|return null\l}"];
}
}
}
subgraph cluster_Region_230132338 {
label = "R(3:5|6|7) | ExcHandler: SQLException (r0v0 'e' java.sql.SQLException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0017|ExcHandler: SQLException (r0v0 'e' java.sql.SQLException A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l}"];
Node_6 [shape=record,label="{6\:\ 0x0018}"];
Node_7 [shape=record,label="{7\:\ 0x003c|throw new mil.nga.geopackage.GeoPackageException(\"Failed to get Gridded Tile for table name: \" + r4.tileMatrixSet.getTableName() + \", tile id: \" + r5, r0)\l}"];
}
}
}
subgraph cluster_Region_230132338 {
label = "R(3:5|6|7) | ExcHandler: SQLException (r0v0 'e' java.sql.SQLException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0017|ExcHandler: SQLException (r0v0 'e' java.sql.SQLException A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l}"];
Node_6 [shape=record,label="{6\:\ 0x0018}"];
Node_7 [shape=record,label="{7\:\ 0x003c|throw new mil.nga.geopackage.GeoPackageException(\"Failed to get Gridded Tile for table name: \" + r4.tileMatrixSet.getTableName() + \", tile id: \" + r5, r0)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|Catch:\{ SQLException \-\> 0x0017 \}\lSplitter:B:0:0x0000\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0008|Catch:\{ SQLException \-\> 0x0017 \}\l}"];
MethodNode[shape=record,label="{public mil.nga.geopackage.extension.coverage.GriddedTile mil.nga.geopackage.extension.coverage.CoverageDataCore.getGriddedTile((r4v0 'this' mil.nga.geopackage.extension.coverage.CoverageDataCore A[IMMUTABLE_TYPE, THIS]), (r5v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_2 -> Node_3;
Node_2 -> Node_4[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_0 -> Node_1;
Node_0 -> Node_5;
Node_1 -> Node_2;
Node_3 -> Node_8;
}

