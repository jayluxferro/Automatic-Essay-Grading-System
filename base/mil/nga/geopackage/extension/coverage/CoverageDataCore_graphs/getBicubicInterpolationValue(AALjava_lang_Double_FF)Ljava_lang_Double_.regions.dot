digraph "CFG formil.nga.geopackage.extension.coverage.CoverageDataCore.getBicubicInterpolationValue([[Ljava\/lang\/Double;FF)Ljava\/lang\/Double;" {
subgraph cluster_Region_1685242935 {
label = "R(3:0|(1:(2:(1:11)|(2:3|(2:(2:5|1)|(1:6)))))|(2:(2:8|13)|(2:9|12)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.Double[] java.lang.Double[] r2 = new java.lang.Double[4]\lint r4 = 0\l}"];
subgraph cluster_LoopRegion_615465570 {
label = "LOOP:0: (1:(2:(1:11)|(2:3|(2:(2:5|1)|(1:6)))))";
node [shape=record,color=blue];
subgraph cluster_Region_584472289 {
label = "R(1:(2:(1:11)|(2:3|(2:(2:5|1)|(1:6)))))";
node [shape=record,color=blue];
subgraph cluster_Region_1757358048 {
label = "R(2:(1:11)|(2:3|(2:(2:5|1)|(1:6))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_22441618 {
label = "IF [B:2:0x0006] THEN: R(1:11) ELSE: null";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0006|if (r4 \>= 4) goto L_0x002c\l}"];
subgraph cluster_Region_1870028520 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x002c|SYNTHETIC\lEDGE_INSN: B:11:0x002c\-\>B:7:0x002c ?: BREAK  \l|break\l}"];
}
}
subgraph cluster_Region_575282435 {
label = "R(2:3|(2:(2:5|1)|(1:6)))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0008|java.lang.Double java.lang.Double r7 = getCubicInterpolationValue(r15[r4][0], r15[r4][1], r15[r4][2], r15[r4][3], (double) r16)\l}"];
subgraph cluster_Region_831827254 {
label = "R(2:(2:5|1)|(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1389012273 {
label = "IF [B:4:0x0023] THEN: R(2:5|1) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0023|if (r7 == null) goto L_0x0025\l}"];
subgraph cluster_Region_1055022495 {
label = "R(2:5|1)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0025|EDGE_INSN: B:5:0x0025\-\>B:7:0x002c ?: BREAK  \l|r2 = null\l}"];
Node_InsnContainer_560301243 [shape=record,label="{|break\l}"];
}
}
subgraph cluster_Region_1075606647 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0027|LOOP_END\lLOOP:0: B:1:0x0005\-\>B:6:0x0027\l|r2[r4] = r7\lr4++\l}"];
}
}
}
}
}
}
subgraph cluster_Region_812918608 {
label = "R(2:(2:8|13)|(2:9|12))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1599464615 {
label = "IF [B:7:0x002c] THEN: R(2:8|13) ELSE: null";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x002c|EDGE_INSN: B:5:0x0025\-\>B:7:0x002c ?: BREAK  \lEDGE_INSN: B:11:0x002c\-\>B:7:0x002c ?: BREAK  \lPHI: r2 \l  PHI: (r2v1 java.lang.Double[]) = (r2v0 java.lang.Double[]), (r2v2 java.lang.Double[]) binds: [B:11:0x002c, B:5:0x0025] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 != null) goto L_0x002e\l}"];
subgraph cluster_Region_762626054 {
label = "R(2:8|13)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x002e}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|return getCubicInterpolationValue(r2, (double) r17)\l}"];
}
}
subgraph cluster_Region_1839771304 {
label = "R(2:9|12)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0037}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return null\l}"];
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0005|LOOP_START\lPHI: r4 \l  PHI: (r4v1 int) = (r4v0 int), (r4v2 int) binds: [B:0:0x0000, B:6:0x0027] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0005\-\>B:6:0x0027\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0025|SYNTHETIC\l}"];
MethodNode[shape=record,label="{protected java.lang.Double mil.nga.geopackage.extension.coverage.CoverageDataCore.getBicubicInterpolationValue((r14v0 'this' mil.nga.geopackage.extension.coverage.CoverageDataCore A[IMMUTABLE_TYPE, THIS]), (r15v0 java.lang.Double[][] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_11;
Node_11 -> Node_7;
Node_3 -> Node_4;
Node_4 -> Node_6[style=dashed];
Node_4 -> Node_10;
Node_5 -> Node_7;
Node_6 -> Node_1;
Node_7 -> Node_8;
Node_7 -> Node_9[style=dashed];
Node_8 -> Node_13;
Node_9 -> Node_12;
Node_1 -> Node_2;
Node_10 -> Node_5;
}

