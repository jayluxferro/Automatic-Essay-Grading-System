digraph "CFG formil.nga.geopackage.extension.coverage.CoverageDataCore.getBilinearInterpolationValue(FFFFFFLjava\/lang\/Double;Ljava\/lang\/Double;Ljava\/lang\/Double;Ljava\/lang\/Double;)Ljava\/lang\/Double;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r23 == null) goto L_0x0069\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r24 != null) goto L_0x0008\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004}"];
Node_3 [shape=record,label="{3\:\ 0x0006|if ((r19 \> r20 ? 1 : (r19 == r20 ? 0 : \-1)) != 0) goto L_0x0069\l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|if (r25 != null) goto L_0x000e\l}"];
Node_5 [shape=record,label="{5\:\ 0x000a}"];
Node_6 [shape=record,label="{6\:\ 0x000c|if ((r21 \> r22 ? 1 : (r21 == r22 ? 0 : \-1)) != 0) goto L_0x0069\l}"];
Node_7 [shape=record,label="{7\:\ 0x000e|if (r26 != null) goto L_0x0018\l}"];
Node_8 [shape=record,label="{8\:\ 0x0010}"];
Node_9 [shape=record,label="{9\:\ 0x0012|if ((r19 \> r20 ? 1 : (r19 == r20 ? 0 : \-1)) != 0) goto L_0x0069\l}"];
Node_10 [shape=record,label="{10\:\ 0x0014}"];
Node_11 [shape=record,label="{11\:\ 0x0016|if ((r21 \> r22 ? 1 : (r21 == r22 ? 0 : \-1)) != 0) goto L_0x0069\l}"];
Node_12 [shape=record,label="{12\:\ 0x0018|float r2 = r20 \- r19\l}"];
Node_13 [shape=record,label="{13\:\ 0x001d|if ((r2 \> 0.0f ? 1 : (r2 == 0.0f ? 0 : \-1)) != 0) goto L_0x0026\l}"];
Node_14 [shape=record,label="{14\:\ 0x001f|double r6 = r23.doubleValue()\lr8 = r25\l}"];
Node_15 [shape=record,label="{15\:\ 0x0026|double r10 = (double) ((r2 \- r17) \/ r2)\ldouble r14 = (double) (r17 \/ r2)\ldouble r6 = r24.doubleValue() * r14\ldouble r6 = r6 + (r23.doubleValue() * r10)\lr8 = java.lang.Double.valueOf((r10 * r25.doubleValue()) + (r14 * r26.doubleValue()))\l}"];
Node_16 [shape=record,label="{16\:\ 0x004c|PHI: r6 r8 \l  PHI: (r6v0 double) = (r6v5 double), (r6v6 double) binds: [B:15:0x0026, B:14:0x001f] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v0 java.lang.Double) = (r8v2 java.lang.Double), (r8v3 java.lang.Double) binds: [B:15:0x0026, B:14:0x001f] A[DONT_GENERATE, DONT_INLINE]\l|float r0 = r22 \- r21\l}"];
Node_17 [shape=record,label="{17\:\ 0x0050|if ((r0 \> 0.0f ? 1 : (r0 == 0.0f ? 0 : \-1)) != 0) goto L_0x0053\l}"];
Node_18 [shape=record,label="{18\:\ 0x0053|double r6 = (((double) ((r0 \- r18) \/ r0)) * r6) + (((double) (r18 \/ r0)) * r8.doubleValue())\l}"];
Node_19 [shape=record,label="{19\:\ 0x0064|PHI: r6 \l  PHI: (r6v1 double) = (r6v0 double), (r6v2 double) binds: [B:17:0x0050, B:18:0x0053] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0069|SYNTHETIC\lRETURN\lORIG_RETURN\l|return null\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|return java.lang.Double.valueOf(r6)\l}"];
MethodNode[shape=record,label="{protected java.lang.Double mil.nga.geopackage.extension.coverage.CoverageDataCore.getBilinearInterpolationValue((r16v0 'this' mil.nga.geopackage.extension.coverage.CoverageDataCore A[IMMUTABLE_TYPE, THIS]), (r17v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23v0 java.lang.Double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24v0 java.lang.Double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r25v0 java.lang.Double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r26v0 java.lang.Double A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_20;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_20;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_20;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_12;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_20;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_20;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_17 -> Node_19[style=dashed];
Node_18 -> Node_19;
Node_19 -> Node_21;
}

