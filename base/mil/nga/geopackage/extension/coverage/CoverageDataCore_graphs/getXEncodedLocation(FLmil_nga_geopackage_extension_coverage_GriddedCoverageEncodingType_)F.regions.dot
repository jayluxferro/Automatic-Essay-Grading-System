digraph "CFG formil.nga.geopackage.extension.coverage.CoverageDataCore.getXEncodedLocation(FLmil\/nga\/geopackage\/extension\/coverage\/GriddedCoverageEncodingType;)F" {
subgraph cluster_Region_1431940806 {
label = "R(1:1)";
node [shape=record,color=blue];
subgraph cluster_SwitchRegion_2141525541 {
label = "Switch: 2, default: R(2:2|3)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0008|switch(r4) \{\l    case mil.nga.geopackage.extension.coverage.GriddedCoverageEncodingType.CENTER :mil.nga.geopackage.extension.coverage.GriddedCoverageEncodingType: goto L_0x0022;\l    case mil.nga.geopackage.extension.coverage.GriddedCoverageEncodingType.AREA :mil.nga.geopackage.extension.coverage.GriddedCoverageEncodingType: goto L_0x0022;\l    case mil.nga.geopackage.extension.coverage.GriddedCoverageEncodingType.CORNER :mil.nga.geopackage.extension.coverage.GriddedCoverageEncodingType: goto L_0x0025;\l    default: goto L_0x000b;\l\}\l}"];
subgraph cluster_Region_137965325 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return r3 + 0.5f\l}"];
}
subgraph cluster_Region_1639379709 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ ?|SYNTHETIC\lRETURN\l|return r3\l}"];
}
subgraph cluster_Region_2038517651 {
label = "R(2:2|3)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000b}"];
Node_3 [shape=record,label="{3\:\ 0x0021|throw new mil.nga.geopackage.GeoPackageException(\"Unsupported Encoding Type: \" + r4)\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0022}"];
MethodNode[shape=record,label="{private float mil.nga.geopackage.extension.coverage.CoverageDataCore.getXEncodedLocation((r2v0 'this' mil.nga.geopackage.extension.coverage.CoverageDataCore A[IMMUTABLE_TYPE, THIS]), (r3v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 mil.nga.geopackage.extension.coverage.GriddedCoverageEncodingType A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_0 -> Node_1;
Node_4 -> Node_5;
}

