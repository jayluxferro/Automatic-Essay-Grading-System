digraph "CFG formil.nga.geopackage.extension.coverage.CoverageDataCore.getBilinearInterpolationValue(Lmil\/nga\/geopackage\/extension\/coverage\/GriddedTile;Lmil\/nga\/geopackage\/extension\/coverage\/CoverageDataImage;[[Ljava\/lang\/Double;[[Ljava\/lang\/Double;[[Ljava\/lang\/Double;IIFFFFFF)Ljava\/lang\/Double;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r13 I:?[OBJECT, ARRAY]) \l0x0001: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0003: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0005: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r24 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0007: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r26 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0009: INVOKE  (r0 I:float) = \l  (r13 I:mil.nga.geopackage.extension.coverage.CoverageDataCore)\l  (r0 I:int)\l  (r2 I:float)\l  (r3 I:float)\l  (r1 I:float)\l mil.nga.geopackage.extension.coverage.CoverageDataCore.getXSource(int, float, float, float):float type: VIRTUAL \l0x000d: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000f: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r22 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0011: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r23 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0013: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r25 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0015: INVOKE  (r1 I:float) = \l  (r13 I:mil.nga.geopackage.extension.coverage.CoverageDataCore)\l  (r1 I:int)\l  (r3 I:float)\l  (r4 I:float)\l  (r2 I:float)\l mil.nga.geopackage.extension.coverage.CoverageDataCore.getYSource(int, float, float, float):float type: VIRTUAL \l0x0019: INVOKE  (r10 I:mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel) = \l  (r13 I:mil.nga.geopackage.extension.coverage.CoverageDataCore)\l  (r0 I:float)\l mil.nga.geopackage.extension.coverage.CoverageDataCore.getXSourceMinAndMax(float):mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel type: VIRTUAL \l0x001d: INVOKE  (r11 I:mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel) = \l  (r13 I:mil.nga.geopackage.extension.coverage.CoverageDataCore)\l  (r1 I:float)\l mil.nga.geopackage.extension.coverage.CoverageDataCore.getYSourceMinAndMax(float):mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel type: VIRTUAL \l0x0021: CONST  (r0 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0022: FILLED_NEW_ARRAY  (r0 I:int[]) = (r0 I:int A[IMMUTABLE_TYPE]), (r0 I:int A[IMMUTABLE_TYPE]) elemType: int \l0x0026: CONST_CLASS  (r1 I:java.lang.Class\<java.lang.Double\>) =  java.lang.Double.class \l0x0028: INVOKE  (r0 I:java.lang.Object) = (r1 I:java.lang.Class), (r0 I:int[]) java.lang.reflect.Array.newInstance(java.lang.Class, int[]):java.lang.Object type: STATIC \l0x002c: MOVE  (r12 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x002d: CHECK_CAST  (r12 I:java.lang.Double[][]) = (java.lang.Double[][]) (r12 I:?[OBJECT, ARRAY]) \l0x002f: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r13 I:?[OBJECT, ARRAY]) \l0x0030: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY]) \l0x0031: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r15 I:?[OBJECT, ARRAY]) \l0x0032: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) \l0x0034: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x0036: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x0038: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x0039: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) \l0x003a: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) \l0x003b: INVOKE  \l  (r0 I:mil.nga.geopackage.extension.coverage.CoverageDataCore)\l  (r1 I:mil.nga.geopackage.extension.coverage.GriddedTile)\l  (r2 I:mil.nga.geopackage.extension.coverage.CoverageDataImage)\l  (r3 I:java.lang.Double[][])\l  (r4 I:java.lang.Double[][])\l  (r5 I:java.lang.Double[][])\l  (r6 I:mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel)\l  (r7 I:mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel)\l  (r8 I:java.lang.Double[][])\l mil.nga.geopackage.extension.coverage.CoverageDataCore.populateValues(mil.nga.geopackage.extension.coverage.GriddedTile, mil.nga.geopackage.extension.coverage.CoverageDataImage, java.lang.Double[][], java.lang.Double[][], java.lang.Double[][], mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel, mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel, java.lang.Double[][]):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x003e|0x003e: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0045 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0040|0x0040: INVOKE  (r0 I:java.lang.Double) = \l  (r13 I:mil.nga.geopackage.extension.coverage.CoverageDataCore)\l  (r10 I:mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel)\l  (r11 I:mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel)\l  (r12 I:java.lang.Double[][])\l mil.nga.geopackage.extension.coverage.CoverageDataCore.getBilinearInterpolationValue(mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel, mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel, java.lang.Double[][]):java.lang.Double type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0045|0x0045: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0046|0x0046: RETURN  (r0 I:java.lang.Double) \l}"];
MethodNode[shape=record,label="{protected java.lang.Double mil.nga.geopackage.extension.coverage.CoverageDataCore.getBilinearInterpolationValue((r13 'this' I:mil.nga.geopackage.extension.coverage.CoverageDataCore A[IMMUTABLE_TYPE, THIS]), (r14 I:mil.nga.geopackage.extension.coverage.GriddedTile A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:TImage A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16 I:java.lang.Double[][] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17 I:java.lang.Double[][] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:java.lang.Double[][] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r25 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r26 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lmil\/nga\/geopackage\/extension\/coverage\/GriddedTile;, TTImage;[[, Ljava\/lang\/Double;, [[, Ljava\/lang\/Double;, [[, Ljava\/lang\/Double;, IIFFFFFF), Ljava\/lang\/Double;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
}

