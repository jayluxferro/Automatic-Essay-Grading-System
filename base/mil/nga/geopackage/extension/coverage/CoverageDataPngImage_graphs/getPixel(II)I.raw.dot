digraph "CFG formil.nga.geopackage.extension.coverage.CoverageDataPngImage.getPixel(II)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int[][]) = \l  (r1 I:mil.nga.geopackage.extension.coverage.CoverageDataPngImage)\l mil.nga.geopackage.extension.coverage.CoverageDataPngImage.pixels int[][] \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0007 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: INVOKE  \l  (r1 I:mil.nga.geopackage.extension.coverage.CoverageDataPngImage)\l mil.nga.geopackage.extension.coverage.CoverageDataPngImage.readPixels():void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: IGET  (r0 I:int[][]) = \l  (r1 I:mil.nga.geopackage.extension.coverage.CoverageDataPngImage)\l mil.nga.geopackage.extension.coverage.CoverageDataPngImage.pixels int[][] \l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0012 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|0x000b: IGET  (r0 I:int[][]) = \l  (r1 I:mil.nga.geopackage.extension.coverage.CoverageDataPngImage)\l mil.nga.geopackage.extension.coverage.CoverageDataPngImage.pixels int[][] \l0x000d: AGET  (r3 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY][]), (r3 I:?[int, short, byte, char]) \l0x000f: AGET  (r2 I:?[int, float]) = (r3 I:?[int, float][]), (r2 I:?[int, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|0x0011: RETURN  (r2 I:int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0012|0x0012: NEW_INSTANCE  (r2 I:mil.nga.geopackage.GeoPackageException) =  mil.nga.geopackage.GeoPackageException \l0x0014: CONST_STR  (r3 I:java.lang.String) =  \"Could not retrieve pixel value\" \l0x0016: INVOKE  \l  (r2 I:mil.nga.geopackage.GeoPackageException)\l  (r3 I:java.lang.String)\l mil.nga.geopackage.GeoPackageException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_8 [shape=record,label="{8\:\ 0x0019|0x0019: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public int mil.nga.geopackage.extension.coverage.CoverageDataPngImage.getPixel((r1 'this' I:mil.nga.geopackage.extension.coverage.CoverageDataPngImage A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_7 -> Node_8;
}

