digraph "CFG formil.nga.geopackage.extension.coverage.CoverageDataPngImage.readPixels()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r5.reader == null) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|int[] r0 = new int[]\{r5.reader.imgInfo.rows, r5.reader.imgInfo.cols\}\lr5.pixels = (int[][]) java.lang.reflect.Array.newInstance(int.class, r0)\lr1 = 0\l}"];
Node_3 [shape=record,label="{3\:\ 0x0020|LOOP_START\lPHI: r1 \l  PHI: (r1v5 int) = (r1v4 int), (r1v6 int) binds: [B:2:0x0004, B:5:0x0028] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:3:0x0020\-\>B:5:0x0028\l}"];
Node_4 [shape=record,label="{4\:\ 0x0026|if (r5.reader.hasMoreRows() == false) goto L_0x0046\l}"];
Node_5 [shape=record,label="{5\:\ 0x0028|LOOP_END\lLOOP:0: B:3:0x0020\-\>B:5:0x0028\l|ar.com.hjg.pngj.ImageLineInt r2 = r5.reader.readRowInt()\lint[] r3 = new int[r5.reader.imgInfo.cols]\ljava.lang.System.arraycopy(r2.getScanline(), 0, r3, 0, r3.length)\lr5.pixels[r1] = r3\lr1 = r1 + 1\l}"];
Node_6 [shape=record,label="{6\:\ 0x0046|r5.reader.close()\l}"];
Node_7 [shape=record,label="{7\:\ 0x0046|SYNTHETIC\l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_9 [shape=record,label="{9\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private void mil.nga.geopackage.extension.coverage.CoverageDataPngImage.readPixels((r5v0 'this' mil.nga.geopackage.extension.coverage.CoverageDataPngImage A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_3;
Node_6 -> Node_8;
Node_7 -> Node_6;
}

