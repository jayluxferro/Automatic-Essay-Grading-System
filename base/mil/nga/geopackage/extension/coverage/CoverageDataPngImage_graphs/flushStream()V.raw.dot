digraph "CFG formil.nga.geopackage.extension.coverage.CoverageDataPngImage.flushStream()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.io.ByteArrayOutputStream) = \l  (r3 I:mil.nga.geopackage.extension.coverage.CoverageDataPngImage)\l mil.nga.geopackage.extension.coverage.CoverageDataPngImage.outputStream java.io.ByteArrayOutputStream \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0022 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:byte[]) = \l  (r3 I:mil.nga.geopackage.extension.coverage.CoverageDataPngImage)\l mil.nga.geopackage.extension.coverage.CoverageDataPngImage.imageBytes byte[] \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0010 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: IGET  (r0 I:java.io.ByteArrayOutputStream) = \l  (r3 I:mil.nga.geopackage.extension.coverage.CoverageDataPngImage)\l mil.nga.geopackage.extension.coverage.CoverageDataPngImage.outputStream java.io.ByteArrayOutputStream \l0x000a: INVOKE  (r0 I:byte[]) = (r0 I:java.io.ByteArrayOutputStream) java.io.ByteArrayOutputStream.toByteArray():byte[] type: VIRTUAL \l0x000e: IPUT  \l  (r0 I:byte[])\l  (r3 I:mil.nga.geopackage.extension.coverage.CoverageDataPngImage)\l mil.nga.geopackage.extension.coverage.CoverageDataPngImage.imageBytes byte[] \l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|SYNTHETIC\lSplitter:B:5:0x0010\l}"];
Node_6 [shape=record,label="{6\:\ ?|Splitter:B:5:0x0010\l|0x0010: IGET  (r0 I:java.io.ByteArrayOutputStream) = \l  (r3 I:mil.nga.geopackage.extension.coverage.CoverageDataPngImage)\l mil.nga.geopackage.extension.coverage.CoverageDataPngImage.outputStream java.io.ByteArrayOutputStream A[Catch:\{ IOException \-\> 0x0016 \}, TRY_ENTER]\l0x0012: INVOKE  (r0 I:java.io.ByteArrayOutputStream) java.io.ByteArrayOutputStream.close():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x0016 \}, TRY_LEAVE]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|ExcHandler: IOException null\lSplitter:B:5:0x0010\l|0x0016: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_9 [shape=record,label="{9\:\ 0x0017|0x0017: CONST_CLASS  (r1 I:java.lang.Class\<mil.nga.geopackage.extension.coverage.CoverageDataPngImage\>) =  mil.nga.geopackage.extension.coverage.CoverageDataPngImage.class \l0x0019: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.Class) java.lang.Class.getSimpleName():java.lang.String type: VIRTUAL \l0x001d: CONST_STR  (r2 I:java.lang.String) =  \"Failed to close output stream\" \l0x001f: INVOKE  \l  (r1 I:java.lang.String)\l  (r2 I:java.lang.String)\l  (r0 I:java.lang.Throwable)\l android.util.Log.w(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC \l}"];
Node_10 [shape=record,label="{10\:\ 0x0022|0x0022: RETURN   \l}"];
MethodNode[shape=record,label="{public void mil.nga.geopackage.extension.coverage.CoverageDataPngImage.flushStream((r3 'this' I:mil.nga.geopackage.extension.coverage.CoverageDataPngImage A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_8;
Node_6 -> Node_8;
Node_6 -> Node_10;
Node_8 -> Node_9;
Node_9 -> Node_10;
}

