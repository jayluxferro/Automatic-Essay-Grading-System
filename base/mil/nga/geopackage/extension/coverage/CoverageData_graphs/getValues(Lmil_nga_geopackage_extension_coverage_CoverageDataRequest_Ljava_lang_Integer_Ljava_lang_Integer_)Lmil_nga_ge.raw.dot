digraph "CFG formil.nga.geopackage.extension.coverage.CoverageData.getValues(Lmil\/nga\/geopackage\/extension\/coverage\/CoverageDataRequest;Ljava\/lang\/Integer;Ljava\/lang\/Integer;)Lmil\/nga\/geopackage\/extension\/coverage\/CoverageDataResults;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) \l0x0002: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x0004: INVOKE  (r1 I:mil.nga.geopackage.BoundingBox) = \l  (r17 I:mil.nga.geopackage.extension.coverage.CoverageDataRequest)\l mil.nga.geopackage.extension.coverage.CoverageDataRequest.getBoundingBox():mil.nga.geopackage.BoundingBox type: VIRTUAL \l0x0008: IGET  (r2 I:boolean) = (r8 I:mil.nga.geopackage.extension.coverage.CoverageData) mil.nga.geopackage.extension.coverage.CoverageData.sameProjection boolean \l0x000a: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x001c \l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|0x000d: IGET  (r2 I:mil.nga.geopackage.projection.Projection) = (r8 I:mil.nga.geopackage.extension.coverage.CoverageData) mil.nga.geopackage.extension.coverage.CoverageData.requestProjection mil.nga.geopackage.projection.Projection \l0x000f: IGET  (r3 I:mil.nga.geopackage.projection.Projection) = (r8 I:mil.nga.geopackage.extension.coverage.CoverageData) mil.nga.geopackage.extension.coverage.CoverageData.coverageProjection mil.nga.geopackage.projection.Projection \l0x0011: INVOKE  (r2 I:mil.nga.geopackage.projection.ProjectionTransform) = \l  (r2 I:mil.nga.geopackage.projection.Projection)\l  (r3 I:mil.nga.geopackage.projection.Projection)\l mil.nga.geopackage.projection.Projection.getTransformation(mil.nga.geopackage.projection.Projection):mil.nga.geopackage.projection.ProjectionTransform type: VIRTUAL \l0x0015: INVOKE  (r1 I:mil.nga.geopackage.BoundingBox) = \l  (r2 I:mil.nga.geopackage.projection.ProjectionTransform)\l  (r1 I:mil.nga.geopackage.BoundingBox)\l mil.nga.geopackage.projection.ProjectionTransform.transform(mil.nga.geopackage.BoundingBox):mil.nga.geopackage.BoundingBox type: VIRTUAL \l0x0019: MOVE  (r10 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l0x001a: MOVE  (r11 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x001c|0x001c: MOVE  (r10 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l0x001d: MOVE  (r11 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x001e|0x001e: INVOKE  \l  (r0 I:mil.nga.geopackage.extension.coverage.CoverageDataRequest)\l  (r10 I:mil.nga.geopackage.BoundingBox)\l mil.nga.geopackage.extension.coverage.CoverageDataRequest.setProjectedBoundingBox(mil.nga.geopackage.BoundingBox):void type: VIRTUAL \l0x0021: SGET  (r1 I:int[]) =  mil.nga.geopackage.extension.coverage.CoverageData.1.$SwitchMap$mil$nga$geopackage$extension$coverage$CoverageDataAlgorithm int[] \l0x0023: IGET  (r2 I:mil.nga.geopackage.extension.coverage.CoverageDataAlgorithm) = (r8 I:mil.nga.geopackage.extension.coverage.CoverageData) mil.nga.geopackage.extension.coverage.CoverageData.algorithm mil.nga.geopackage.extension.coverage.CoverageDataAlgorithm \l0x0025: INVOKE  (r2 I:int) = \l  (r2 I:mil.nga.geopackage.extension.coverage.CoverageDataAlgorithm)\l mil.nga.geopackage.extension.coverage.CoverageDataAlgorithm.ordinal():int type: VIRTUAL \l0x0029: AGET  (r1 I:?[int, float]) = (r1 I:?[int, float][]), (r2 I:?[int, short, byte, char]) \l0x002b: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x002c|0x002c: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0030 \l}"];
Node_6 [shape=record,label="{6\:\ 0x002e|0x002e: CONST  (r7 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0030|0x0030: CONST  (r1 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0031: CONST  (r7 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0032|0x0032: INVOKE  (r1 I:mil.nga.geopackage.extension.coverage.CoverageDataTileMatrixResults) = \l  (r8 I:mil.nga.geopackage.extension.coverage.CoverageData)\l  (r0 I:mil.nga.geopackage.extension.coverage.CoverageDataRequest)\l  (r10 I:mil.nga.geopackage.BoundingBox)\l  (r7 I:int)\l mil.nga.geopackage.extension.coverage.CoverageData.getResults(mil.nga.geopackage.extension.coverage.CoverageDataRequest, mil.nga.geopackage.BoundingBox, int):mil.nga.geopackage.extension.coverage.CoverageDataTileMatrixResults type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x0036|0x0036: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:0x00cc \l}"];
Node_10 [shape=record,label="{10\:\ 0x0038|0x0038: INVOKE  (r12 I:mil.nga.geopackage.tiles.matrix.TileMatrix) = \l  (r1 I:mil.nga.geopackage.extension.coverage.CoverageDataTileMatrixResults)\l mil.nga.geopackage.extension.coverage.CoverageDataTileMatrixResults.getTileMatrix():mil.nga.geopackage.tiles.matrix.TileMatrix type: VIRTUAL \l0x003c: INVOKE  (r13 I:mil.nga.geopackage.tiles.user.TileCursor) = \l  (r1 I:mil.nga.geopackage.extension.coverage.CoverageDataTileMatrixResults)\l mil.nga.geopackage.extension.coverage.CoverageDataTileMatrixResults.getTileResults():mil.nga.geopackage.tiles.user.TileCursor type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0040|0x0040: IF  (r18 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x004b \l}"];
Node_12 [shape=record,label="{12\:\ 0x0042|SYNTHETIC\lSplitter:B:12:0x0042\l}"];
Node_13 [shape=record,label="{13\:\ ?|Splitter:B:12:0x0042\l|0x0042: INVOKE  (r1 I:int) = (r18 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL A[Catch:\{ all \-\> 0x0048 \}, TRY_ENTER]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0046|0x0046: MOVE  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0048 \}]\l0x0047: GOTO  \-\> 0x0051 A[Catch:\{ all \-\> 0x0048 \}]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0048|ExcHandler: all null\lSplitter:B:12:0x0042\l|0x0048: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x0048 \}]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0049|0x0049: GOTO  \-\> 0x00c8 A[Catch:\{ all \-\> 0x0048 \}]\l}"];
Node_17 [shape=record,label="{17\:\ 0x004b|0x004b: INVOKE  (r1 I:long) = (r12 I:mil.nga.geopackage.tiles.matrix.TileMatrix) mil.nga.geopackage.tiles.matrix.TileMatrix.getTileWidth():long type: VIRTUAL A[Catch:\{ all \-\> 0x0048 \}]\l0x004f: CAST  (r1 I:int) = (int) (r1 I:long) A[Catch:\{ all \-\> 0x0048 \}]\l0x0050: GOTO  \-\> 0x0046 A[Catch:\{ all \-\> 0x0048 \}]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0051|0x0051: IF  (r19 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0059 A[Catch:\{ all \-\> 0x0048 \}]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0053|0x0053: INVOKE  (r1 I:int) = (r19 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL A[Catch:\{ all \-\> 0x0048 \}]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0057|0x0057: MOVE  (r15 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0048 \}]\l0x0058: GOTO  \-\> 0x005f A[Catch:\{ all \-\> 0x0048 \}]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0059|0x0059: INVOKE  (r1 I:long) = (r12 I:mil.nga.geopackage.tiles.matrix.TileMatrix) mil.nga.geopackage.tiles.matrix.TileMatrix.getTileHeight():long type: VIRTUAL A[Catch:\{ all \-\> 0x0048 \}]\l0x005d: CAST  (r1 I:int) = (int) (r1 I:long) A[Catch:\{ all \-\> 0x0048 \}]\l0x005e: GOTO  \-\> 0x0057 A[Catch:\{ all \-\> 0x0048 \}]\l}"];
Node_22 [shape=record,label="{22\:\ 0x005f|0x005f: IGET  (r1 I:boolean) = (r8 I:mil.nga.geopackage.extension.coverage.CoverageData) mil.nga.geopackage.extension.coverage.CoverageData.sameProjection boolean A[Catch:\{ all \-\> 0x0048 \}]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0061|0x0061: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0096 A[Catch:\{ all \-\> 0x0048 \}]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0063|0x0063: INVOKE  (r1 I:double) = (r10 I:mil.nga.geopackage.BoundingBox) mil.nga.geopackage.BoundingBox.getMaxLongitude():double type: VIRTUAL A[Catch:\{ all \-\> 0x0048 \}]\l0x0067: INVOKE  (r3 I:double) = (r10 I:mil.nga.geopackage.BoundingBox) mil.nga.geopackage.BoundingBox.getMinLongitude():double type: VIRTUAL A[Catch:\{ all \-\> 0x0048 \}]\l0x006b: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0048 \}]\l0x006c: ARITH  (r1 I:double) = (r1 I:double) \- (r3 I:double) A[Catch:\{ all \-\> 0x0048 \}]\l0x006d: INVOKE  (r3 I:double) = (r12 I:mil.nga.geopackage.tiles.matrix.TileMatrix) mil.nga.geopackage.tiles.matrix.TileMatrix.getPixelXSize():double type: VIRTUAL A[Catch:\{ all \-\> 0x0048 \}]\l0x0071: ARITH  (r1 I:double) = (r1 I:double) \/ (r3 I:double) A[Catch:\{ all \-\> 0x0048 \}]\l0x0072: INVOKE  (r1 I:long) = (r1 I:double) java.lang.Math.round(double):long type: STATIC A[Catch:\{ all \-\> 0x0048 \}]\l0x0076: CAST  (r1 I:int) = (int) (r1 I:long) A[Catch:\{ all \-\> 0x0048 \}]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0077|0x0077: IF  (r1 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:27:0x007a A[Catch:\{ all \-\> 0x0048 \}]\l}"];
Node_26 [shape=record,label="{26\:\ 0x0079|0x0079: GOTO  \-\> 0x007b A[Catch:\{ all \-\> 0x0048 \}]\l}"];
Node_27 [shape=record,label="{27\:\ 0x007a|0x007a: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0048 \}]\l}"];
Node_28 [shape=record,label="{28\:\ 0x007b|0x007b: INVOKE  (r2 I:double) = (r10 I:mil.nga.geopackage.BoundingBox) mil.nga.geopackage.BoundingBox.getMaxLatitude():double type: VIRTUAL A[Catch:\{ all \-\> 0x0048 \}]\l0x007f: INVOKE  (r4 I:double) = (r10 I:mil.nga.geopackage.BoundingBox) mil.nga.geopackage.BoundingBox.getMinLatitude():double type: VIRTUAL A[Catch:\{ all \-\> 0x0048 \}]\l0x0083: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0048 \}]\l0x0084: ARITH  (r2 I:double) = (r2 I:double) \- (r4 I:double) A[Catch:\{ all \-\> 0x0048 \}]\l0x0085: INVOKE  (r4 I:double) = (r12 I:mil.nga.geopackage.tiles.matrix.TileMatrix) mil.nga.geopackage.tiles.matrix.TileMatrix.getPixelYSize():double type: VIRTUAL A[Catch:\{ all \-\> 0x0048 \}]\l0x0089: ARITH  (r2 I:double) = (r2 I:double) \/ (r4 I:double) A[Catch:\{ all \-\> 0x0048 \}]\l0x008a: INVOKE  (r2 I:long) = (r2 I:double) java.lang.Math.round(double):long type: STATIC A[Catch:\{ all \-\> 0x0048 \}]\l0x008e: CAST  (r2 I:int) = (int) (r2 I:long) A[Catch:\{ all \-\> 0x0048 \}]\l}"];
Node_29 [shape=record,label="{29\:\ 0x008f|0x008f: IF  (r2 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:31:0x0094 A[Catch:\{ all \-\> 0x0048 \}]\l}"];
Node_30 [shape=record,label="{30\:\ 0x0091|0x0091: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0048 \}]\l0x0092: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0048 \}]\l0x0093: GOTO  \-\> 0x0098 A[Catch:\{ all \-\> 0x0048 \}]\l}"];
Node_31 [shape=record,label="{31\:\ 0x0094|0x0094: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0048 \}]\l0x0095: GOTO  \-\> 0x0097 A[Catch:\{ all \-\> 0x0048 \}]\l}"];
Node_32 [shape=record,label="{32\:\ 0x0096|0x0096: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0048 \}]\l}"];
Node_33 [shape=record,label="{33\:\ 0x0097|0x0097: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r15 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0048 \}]\l}"];
Node_34 [shape=record,label="{34\:\ 0x0098|0x0098: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0048 \}]\l0x009a: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0048 \}]\l0x009b: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r13 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0048 \}]\l0x009c: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0048 \}]\l0x009e: INVOKE  (r2 I:java.lang.Double[][]) = \l  (r1 I:mil.nga.geopackage.extension.coverage.CoverageData)\l  (r2 I:mil.nga.geopackage.tiles.matrix.TileMatrix)\l  (r3 I:mil.nga.geopackage.tiles.user.TileCursor)\l  (r4 I:mil.nga.geopackage.extension.coverage.CoverageDataRequest)\l  (r5 I:int)\l  (r6 I:int)\l  (r7 I:int)\l mil.nga.geopackage.extension.coverage.CoverageData.getValues(mil.nga.geopackage.tiles.matrix.TileMatrix, mil.nga.geopackage.tiles.user.TileCursor, mil.nga.geopackage.extension.coverage.CoverageDataRequest, int, int, int):java.lang.Double[][] type: DIRECT A[Catch:\{ all \-\> 0x0048 \}]\l}"];
Node_35 [shape=record,label="{35\:\ 0x00a2|0x00a2: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x00bc A[Catch:\{ all \-\> 0x0048 \}]\l}"];
Node_36 [shape=record,label="{36\:\ 0x00a4|0x00a4: IGET  (r1 I:boolean) = (r8 I:mil.nga.geopackage.extension.coverage.CoverageData) mil.nga.geopackage.extension.coverage.CoverageData.sameProjection boolean A[Catch:\{ all \-\> 0x0048 \}]\l}"];
Node_37 [shape=record,label="{37\:\ 0x00a6|0x00a6: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x00bc A[Catch:\{ all \-\> 0x0048 \}]\l}"];
Node_38 [shape=record,label="{38\:\ 0x00a8|0x00a8: INVOKE  (r1 I:boolean) = \l  (r17 I:mil.nga.geopackage.extension.coverage.CoverageDataRequest)\l mil.nga.geopackage.extension.coverage.CoverageDataRequest.isPoint():boolean type: VIRTUAL A[Catch:\{ all \-\> 0x0048 \}]\l}"];
Node_39 [shape=record,label="{39\:\ 0x00ac|0x00ac: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x00bc A[Catch:\{ all \-\> 0x0048 \}]\l}"];
Node_40 [shape=record,label="{40\:\ 0x00ae|0x00ae: INVOKE  (r5 I:mil.nga.geopackage.BoundingBox) = \l  (r17 I:mil.nga.geopackage.extension.coverage.CoverageDataRequest)\l mil.nga.geopackage.extension.coverage.CoverageDataRequest.getBoundingBox():mil.nga.geopackage.BoundingBox type: VIRTUAL A[Catch:\{ all \-\> 0x0048 \}]\l0x00b2: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0048 \}]\l0x00b4: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0048 \}]\l0x00b5: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r15 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0048 \}]\l0x00b6: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0048 \}]\l0x00b7: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0048 \}]\l0x00b8: INVOKE  (r2 I:java.lang.Double[][]) = \l  (r1 I:mil.nga.geopackage.extension.coverage.CoverageData)\l  (r2 I:java.lang.Double[][])\l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:mil.nga.geopackage.BoundingBox)\l  (r6 I:mil.nga.geopackage.projection.ProjectionTransform)\l  (r7 I:mil.nga.geopackage.BoundingBox)\l mil.nga.geopackage.extension.coverage.CoverageData.reprojectCoverageData(java.lang.Double[][], int, int, mil.nga.geopackage.BoundingBox, mil.nga.geopackage.projection.ProjectionTransform, mil.nga.geopackage.BoundingBox):java.lang.Double[][] type: VIRTUAL A[Catch:\{ all \-\> 0x0048 \}]\l}"];
Node_41 [shape=record,label="{41\:\ 0x00bc|0x00bc: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x00c4 A[Catch:\{ all \-\> 0x0048 \}]\l}"];
Node_42 [shape=record,label="{42\:\ 0x00be|0x00be: NEW_INSTANCE  (r0 I:mil.nga.geopackage.extension.coverage.CoverageDataResults) =  mil.nga.geopackage.extension.coverage.CoverageDataResults A[Catch:\{ all \-\> 0x0048 \}]\l0x00c0: INVOKE  \l  (r0 I:mil.nga.geopackage.extension.coverage.CoverageDataResults)\l  (r2 I:java.lang.Double[][])\l  (r12 I:mil.nga.geopackage.tiles.matrix.TileMatrix)\l mil.nga.geopackage.extension.coverage.CoverageDataResults.\<init\>(java.lang.Double[][], mil.nga.geopackage.tiles.matrix.TileMatrix):void type: DIRECT A[Catch:\{ all \-\> 0x0048 \}, TRY_LEAVE]\l}"];
Node_43 [shape=record,label="{43\:\ 0x00c3|0x00c3: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_44 [shape=record,label="{44\:\ 0x00c4|0x00c4: INVOKE  (r13 I:mil.nga.geopackage.tiles.user.TileCursor) mil.nga.geopackage.tiles.user.TileCursor.close():void type: VIRTUAL \l}"];
Node_45 [shape=record,label="{45\:\ 0x00c8|0x00c8: INVOKE  (r13 I:mil.nga.geopackage.tiles.user.TileCursor) mil.nga.geopackage.tiles.user.TileCursor.close():void type: VIRTUAL \l}"];
Node_46 [shape=record,label="{46\:\ 0x00cb|0x00cb: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_47 [shape=record,label="{47\:\ 0x00cc|0x00cc: RETURN  \l  (r9 I:mil.nga.geopackage.extension.coverage.CoverageDataResults)\l \l}"];
MethodNode[shape=record,label="{public mil.nga.geopackage.extension.coverage.CoverageDataResults mil.nga.geopackage.extension.coverage.CoverageData.getValues((r16 'this' I:mil.nga.geopackage.extension.coverage.CoverageData A[IMMUTABLE_TYPE, THIS]), (r17 I:mil.nga.geopackage.extension.coverage.CoverageDataRequest A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:java.lang.Integer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19 I:java.lang.Integer A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_47;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_17;
Node_12 -> Node_13;
Node_12 -> Node_15;
Node_13 -> Node_14;
Node_14 -> Node_18;
Node_15 -> Node_16;
Node_16 -> Node_45;
Node_17 -> Node_14;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_21;
Node_19 -> Node_20;
Node_20 -> Node_22;
Node_21 -> Node_20;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_32;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_28;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_34;
Node_31 -> Node_33;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_41;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_41;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_41;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_44;
Node_42 -> Node_43;
Node_43 -> Node_44;
Node_44 -> Node_47;
Node_45 -> Node_46;
}

