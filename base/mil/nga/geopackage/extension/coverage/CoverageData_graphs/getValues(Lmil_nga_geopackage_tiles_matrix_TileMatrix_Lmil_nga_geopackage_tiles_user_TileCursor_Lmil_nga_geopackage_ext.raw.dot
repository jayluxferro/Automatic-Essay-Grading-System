digraph "CFG formil.nga.geopackage.extension.coverage.CoverageData.getValues(Lmil\/nga\/geopackage\/tiles\/matrix\/TileMatrix;Lmil\/nga\/geopackage\/tiles\/user\/TileCursor;Lmil\/nga\/geopackage\/extension\/coverage\/CoverageDataRequest;III)[[Ljava\/lang\/Double;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r14 I:?[OBJECT, ARRAY]) = (r40 I:?[OBJECT, ARRAY]) \l0x0002: MOVE  (r15 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r44 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0004: MOVE  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r45 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0006: MOVE  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r46 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0008: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0009: MOVE  (r16 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x000b: CHECK_CAST  (r16 I:java.lang.Double[][]) = (java.lang.Double[][]) (r16 I:?[OBJECT, ARRAY]) \l0x000d: CONST  (r1 I:?[long, double]) = (\-1 ?[long, double]) \l0x000f: CONST  (r3 I:?[long, double]) = \l  (9223372036854775807(0x7fffffffffffffff, double:NaN) ?[long, double])\l \l0x0014: MOVE  (r5 I:?[long, double]) = (r3 I:?[long, double]) \l0x0015: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) \l0x0017: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0018: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l0x0019: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x001a|0x001a: INVOKE  (r8 I:boolean) = (r42 I:mil.nga.geopackage.tiles.user.TileCursor) mil.nga.geopackage.tiles.user.TileCursor.moveToNext():boolean type: VIRTUAL \l}"];
Node_2 [shape=record,label="{2\:\ 0x001e|0x001e: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:72:0x0323 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0020|0x0020: INVOKE  (r8 I:mil.nga.geopackage.user.UserRow) = (r42 I:mil.nga.geopackage.tiles.user.TileCursor) mil.nga.geopackage.tiles.user.TileCursor.getRow():mil.nga.geopackage.user.UserRow type: VIRTUAL \l0x0024: CHECK_CAST  (r8 I:mil.nga.geopackage.tiles.user.TileRow) = (mil.nga.geopackage.tiles.user.TileRow) (r8 I:?[OBJECT, ARRAY]) \l0x0026: INVOKE  (r23 I:long) = (r8 I:mil.nga.geopackage.tiles.user.TileRow) mil.nga.geopackage.tiles.user.TileRow.getTileRow():long type: VIRTUAL \l0x002a: INVOKE  (r25 I:long) = (r8 I:mil.nga.geopackage.tiles.user.TileRow) mil.nga.geopackage.tiles.user.TileRow.getTileColumn():long type: VIRTUAL \l0x002e: CMP_L  (r1 I:int) = (r23 I:long), (r1 I:long) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0030|0x0030: IF  (r1 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:6:0x003c \l}"];
Node_5 [shape=record,label="{5\:\ 0x0032|0x0032: NEW_INSTANCE  (r1 I:java.util.HashMap) =  java.util.HashMap \l0x0034: INVOKE  (r1 I:java.util.HashMap) java.util.HashMap.\<init\>():void type: DIRECT \l0x0037: MOVE  (r10 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l0x0038: MOVE  (r11 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l0x0039: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x003c|0x003c: MOVE  (r10 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l0x003d: MOVE  (r11 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x003e|0x003e: CONST  (r1 I:?[long, double]) = (1 ?[long, double]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0040|0x0040: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x005d \l}"];
Node_9 [shape=record,label="{9\:\ 0x0042|0x0042: ARITH  (r3 I:long) = (r25 I:long) \- (r1 I:long) \l0x0044: INVOKE  (r3 I:java.lang.Long) = (r3 I:long) java.lang.Long.valueOf(long):java.lang.Long type: STATIC \l0x0048: INVOKE  (r3 I:java.lang.Object) = (r11 I:java.util.Map), (r3 I:java.lang.Object) java.util.Map.get(java.lang.Object):java.lang.Object type: INTERFACE \l0x004c: CHECK_CAST  (r3 I:java.lang.Double[][]) = (java.lang.Double[][]) (r3 I:?[OBJECT, ARRAY]) \l0x004e: INVOKE  (r4 I:java.lang.Long) = (r25 I:long) java.lang.Long.valueOf(long):java.lang.Long type: STATIC \l0x0052: INVOKE  (r4 I:java.lang.Object) = (r11 I:java.util.Map), (r4 I:java.lang.Object) java.util.Map.get(java.lang.Object):java.lang.Object type: INTERFACE \l0x0056: CHECK_CAST  (r4 I:java.lang.Double[][]) = (java.lang.Double[][]) (r4 I:?[OBJECT, ARRAY]) \l0x0058: MOVE  (r27 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l0x005a: MOVE  (r28 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x005d|0x005d: MOVE  (r27 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) \l0x005f: MOVE  (r28 I:?[OBJECT, ARRAY]) = (r27 I:?[OBJECT, ARRAY]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0061|0x0061: CMP_L  (r3 I:int) = (r25 I:long), (r5 I:long) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0063|0x0063: IF  (r3 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:17:0x006e \l}"];
Node_13 [shape=record,label="{13\:\ 0x0065|0x0065: ARITH  (r5 I:long) = (r5 I:long) + (r1 I:long) \l0x0066: CMP_L  (r1 I:int) = (r25 I:long), (r5 I:long) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0068|0x0068: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x006b \l}"];
Node_16 [shape=record,label="{16\:\ 0x006b|0x006b: MOVE  (r29 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x006e|0x006e: MOVE  (r29 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0070|0x0070: IGET  (r1 I:mil.nga.geopackage.BoundingBox) = (r14 I:mil.nga.geopackage.extension.coverage.CoverageData) mil.nga.geopackage.extension.coverage.CoverageData.coverageBoundingBox mil.nga.geopackage.BoundingBox \l0x0072: MOVE  (r17 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l0x0074: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r41 I:?[OBJECT, ARRAY]) \l0x0076: MOVE  (r19 I:?[long, double]) = (r25 I:?[long, double]) \l0x0078: MOVE  (r21 I:?[long, double]) = (r23 I:?[long, double]) \l0x007a: INVOKE  (r6 I:mil.nga.geopackage.BoundingBox) = \l  (r17 I:mil.nga.geopackage.BoundingBox)\l  (r18 I:mil.nga.geopackage.tiles.matrix.TileMatrix)\l  (r19 I:long)\l  (r21 I:long)\l mil.nga.geopackage.tiles.TileBoundingBoxUtils.getBoundingBox(mil.nga.geopackage.BoundingBox, mil.nga.geopackage.tiles.matrix.TileMatrix, long, long):mil.nga.geopackage.BoundingBox type: STATIC \l0x007e: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r43 I:?[OBJECT, ARRAY]) \l0x0080: INVOKE  (r1 I:mil.nga.geopackage.BoundingBox) = \l  (r9 I:mil.nga.geopackage.extension.coverage.CoverageDataRequest)\l  (r6 I:mil.nga.geopackage.BoundingBox)\l mil.nga.geopackage.extension.coverage.CoverageDataRequest.overlap(mil.nga.geopackage.BoundingBox):mil.nga.geopackage.BoundingBox type: VIRTUAL \l0x0084: INVOKE  (r2 I:long) = (r8 I:mil.nga.geopackage.tiles.user.TileRow) mil.nga.geopackage.tiles.user.TileRow.getId():long type: VIRTUAL \l0x0088: INVOKE  (r7 I:mil.nga.geopackage.extension.coverage.GriddedTile) = \l  (r14 I:mil.nga.geopackage.extension.coverage.CoverageData)\l  (r2 I:long)\l mil.nga.geopackage.extension.coverage.CoverageData.getGriddedTile(long):mil.nga.geopackage.extension.coverage.GriddedTile type: VIRTUAL \l0x008c: INVOKE  (r8 I:mil.nga.geopackage.extension.coverage.CoverageDataImage) = \l  (r14 I:mil.nga.geopackage.extension.coverage.CoverageData)\l  (r8 I:mil.nga.geopackage.tiles.user.TileRow)\l mil.nga.geopackage.extension.coverage.CoverageData.createImage(mil.nga.geopackage.tiles.user.TileRow):mil.nga.geopackage.extension.coverage.CoverageDataImage type: VIRTUAL \l0x0090: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_19 [shape=record,label="{19\:\ 0x0091|0x0091: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:58:0x028f \l}"];
Node_20 [shape=record,label="{20\:\ 0x0093|0x0093: INVOKE  (r2 I:long) = (r41 I:mil.nga.geopackage.tiles.matrix.TileMatrix) mil.nga.geopackage.tiles.matrix.TileMatrix.getTileWidth():long type: VIRTUAL \l0x0097: INVOKE  (r17 I:long) = (r41 I:mil.nga.geopackage.tiles.matrix.TileMatrix) mil.nga.geopackage.tiles.matrix.TileMatrix.getTileHeight():long type: VIRTUAL \l0x009b: MOVE  (r30 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) \l0x009d: CONST  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x009e: MOVE  (r4 I:?[long, double]) = (r17 I:?[long, double]) \l0x00a0: MOVE  (r31 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l0x00a2: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l0x00a3: INVOKE  (r7 I:android.graphics.RectF) = \l  (r2 I:long)\l  (r4 I:long)\l  (r6 I:mil.nga.geopackage.BoundingBox)\l  (r7 I:mil.nga.geopackage.BoundingBox)\l mil.nga.geopackage.tiles.TileBoundingBoxAndroidUtils.getFloatRectangle(long, long, mil.nga.geopackage.BoundingBox, mil.nga.geopackage.BoundingBox):android.graphics.RectF type: STATIC \l0x00a7: INVOKE  (r2 I:mil.nga.geopackage.BoundingBox) = \l  (r43 I:mil.nga.geopackage.extension.coverage.CoverageDataRequest)\l mil.nga.geopackage.extension.coverage.CoverageDataRequest.getProjectedBoundingBox():mil.nga.geopackage.BoundingBox type: VIRTUAL \l0x00ab: INVOKE  (r2 I:boolean) = \l  (r2 I:mil.nga.geopackage.BoundingBox)\l  (r1 I:java.lang.Object)\l mil.nga.geopackage.BoundingBox.equals(java.lang.Object):boolean type: VIRTUAL \l0x00af: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_21 [shape=record,label="{21\:\ 0x00b0|0x00b0: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x00c6 \l}"];
Node_22 [shape=record,label="{22\:\ 0x00b2|0x00b2: INVOKE  (r1 I:boolean) = \l  (r43 I:mil.nga.geopackage.extension.coverage.CoverageDataRequest)\l mil.nga.geopackage.extension.coverage.CoverageDataRequest.isPoint():boolean type: VIRTUAL \l}"];
Node_23 [shape=record,label="{23\:\ 0x00b6|0x00b6: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x00be \l}"];
Node_24 [shape=record,label="{24\:\ 0x00b8|0x00b8: NEW_INSTANCE  (r1 I:android.graphics.RectF) =  android.graphics.RectF \l0x00ba: INVOKE  \l  (r1 I:android.graphics.RectF)\l  (r3 I:float)\l  (r3 I:float)\l  (r3 I:float)\l  (r3 I:float)\l android.graphics.RectF.\<init\>(float, float, float, float):void type: DIRECT \l}"];
Node_25 [shape=record,label="{25\:\ 0x00be|0x00be: NEW_INSTANCE  (r1 I:android.graphics.RectF) =  android.graphics.RectF \l0x00c0: CAST  (r2 I:float) = (float) (r15 I:int) \l0x00c1: CAST  (r4 I:float) = (float) (r13 I:int) \l0x00c2: INVOKE  \l  (r1 I:android.graphics.RectF)\l  (r3 I:float)\l  (r3 I:float)\l  (r2 I:float)\l  (r4 I:float)\l android.graphics.RectF.\<init\>(float, float, float, float):void type: DIRECT \l}"];
Node_26 [shape=record,label="{26\:\ 0x00c6|0x00c6: CAST  (r4 I:long) = (long) (r15 I:int) \l0x00c7: CAST  (r11 I:long) = (long) (r13 I:int) \l0x00c8: INVOKE  (r21 I:mil.nga.geopackage.BoundingBox) = \l  (r43 I:mil.nga.geopackage.extension.coverage.CoverageDataRequest)\l mil.nga.geopackage.extension.coverage.CoverageDataRequest.getProjectedBoundingBox():mil.nga.geopackage.BoundingBox type: VIRTUAL \l0x00cc: MOVE  (r17 I:?[long, double]) = (r4 I:?[long, double]) \l0x00ce: MOVE  (r19 I:?[long, double]) = (r11 I:?[long, double]) \l0x00d0: MOVE  (r22 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l0x00d2: INVOKE  (r1 I:android.graphics.RectF) = \l  (r17 I:long)\l  (r19 I:long)\l  (r21 I:mil.nga.geopackage.BoundingBox)\l  (r22 I:mil.nga.geopackage.BoundingBox)\l mil.nga.geopackage.tiles.TileBoundingBoxAndroidUtils.getFloatRectangle(long, long, mil.nga.geopackage.BoundingBox, mil.nga.geopackage.BoundingBox):android.graphics.RectF type: STATIC \l}"];
Node_27 [shape=record,label="{27\:\ 0x00d6|0x00d6: MOVE  (r12 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l0x00d7: INVOKE  (r1 I:boolean) = (r7 I:android.graphics.RectF) mil.nga.geopackage.tiles.TileBoundingBoxAndroidUtils.isValidAllowEmpty(android.graphics.RectF):boolean type: STATIC \l}"];
Node_28 [shape=record,label="{28\:\ 0x00db|0x00db: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:57:0x0287 \l}"];
Node_29 [shape=record,label="{29\:\ 0x00dd|0x00dd: INVOKE  (r1 I:boolean) = (r12 I:android.graphics.RectF) mil.nga.geopackage.tiles.TileBoundingBoxAndroidUtils.isValidAllowEmpty(android.graphics.RectF):boolean type: STATIC \l}"];
Node_30 [shape=record,label="{30\:\ 0x00e1|0x00e1: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:57:0x0287 \l}"];
Node_31 [shape=record,label="{31\:\ 0x00e3|0x00e3: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x00f1 \l}"];
Node_32 [shape=record,label="{32\:\ 0x00e5|0x00e5: FILLED_NEW_ARRAY  (r0 I:int[]) = \l  (r13 I:int A[IMMUTABLE_TYPE])\l  (r15 I:int A[IMMUTABLE_TYPE])\l elemType: int \l0x00e9: CONST_CLASS  (r1 I:java.lang.Class\<java.lang.Double\>) =  java.lang.Double.class \l0x00eb: INVOKE  (r0 I:java.lang.Object) = (r1 I:java.lang.Class), (r0 I:int[]) java.lang.reflect.Array.newInstance(java.lang.Class, int[]):java.lang.Object type: STATIC \l0x00ef: CHECK_CAST  (r0 I:java.lang.Double[][]) = (java.lang.Double[][]) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_33 [shape=record,label="{33\:\ 0x00f1|0x00f1: MOVE  (r17 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x00f3: IGET  (r0 I:float) = (r12 I:android.graphics.RectF) android.graphics.RectF.right float \l0x00f5: IGET  (r1 I:float) = (r12 I:android.graphics.RectF) android.graphics.RectF.left float \l0x00f7: ARITH  (r0 I:float) = (r0 I:float) \- (r1 I:float) \l0x00f8: IGET  (r1 I:float) = (r12 I:android.graphics.RectF) android.graphics.RectF.bottom float \l0x00fa: IGET  (r2 I:float) = (r12 I:android.graphics.RectF) android.graphics.RectF.top float \l0x00fc: ARITH  (r1 I:float) = (r1 I:float) \- (r2 I:float) \l0x00fd: IGET  (r2 I:float) = (r7 I:android.graphics.RectF) android.graphics.RectF.right float \l0x00ff: IGET  (r4 I:float) = (r7 I:android.graphics.RectF) android.graphics.RectF.left float \l0x0101: ARITH  (r2 I:float) = (r2 I:float) \- (r4 I:float) \l0x0102: IGET  (r4 I:float) = (r7 I:android.graphics.RectF) android.graphics.RectF.bottom float \l0x0104: IGET  (r5 I:float) = (r7 I:android.graphics.RectF) android.graphics.RectF.top float \l0x0106: ARITH  (r4 I:float) = (r4 I:float) \- (r5 I:float) \l0x0107: CONST  (r5 I:?[int, float, short, byte, char]) = \l  (1056964608(0x3f000000, float:0.5) ?[int, float, short, byte, char])\l \l0x0109: CMP_L  (r6 I:int) = (r0 I:float), (r3 I:float) \l}"];
Node_34 [shape=record,label="{34\:\ 0x010b|0x010b: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x0111 \l}"];
Node_35 [shape=record,label="{35\:\ 0x010d|0x010d: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x010e: CONST  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_36 [shape=record,label="{36\:\ 0x0111|0x0111: ARITH  (r2 I:float) = (r2 I:float) \/ (r0 I:float) \l0x0112: ARITH  (r0 I:float) = (r5 I:float) \/ (r2 I:float) \l0x0114: MOVE  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_37 [shape=record,label="{37\:\ 0x0116|0x0116: CMP_L  (r2 I:int) = (r1 I:float), (r3 I:float) \l}"];
Node_38 [shape=record,label="{38\:\ 0x0118|0x0118: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x011f \l}"];
Node_39 [shape=record,label="{39\:\ 0x011a|0x011a: MOVE  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r46 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x011c: CONST  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_40 [shape=record,label="{40\:\ 0x011f|0x011f: ARITH  (r4 I:float) = (r4 I:float) \/ (r1 I:float) \l0x0120: ARITH  (r3 I:float) = (r5 I:float) \/ (r4 I:float) \l0x0122: MOVE  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0124: MOVE  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r46 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_41 [shape=record,label="{41\:\ 0x0126|0x0126: CAST  (r1 I:float) = (float) (r11 I:int) \l0x0127: ARITH  (r0 I:float) = (r0 I:float) * (r1 I:float) \l0x0129: ARITH  (r3 I:float) = (r3 I:float) * (r1 I:float) \l0x012b: IGET  (r1 I:float) = (r12 I:android.graphics.RectF) android.graphics.RectF.top float \l0x012d: ARITH  (r1 I:float) = (r1 I:float) \- (r3 I:float) \l0x012e: CAST  (r1 I:double) = (double) (r1 I:float) \l0x012f: INVOKE  (r1 I:double) = (r1 I:double) java.lang.Math.floor(double):double type: STATIC \l0x0133: CAST  (r1 I:int) = (int) (r1 I:double) \l0x0134: IGET  (r2 I:float) = (r12 I:android.graphics.RectF) android.graphics.RectF.bottom float \l0x0136: ARITH  (r2 I:float) = (r2 I:float) + (r3 I:float) \l0x0137: CAST  (r2 I:double) = (double) (r2 I:float) \l0x0138: INVOKE  (r2 I:double) = (r2 I:double) java.lang.Math.ceil(double):double type: STATIC \l0x013c: CAST  (r2 I:int) = (int) (r2 I:double) \l0x013d: IGET  (r3 I:float) = (r12 I:android.graphics.RectF) android.graphics.RectF.left float \l0x013f: ARITH  (r3 I:float) = (r3 I:float) \- (r0 I:float) \l0x0140: CAST  (r3 I:double) = (double) (r3 I:float) \l0x0141: INVOKE  (r3 I:double) = (r3 I:double) java.lang.Math.floor(double):double type: STATIC \l0x0145: CAST  (r3 I:int) = (int) (r3 I:double) \l0x0146: IGET  (r4 I:float) = (r12 I:android.graphics.RectF) android.graphics.RectF.right float \l0x0148: ARITH  (r4 I:float) = (r4 I:float) + (r0 I:float) \l0x0149: CAST  (r4 I:double) = (double) (r4 I:float) \l0x014a: INVOKE  (r4 I:double) = (r4 I:double) java.lang.Math.ceil(double):double type: STATIC \l0x014e: CAST  (r0 I:int) = (int) (r4 I:double) \l0x014f: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0150: INVOKE  (r1 I:int) = (r1 I:int), (r6 I:int) java.lang.Math.max(int, int):int type: STATIC \l0x0154: INVOKE  (r20 I:int) = (r3 I:int), (r6 I:int) java.lang.Math.max(int, int):int type: STATIC \l0x0158: ARITH  (r3 I:int) = (r13 I:int) + (\-1 int) \l0x015a: INVOKE  (r5 I:int) = (r2 I:int), (r3 I:int) java.lang.Math.min(int, int):int type: STATIC \l0x015e: ARITH  (r2 I:int) = (r15 I:int) + (\-1 int) \l0x0160: INVOKE  (r4 I:int) = (r0 I:int), (r2 I:int) java.lang.Math.min(int, int):int type: STATIC \l0x0164: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_42 [shape=record,label="{42\:\ 0x0165|0x0165: IF  (r3 I:?[int, byte, short, char]) \> (r5 I:?[int, byte, short, char])  \-\> B:56:0x027b \l}"];
Node_43 [shape=record,label="{43\:\ 0x0167|0x0167: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_44 [shape=record,label="{44\:\ 0x0169|0x0169: IF  (r2 I:?[int, byte, short, char]) \> (r4 I:?[int, byte, short, char])  \-\> B:55:0x025b \l}"];
Node_45 [shape=record,label="{45\:\ 0x016b|0x016b: SGET  (r0 I:int[]) =  mil.nga.geopackage.extension.coverage.CoverageData.1.$SwitchMap$mil$nga$geopackage$extension$coverage$CoverageDataAlgorithm int[] \l0x016d: IGET  (r1 I:mil.nga.geopackage.extension.coverage.CoverageDataAlgorithm) = (r14 I:mil.nga.geopackage.extension.coverage.CoverageData) mil.nga.geopackage.extension.coverage.CoverageData.algorithm mil.nga.geopackage.extension.coverage.CoverageDataAlgorithm \l0x016f: INVOKE  (r1 I:int) = \l  (r1 I:mil.nga.geopackage.extension.coverage.CoverageDataAlgorithm)\l mil.nga.geopackage.extension.coverage.CoverageDataAlgorithm.ordinal():int type: VIRTUAL \l0x0173: AGET  (r0 I:?[int, float]) = (r0 I:?[int, float][]), (r1 I:?[int, short, byte, char]) \l}"];
Node_46 [shape=record,label="{46\:\ 0x0175|0x0175: SWITCH  \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[1, 2, 3] t:[0x0206, 0x01d3, 0x0193] \l}"];
Node_47 [shape=record,label="{47\:\ 0x0178|0x0178: NEW_INSTANCE  (r0 I:java.lang.UnsupportedOperationException) =  java.lang.UnsupportedOperationException \l0x017a: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x017c: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x017f: CONST_STR  (r2 I:java.lang.String) =  \"Algorithm is not supported: \" \l0x0181: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0184: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r40 I:?[OBJECT, ARRAY]) \l0x0186: IGET  (r3 I:mil.nga.geopackage.extension.coverage.CoverageDataAlgorithm) = (r2 I:mil.nga.geopackage.extension.coverage.CoverageData) mil.nga.geopackage.extension.coverage.CoverageData.algorithm mil.nga.geopackage.extension.coverage.CoverageDataAlgorithm \l0x0188: INVOKE  (r1 I:java.lang.StringBuilder), (r3 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x018b: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x018f: INVOKE  \l  (r0 I:java.lang.UnsupportedOperationException)\l  (r1 I:java.lang.String)\l java.lang.UnsupportedOperationException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_48 [shape=record,label="{48\:\ 0x0192|0x0192: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_49 [shape=record,label="{49\:\ 0x0193|0x0193: IGET  (r1 I:float) = (r12 I:android.graphics.RectF) android.graphics.RectF.top float \l0x0195: IGET  (r0 I:float) = (r12 I:android.graphics.RectF) android.graphics.RectF.left float \l0x0197: MOVE  (r33 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) \l0x0199: IGET  (r12 I:float) = (r7 I:android.graphics.RectF) android.graphics.RectF.top float \l0x019b: IGET  (r13 I:float) = (r7 I:android.graphics.RectF) android.graphics.RectF.left float \l0x019d: MOVE  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x019f: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r40 I:?[OBJECT, ARRAY]) \l0x01a1: MOVE  (r22 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x01a3: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r31 I:?[OBJECT, ARRAY]) \l0x01a5: MOVE  (r32 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x01a7: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x01a8: MOVE  (r34 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x01aa: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r29 I:?[OBJECT, ARRAY]) \l0x01ac: MOVE  (r35 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x01ae: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r27 I:?[OBJECT, ARRAY]) \l0x01b0: MOVE  (r36 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x01b2: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r28 I:?[OBJECT, ARRAY]) \l0x01b4: CONST  (r37 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x01b6: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r34 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x01b8: MOVE  (r15 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l0x01b9: MOVE  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r32 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x01bb: MOVE  (r38 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x01bd: MOVE  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x01bf: MOVE  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x01c1: MOVE  (r39 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x01c3: MOVE  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r22 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x01c5: MOVE  (r22 I:?[OBJECT, ARRAY]) = (r30 I:?[OBJECT, ARRAY]) \l0x01c7: CONST  (r30 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x01c9: MOVE  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x01cb: MOVE  (r14 I:?[OBJECT, ARRAY]) = (r33 I:?[OBJECT, ARRAY]) \l0x01cd: INVOKE  (r0 I:java.lang.Double) = \l  (r0 I:mil.nga.geopackage.extension.coverage.CoverageData)\l  (r1 I:mil.nga.geopackage.extension.coverage.GriddedTile)\l  (r2 I:mil.nga.geopackage.extension.coverage.CoverageDataImage)\l  (r3 I:java.lang.Double[][])\l  (r4 I:java.lang.Double[][])\l  (r5 I:java.lang.Double[][])\l  (r6 I:int)\l  (r7 I:int)\l  (r8 I:float)\l  (r9 I:float)\l  (r10 I:float)\l  (r11 I:float)\l  (r12 I:float)\l  (r13 I:float)\l mil.nga.geopackage.extension.coverage.CoverageData.getBilinearInterpolationValue(mil.nga.geopackage.extension.coverage.GriddedTile, mil.nga.geopackage.extension.coverage.CoverageDataImage, java.lang.Double[][], java.lang.Double[][], java.lang.Double[][], int, int, float, float, float, float, float, float):java.lang.Double type: VIRTUAL \l}"];
Node_50 [shape=record,label="{50\:\ 0x01d3|0x01d3: MOVE  (r32 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x01d5: MOVE  (r34 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x01d7: MOVE  (r35 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x01d9: MOVE  (r36 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x01db: MOVE  (r15 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l0x01dc: MOVE  (r38 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x01de: MOVE  (r39 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x01e0: MOVE  (r14 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) \l0x01e1: MOVE  (r22 I:?[OBJECT, ARRAY]) = (r30 I:?[OBJECT, ARRAY]) \l0x01e3: CONST  (r30 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x01e5: IGET  (r10 I:float) = (r14 I:android.graphics.RectF) android.graphics.RectF.top float \l0x01e7: IGET  (r11 I:float) = (r14 I:android.graphics.RectF) android.graphics.RectF.left float \l0x01e9: IGET  (r12 I:float) = (r15 I:android.graphics.RectF) android.graphics.RectF.top float \l0x01eb: IGET  (r13 I:float) = (r15 I:android.graphics.RectF) android.graphics.RectF.left float \l0x01ed: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r40 I:?[OBJECT, ARRAY]) \l0x01ef: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r31 I:?[OBJECT, ARRAY]) \l0x01f1: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r38 I:?[OBJECT, ARRAY]) \l0x01f3: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r29 I:?[OBJECT, ARRAY]) \l0x01f5: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r27 I:?[OBJECT, ARRAY]) \l0x01f7: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r28 I:?[OBJECT, ARRAY]) \l0x01f9: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r34 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x01fb: MOVE  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r32 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x01fd: MOVE  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x01ff: MOVE  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0201: INVOKE  (r0 I:java.lang.Double) = \l  (r0 I:mil.nga.geopackage.extension.coverage.CoverageData)\l  (r1 I:mil.nga.geopackage.extension.coverage.GriddedTile)\l  (r2 I:mil.nga.geopackage.extension.coverage.CoverageDataImage)\l  (r3 I:java.lang.Double[][])\l  (r4 I:java.lang.Double[][])\l  (r5 I:java.lang.Double[][])\l  (r6 I:int)\l  (r7 I:int)\l  (r8 I:float)\l  (r9 I:float)\l  (r10 I:float)\l  (r11 I:float)\l  (r12 I:float)\l  (r13 I:float)\l mil.nga.geopackage.extension.coverage.CoverageData.getNearestNeighborValue(mil.nga.geopackage.extension.coverage.GriddedTile, mil.nga.geopackage.extension.coverage.CoverageDataImage, java.lang.Double[][], java.lang.Double[][], java.lang.Double[][], int, int, float, float, float, float, float, float):java.lang.Double type: VIRTUAL \l}"];
Node_51 [shape=record,label="{51\:\ 0x0206|0x0206: MOVE  (r32 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0208: MOVE  (r34 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x020a: MOVE  (r35 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x020c: MOVE  (r36 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x020e: MOVE  (r15 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l0x020f: MOVE  (r38 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x0211: MOVE  (r39 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x0213: MOVE  (r14 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) \l0x0214: MOVE  (r22 I:?[OBJECT, ARRAY]) = (r30 I:?[OBJECT, ARRAY]) \l0x0216: CONST  (r30 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0218: IGET  (r10 I:float) = (r14 I:android.graphics.RectF) android.graphics.RectF.top float \l0x021a: IGET  (r11 I:float) = (r14 I:android.graphics.RectF) android.graphics.RectF.left float \l0x021c: IGET  (r12 I:float) = (r15 I:android.graphics.RectF) android.graphics.RectF.top float \l0x021e: IGET  (r13 I:float) = (r15 I:android.graphics.RectF) android.graphics.RectF.left float \l0x0220: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r40 I:?[OBJECT, ARRAY]) \l0x0222: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r31 I:?[OBJECT, ARRAY]) \l0x0224: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r38 I:?[OBJECT, ARRAY]) \l0x0226: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r29 I:?[OBJECT, ARRAY]) \l0x0228: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r27 I:?[OBJECT, ARRAY]) \l0x022a: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r28 I:?[OBJECT, ARRAY]) \l0x022c: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r34 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x022e: MOVE  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r32 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0230: MOVE  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0232: MOVE  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0234: INVOKE  (r0 I:java.lang.Double) = \l  (r0 I:mil.nga.geopackage.extension.coverage.CoverageData)\l  (r1 I:mil.nga.geopackage.extension.coverage.GriddedTile)\l  (r2 I:mil.nga.geopackage.extension.coverage.CoverageDataImage)\l  (r3 I:java.lang.Double[][])\l  (r4 I:java.lang.Double[][])\l  (r5 I:java.lang.Double[][])\l  (r6 I:int)\l  (r7 I:int)\l  (r8 I:float)\l  (r9 I:float)\l  (r10 I:float)\l  (r11 I:float)\l  (r12 I:float)\l  (r13 I:float)\l mil.nga.geopackage.extension.coverage.CoverageData.getBicubicInterpolationValue(mil.nga.geopackage.extension.coverage.GriddedTile, mil.nga.geopackage.extension.coverage.CoverageDataImage, java.lang.Double[][], java.lang.Double[][], java.lang.Double[][], int, int, float, float, float, float, float, float):java.lang.Double type: VIRTUAL \l}"];
Node_52 [shape=record,label="{52\:\ 0x0238|0x0238: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x023e \l}"];
Node_53 [shape=record,label="{53\:\ 0x023a|0x023a: AGET  (r1 I:?[OBJECT, ARRAY]) = \l  (r17 I:?[OBJECT, ARRAY][])\l  (r34 I:?[int, short, byte, char])\l \l0x023c: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r32 I:?[int, short, byte, char])\l  (r0 I:?[OBJECT, ARRAY])\l \l}"];
Node_54 [shape=record,label="{54\:\ 0x023e|0x023e: ARITH  (r2 I:int) = (r32 I:int) + (1 int) \l0x0240: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r43 I:?[OBJECT, ARRAY]) \l0x0242: MOVE  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r45 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0244: MOVE  (r12 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY]) \l0x0245: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r15 I:?[OBJECT, ARRAY]) \l0x0246: MOVE  (r30 I:?[OBJECT, ARRAY]) = (r22 I:?[OBJECT, ARRAY]) \l0x0248: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r34 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x024a: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r35 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x024c: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r36 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x024e: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r38 I:?[OBJECT, ARRAY]) \l0x0250: MOVE  (r10 I:?[OBJECT, ARRAY]) = (r39 I:?[OBJECT, ARRAY]) \l0x0252: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0253: MOVE  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r46 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0255: MOVE  (r14 I:?[OBJECT, ARRAY]) = (r40 I:?[OBJECT, ARRAY]) \l0x0257: MOVE  (r15 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r44 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_55 [shape=record,label="{55\:\ 0x025b|0x025b: MOVE  (r34 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x025d: MOVE  (r35 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x025f: MOVE  (r36 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0261: MOVE  (r15 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l0x0262: MOVE  (r38 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x0264: MOVE  (r39 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x0266: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) \l0x0267: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY]) \l0x0268: MOVE  (r22 I:?[OBJECT, ARRAY]) = (r30 I:?[OBJECT, ARRAY]) \l0x026a: CONST  (r30 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x026c: ARITH  (r3 I:int) = (r34 I:int) + (1 int) \l0x026e: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r43 I:?[OBJECT, ARRAY]) \l0x0270: MOVE  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r45 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0272: MOVE  (r30 I:?[OBJECT, ARRAY]) = (r22 I:?[OBJECT, ARRAY]) \l0x0274: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0275: MOVE  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r46 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0277: MOVE  (r15 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r44 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_56 [shape=record,label="{56\:\ 0x027b|0x027b: MOVE  (r38 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x027d: MOVE  (r39 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x027f: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY]) \l0x0280: MOVE  (r22 I:?[OBJECT, ARRAY]) = (r30 I:?[OBJECT, ARRAY]) \l0x0282: CONST  (r30 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0284: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l}"];
Node_57 [shape=record,label="{57\:\ 0x0287|0x0287: MOVE  (r38 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x0289: MOVE  (r39 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x028b: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY]) \l0x028c: MOVE  (r22 I:?[OBJECT, ARRAY]) = (r30 I:?[OBJECT, ARRAY]) \l}"];
Node_58 [shape=record,label="{58\:\ 0x028f|0x028f: MOVE  (r31 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l0x0291: MOVE  (r38 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x0293: MOVE  (r39 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x0295: MOVE  (r22 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) \l0x0297: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY]) \l}"];
Node_59 [shape=record,label="{59\:\ 0x0298|0x0298: CONST  (r30 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_60 [shape=record,label="{60\:\ 0x029a|0x029a: INVOKE  (r3 I:long) = (r41 I:mil.nga.geopackage.tiles.matrix.TileMatrix) mil.nga.geopackage.tiles.matrix.TileMatrix.getTileHeight():long type: VIRTUAL \l0x029e: CAST  (r1 I:int) = (int) (r3 I:long) \l0x029f: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r46 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x02a1: FILLED_NEW_ARRAY  (r1 I:int[]) = (r3 I:int A[IMMUTABLE_TYPE]), (r1 I:int A[IMMUTABLE_TYPE]) elemType: int \l0x02a5: CONST_CLASS  (r4 I:java.lang.Class\<java.lang.Double\>) =  java.lang.Double.class \l0x02a7: INVOKE  (r1 I:java.lang.Object) = (r4 I:java.lang.Class), (r1 I:int[]) java.lang.reflect.Array.newInstance(java.lang.Class, int[]):java.lang.Object type: STATIC \l0x02ab: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l0x02ac: CHECK_CAST  (r7 I:java.lang.Double[][]) = (java.lang.Double[][]) (r7 I:?[OBJECT, ARRAY]) \l0x02ae: INVOKE  (r4 I:long) = (r41 I:mil.nga.geopackage.tiles.matrix.TileMatrix) mil.nga.geopackage.tiles.matrix.TileMatrix.getTileWidth():long type: VIRTUAL \l0x02b2: CAST  (r1 I:int) = (int) (r4 I:long) \l0x02b3: FILLED_NEW_ARRAY  (r1 I:int[]) = (r3 I:int A[IMMUTABLE_TYPE]), (r1 I:int A[IMMUTABLE_TYPE]) elemType: int \l0x02b7: CONST_CLASS  (r4 I:java.lang.Class\<java.lang.Double\>) =  java.lang.Double.class \l0x02b9: INVOKE  (r1 I:java.lang.Object) = (r4 I:java.lang.Class), (r1 I:int[]) java.lang.reflect.Array.newInstance(java.lang.Class, int[]):java.lang.Object type: STATIC \l0x02bd: CHECK_CAST  (r1 I:java.lang.Double[][]) = (java.lang.Double[][]) (r1 I:?[OBJECT, ARRAY]) \l0x02bf: INVOKE  (r4 I:java.lang.Long) = (r25 I:long) java.lang.Long.valueOf(long):java.lang.Long type: STATIC \l0x02c3: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r39 I:?[OBJECT, ARRAY]) \l0x02c5: INVOKE  \l  (r5 I:java.util.Map)\l  (r4 I:java.lang.Object)\l  (r1 I:java.lang.Object)\l java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE \l0x02c8: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_61 [shape=record,label="{61\:\ 0x02c9|0x02c9: IF  (r4 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char])  \-\> B:71:0x0314 \l}"];
Node_62 [shape=record,label="{62\:\ 0x02cb|0x02cb: INVOKE  (r8 I:long) = (r41 I:mil.nga.geopackage.tiles.matrix.TileMatrix) mil.nga.geopackage.tiles.matrix.TileMatrix.getTileWidth():long type: VIRTUAL \l0x02cf: CAST  (r6 I:int) = (int) (r8 I:long) \l0x02d0: ARITH  (r6 I:int) = (r6 I:int) \- (r4 I:int) \l0x02d1: ARITH  (r6 I:int) = (r6 I:int) + (\-1 int) \l0x02d3: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_63 [shape=record,label="{63\:\ 0x02d4|0x02d4: CAST  (r9 I:long) = (long) (r8 I:int) \l0x02d5: INVOKE  (r11 I:long) = (r41 I:mil.nga.geopackage.tiles.matrix.TileMatrix) mil.nga.geopackage.tiles.matrix.TileMatrix.getTileHeight():long type: VIRTUAL \l0x02d9: CMP_L  (r9 I:int) = (r9 I:long), (r11 I:long) \l}"];
Node_64 [shape=record,label="{64\:\ 0x02db|0x02db: IF  (r9 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:66:0x02ec \l}"];
Node_65 [shape=record,label="{65\:\ 0x02dd|0x02dd: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r31 I:?[OBJECT, ARRAY]) \l0x02df: MOVE  (r10 I:?[OBJECT, ARRAY]) = (r38 I:?[OBJECT, ARRAY]) \l0x02e1: INVOKE  (r11 I:java.lang.Double) = \l  (r2 I:mil.nga.geopackage.extension.coverage.CoverageData)\l  (r9 I:mil.nga.geopackage.extension.coverage.GriddedTile)\l  (r10 I:mil.nga.geopackage.extension.coverage.CoverageDataImage)\l  (r6 I:int)\l  (r8 I:int)\l mil.nga.geopackage.extension.coverage.CoverageData.getValue(mil.nga.geopackage.extension.coverage.GriddedTile, mil.nga.geopackage.extension.coverage.CoverageDataImage, int, int):java.lang.Double type: VIRTUAL \l0x02e5: AGET  (r12 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY][]), (r4 I:?[int, short, byte, char]) \l0x02e7: APUT  \l  (r12 I:?[OBJECT, ARRAY][])\l  (r8 I:?[int, short, byte, char])\l  (r11 I:?[OBJECT, ARRAY])\l \l0x02e9: ARITH  (r8 I:int) = (r8 I:int) + (1 int) \l}"];
Node_66 [shape=record,label="{66\:\ 0x02ec|0x02ec: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r31 I:?[OBJECT, ARRAY]) \l0x02ee: MOVE  (r10 I:?[OBJECT, ARRAY]) = (r38 I:?[OBJECT, ARRAY]) \l0x02f0: INVOKE  (r11 I:long) = (r41 I:mil.nga.geopackage.tiles.matrix.TileMatrix) mil.nga.geopackage.tiles.matrix.TileMatrix.getTileHeight():long type: VIRTUAL \l0x02f4: CAST  (r6 I:int) = (int) (r11 I:long) \l0x02f5: ARITH  (r6 I:int) = (r6 I:int) \- (r4 I:int) \l0x02f6: ARITH  (r6 I:int) = (r6 I:int) + (\-1 int) \l0x02f8: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_67 [shape=record,label="{67\:\ 0x02f9|0x02f9: CAST  (r11 I:long) = (long) (r8 I:int) \l0x02fa: INVOKE  (r13 I:long) = (r41 I:mil.nga.geopackage.tiles.matrix.TileMatrix) mil.nga.geopackage.tiles.matrix.TileMatrix.getTileWidth():long type: VIRTUAL \l0x02fe: CMP_L  (r11 I:int) = (r11 I:long), (r13 I:long) \l}"];
Node_68 [shape=record,label="{68\:\ 0x0300|0x0300: IF  (r11 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:70:0x030d \l}"];
Node_69 [shape=record,label="{69\:\ 0x0302|0x0302: INVOKE  (r11 I:java.lang.Double) = \l  (r2 I:mil.nga.geopackage.extension.coverage.CoverageData)\l  (r9 I:mil.nga.geopackage.extension.coverage.GriddedTile)\l  (r10 I:mil.nga.geopackage.extension.coverage.CoverageDataImage)\l  (r8 I:int)\l  (r6 I:int)\l mil.nga.geopackage.extension.coverage.CoverageData.getValue(mil.nga.geopackage.extension.coverage.GriddedTile, mil.nga.geopackage.extension.coverage.CoverageDataImage, int, int):java.lang.Double type: VIRTUAL \l0x0306: AGET  (r12 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY][]), (r4 I:?[int, short, byte, char]) \l0x0308: APUT  \l  (r12 I:?[OBJECT, ARRAY][])\l  (r8 I:?[int, short, byte, char])\l  (r11 I:?[OBJECT, ARRAY])\l \l0x030a: ARITH  (r8 I:int) = (r8 I:int) + (1 int) \l}"];
Node_70 [shape=record,label="{70\:\ 0x030d|0x030d: ARITH  (r4 I:int) = (r4 I:int) + (1 int) \l0x030f: MOVE  (r31 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x0311: MOVE  (r38 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l}"];
Node_71 [shape=record,label="{71\:\ 0x0314|0x0314: MOVE  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r45 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0316: MOVE  (r14 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l0x0317: MOVE  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0318: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r5 I:?[OBJECT, ARRAY]) \l0x0319: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r22 I:?[OBJECT, ARRAY]) \l0x031b: MOVE  (r1 I:?[long, double]) = (r23 I:?[long, double]) \l0x031d: MOVE  (r5 I:?[long, double]) = (r25 I:?[long, double]) \l0x031f: MOVE  (r15 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r44 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_72 [shape=record,label="{72\:\ 0x0323|0x0323: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY]) \l}"];
Node_73 [shape=record,label="{73\:\ 0x0324|0x0324: RETURN  (r0 I:java.lang.Double[][]) \l}"];
MethodNode[shape=record,label="{private java.lang.Double[][] mil.nga.geopackage.extension.coverage.CoverageData.getValues((r40 'this' I:mil.nga.geopackage.extension.coverage.CoverageData A[IMMUTABLE_TYPE, THIS]), (r41 I:mil.nga.geopackage.tiles.matrix.TileMatrix A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r42 I:mil.nga.geopackage.tiles.user.TileCursor A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r43 I:mil.nga.geopackage.extension.coverage.CoverageDataRequest A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r44 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r45 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r46 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_72;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_17;
Node_13 -> Node_14;
Node_14 -> Node_16;
Node_14 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_58;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_26;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_27;
Node_25 -> Node_27;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_57;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_57;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_36;
Node_35 -> Node_37;
Node_36 -> Node_37;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_40;
Node_39 -> Node_41;
Node_40 -> Node_41;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_56;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_55;
Node_45 -> Node_46;
Node_46 -> Node_47;
Node_46 -> Node_49;
Node_46 -> Node_50;
Node_46 -> Node_51;
Node_47 -> Node_48;
Node_49 -> Node_52;
Node_50 -> Node_52;
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_54;
Node_53 -> Node_54;
Node_54 -> Node_44;
Node_55 -> Node_42;
Node_56 -> Node_60;
Node_57 -> Node_59;
Node_58 -> Node_59;
Node_59 -> Node_60;
Node_60 -> Node_61;
Node_61 -> Node_62[style=dashed];
Node_61 -> Node_71;
Node_62 -> Node_63;
Node_63 -> Node_64;
Node_64 -> Node_65[style=dashed];
Node_64 -> Node_66;
Node_65 -> Node_63;
Node_66 -> Node_67;
Node_67 -> Node_68;
Node_68 -> Node_69[style=dashed];
Node_68 -> Node_70;
Node_69 -> Node_67;
Node_70 -> Node_61;
Node_71 -> Node_1;
Node_72 -> Node_73;
}

