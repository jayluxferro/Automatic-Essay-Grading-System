digraph "CFG formil.nga.geopackage.extension.coverage.CoverageData.getValuesUnbounded(Lmil\/nga\/geopackage\/tiles\/matrix\/TileMatrix;Lmil\/nga\/geopackage\/tiles\/user\/TileCursor;Lmil\/nga\/geopackage\/extension\/coverage\/CoverageDataRequest;)[[Ljava\/lang\/Double;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r12 = r27\ljava.util.TreeMap r2 = new java.util.TreeMap()\lr0 = null\lr1 = null\lr4 = null\lr5 = null\lr3 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x000d|LOOP_START\lPHI: r0 r1 r3 r4 r5 \l  PHI: (r0v1 java.lang.Long) = (r0v0 java.lang.Long), (r0v4 java.lang.Long) binds: [B:0:0x0000, B:37:0x000d] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v2 java.lang.Long) = (r1v1 java.lang.Long), (r1v4 java.lang.Long) binds: [B:0:0x0000, B:37:0x000d] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v1 int) = (r3v0 int), (r3v2 int) binds: [B:0:0x0000, B:37:0x000d] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v1 java.lang.Long) = (r4v0 java.lang.Long), (r4v3 java.lang.Long) binds: [B:0:0x0000, B:37:0x000d] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v1 java.lang.Long) = (r5v0 java.lang.Long), (r5v3 java.lang.Long) binds: [B:0:0x0000, B:37:0x000d] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000d\-\>B:37:0x000d\l}"];
Node_2 [shape=record,label="{2\:\ 0x0011|if (r29.moveToNext() == false) goto L_0x014b\l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|mil.nga.geopackage.tiles.user.TileRow r6 = (mil.nga.geopackage.tiles.user.TileRow) r29.getRow()\lr14 = r28\lmil.nga.geopackage.BoundingBox r7 = mil.nga.geopackage.tiles.TileBoundingBoxUtils.getBoundingBox(r12.coverageBoundingBox, r14, r6.getTileColumn(), r6.getTileRow())\lmil.nga.geopackage.BoundingBox r24 = r30.overlap(r7)\l}"];
Node_4 [shape=record,label="{4\:\ 0x002f|if (r24 == null) goto L_0x0145\l}"];
Node_5 [shape=record,label="{5\:\ 0x0031|android.graphics.Rect r7 = mil.nga.geopackage.tiles.TileBoundingBoxAndroidUtils.getRectangle(r28.getTileWidth(), r28.getTileHeight(), r7, r24)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0043|if (mil.nga.geopackage.tiles.TileBoundingBoxAndroidUtils.isValidAllowEmpty(r7) == false) goto L_0x0145\l}"];
Node_7 [shape=record,label="{7\:\ 0x0045|int r9 = java.lang.Math.min(r7.top, ((int) r28.getTileHeight()) + \-1)\lint r10 = java.lang.Math.min(r7.bottom, ((int) r28.getTileHeight()) + \-1)\lint r11 = java.lang.Math.min(r7.left, ((int) r28.getTileWidth()) + \-1)\lint r7 = java.lang.Math.min(r7.right, ((int) r28.getTileWidth()) + \-1)\lmil.nga.geopackage.extension.coverage.GriddedTile r13 = getGriddedTile(r6.getId())\lmil.nga.geopackage.extension.coverage.CoverageDataImage r14 = createImage(r6)\lint[] r8 = new int[]\{(r10 \- r9) + 1, (r7 \- r11) + 1\}\ljava.lang.Double[][] r8 = (java.lang.Double[][]) java.lang.reflect.Array.newInstance(java.lang.Double.class, r8)\ljava.util.Map r15 = (java.util.Map) r2.get(java.lang.Long.valueOf(r6.getTileRow()))\l}"];
Node_8 [shape=record,label="{8\:\ 0x00a7|if (r15 != null) goto L_0x00bc\l}"];
Node_9 [shape=record,label="{9\:\ 0x00a9|java.util.TreeMap r15 = new java.util.TreeMap()\lr25 = r5\lr2.put(java.lang.Long.valueOf(r6.getTileRow()), r15)\l}"];
Node_10 [shape=record,label="{10\:\ 0x00bc|r25 = r5\l}"];
Node_11 [shape=record,label="{11\:\ 0x00be|PHI: r15 r25 \l  PHI: (r15v8 java.util.Map) = (r15v7 java.util.Map), (r15v9 java.util.Map) binds: [B:10:0x00bc, B:9:0x00a9] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r25v2 java.lang.Long) = (r25v3 java.lang.Long), (r25v4 java.lang.Long) binds: [B:10:0x00bc, B:9:0x00a9] A[DONT_GENERATE, DONT_INLINE]\l|r5 = r9\l}"];
Node_12 [shape=record,label="{12\:\ 0x00bf|LOOP_START\lPHI: r5 r10 \l  PHI: (r5v6 int) = (r5v5 int), (r5v13 int) binds: [B:11:0x00be, B:16:0x00d5] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r10v6 int) = (r10v5 int), (r10v9 int) binds: [B:11:0x00be, B:16:0x00d5] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:12:0x00bf\-\>B:16:0x00d5\l|if (r5 \> r10) goto L_0x00da\l}"];
Node_13 [shape=record,label="{13\:\ 0x00c1|r26 = r10\lr10 = r11\l}"];
Node_14 [shape=record,label="{14\:\ 0x00c4|LOOP_START\lPHI: r10 \l  PHI: (r10v8 int) = (r10v7 int), (r10v10 int) binds: [B:13:0x00c1, B:15:0x00c6] A[DONT_GENERATE, DONT_INLINE]\lLOOP:2: B:14:0x00c4\-\>B:15:0x00c6\l|if (r10 \> r7) goto L_0x00d5\l}"];
Node_15 [shape=record,label="{15\:\ 0x00c6|LOOP_END\lLOOP:2: B:14:0x00c4\-\>B:15:0x00c6\l|java.lang.Double r16 = getValue(r13, r14, r10, r5)\lr8[r5 \- r9][r10 \- r11] = r16\lint r10 = r10 + 1\l}"];
Node_16 [shape=record,label="{16\:\ 0x00d5|LOOP_END\lLOOP:1: B:12:0x00bf\-\>B:16:0x00d5\l|int r5 = r5 + 1\lr10 = r26\l}"];
Node_17 [shape=record,label="{17\:\ 0x00da|r15.put(java.lang.Long.valueOf(r6.getTileColumn()), r8)\lint r3 = r3 + 1\l}"];
Node_18 [shape=record,label="{18\:\ 0x00e7|if (r0 != null) goto L_0x00ee\l}"];
Node_19 [shape=record,label="{19\:\ 0x00e9|long r7 = r6.getTileRow()\l}"];
Node_20 [shape=record,label="{20\:\ 0x00ee|long r7 = java.lang.Math.min(r0.longValue(), r6.getTileRow())\l}"];
Node_21 [shape=record,label="{21\:\ 0x00fa|PHI: r7 \l  PHI: (r7v5 long) = (r7v13 long), (r7v14 long) binds: [B:20:0x00ee, B:19:0x00e9] A[DONT_GENERATE, DONT_INLINE]\l|java.lang.Long r0 = java.lang.Long.valueOf(r7)\l}"];
Node_22 [shape=record,label="{22\:\ 0x00fe|if (r1 != null) goto L_0x0105\l}"];
Node_23 [shape=record,label="{23\:\ 0x0100|long r7 = r6.getTileRow()\l}"];
Node_24 [shape=record,label="{24\:\ 0x0105|long r7 = java.lang.Math.max(r1.longValue(), r6.getTileRow())\l}"];
Node_25 [shape=record,label="{25\:\ 0x0111|PHI: r7 \l  PHI: (r7v6 long) = (r7v10 long), (r7v11 long) binds: [B:24:0x0105, B:23:0x0100] A[DONT_GENERATE, DONT_INLINE]\l|java.lang.Long r1 = java.lang.Long.valueOf(r7)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0115|if (r4 != null) goto L_0x011c\l}"];
Node_27 [shape=record,label="{27\:\ 0x0117|long r4 = r6.getTileColumn()\l}"];
Node_28 [shape=record,label="{28\:\ 0x011c|long r4 = java.lang.Math.min(r4.longValue(), r6.getTileColumn())\l}"];
Node_29 [shape=record,label="{29\:\ 0x0128|PHI: r4 \l  PHI: (r4v4 long) = (r4v7 long), (r4v8 long) binds: [B:28:0x011c, B:27:0x0117] A[DONT_GENERATE, DONT_INLINE]\l|java.lang.Long r4 = java.lang.Long.valueOf(r4)\l}"];
Node_30 [shape=record,label="{30\:\ 0x012c|if (r25 != null) goto L_0x0133\l}"];
Node_31 [shape=record,label="{31\:\ 0x012e|long r5 = r6.getTileColumn()\l}"];
Node_32 [shape=record,label="{32\:\ 0x0133|long r5 = java.lang.Math.max(r25.longValue(), r6.getTileColumn())\l}"];
Node_33 [shape=record,label="{33\:\ 0x013f|PHI: r5 \l  PHI: (r5v8 long) = (r5v11 long), (r5v12 long) binds: [B:32:0x0133, B:31:0x012e] A[DONT_GENERATE, DONT_INLINE]\l|java.lang.Long r5 = java.lang.Long.valueOf(r5)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0145|r5 = r5\l}"];
Node_35 [shape=record,label="{35\:\ 0x014b|r25 = r5\llong r5 = r0.longValue()\llong r7 = r1.longValue()\llong r9 = r4.longValue()\l}"];
Node_36 [shape=record,label="{36\:\ 0x0169|RETURN\l|return formatUnboundedResults(r28, r2, r3, r5, r7, r9, r25.longValue())\l}"];
Node_37 [shape=record,label="{37\:\ 0x000d|LOOP_END\lSYNTHETIC\lPHI: r0 r1 r3 r4 r5 \l  PHI: (r0v4 java.lang.Long) = (r0v1 java.lang.Long), (r0v5 java.lang.Long) binds: [B:40:0x000d, B:39:0x000d] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v4 java.lang.Long) = (r1v2 java.lang.Long), (r1v5 java.lang.Long) binds: [B:40:0x000d, B:39:0x000d] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v2 int) = (r3v1 int), (r3v3 int) binds: [B:40:0x000d, B:39:0x000d] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v3 java.lang.Long) = (r4v1 java.lang.Long), (r4v5 java.lang.Long) binds: [B:40:0x000d, B:39:0x000d] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v3 java.lang.Long) = (r5v4 java.lang.Long), (r5v9 java.lang.Long) binds: [B:40:0x000d, B:39:0x000d] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000d\-\>B:37:0x000d\l}"];
Node_38 [shape=record,label="{38\:\ 0x014b|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x000d|SYNTHETIC\l}"];
Node_40 [shape=record,label="{40\:\ 0x000d|SYNTHETIC\l}"];
Node_41 [shape=record,label="{41\:\ 0x00da|SYNTHETIC\l}"];
Node_42 [shape=record,label="{42\:\ 0x00d5|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private java.lang.Double[][] mil.nga.geopackage.extension.coverage.CoverageData.getValuesUnbounded((r27v0 'this' mil.nga.geopackage.extension.coverage.CoverageData A[IMMUTABLE_TYPE, THIS]), (r28v0 mil.nga.geopackage.tiles.matrix.TileMatrix A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r29v0 mil.nga.geopackage.tiles.user.TileCursor A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r30v0 mil.nga.geopackage.extension.coverage.CoverageDataRequest A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_38;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_34;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_34;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_41;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_42;
Node_15 -> Node_14;
Node_16 -> Node_12;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_25;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_29;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_33;
Node_32 -> Node_33;
Node_33 -> Node_39;
Node_34 -> Node_40;
Node_35 -> Node_36;
Node_37 -> Node_1;
Node_38 -> Node_35;
Node_39 -> Node_37;
Node_40 -> Node_37;
Node_41 -> Node_17;
Node_42 -> Node_16;
}

