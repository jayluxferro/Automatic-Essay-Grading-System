digraph "CFG formil.nga.geopackage.extension.coverage.CoverageData.getCoverageData(Lmil\/nga\/geopackage\/GeoPackage;Lmil\/nga\/geopackage\/tiles\/user\/TileDao;Ljava\/lang\/Integer;Ljava\/lang\/Integer;Lmil\/nga\/geopackage\/projection\/Projection;)Lmil\/nga\/geopackage\/extension\/coverage\/CoverageData;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:mil.nga.geopackage.tiles.matrixset.TileMatrixSet) = (r9 I:mil.nga.geopackage.tiles.user.TileDao) mil.nga.geopackage.tiles.user.TileDao.getTileMatrixSet():mil.nga.geopackage.tiles.matrixset.TileMatrixSet type: VIRTUAL \l0x0004: INVOKE  (r1 I:mil.nga.geopackage.extension.coverage.GriddedCoverageDao) = (r8 I:mil.nga.geopackage.GeoPackage) mil.nga.geopackage.GeoPackage.getGriddedCoverageDao():mil.nga.geopackage.extension.coverage.GriddedCoverageDao type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|SYNTHETIC\lSplitter:B:1:0x0008\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0008\l|0x0008: INVOKE  (r2 I:boolean) = \l  (r1 I:mil.nga.geopackage.extension.coverage.GriddedCoverageDao)\l mil.nga.geopackage.extension.coverage.GriddedCoverageDao.isTableExists():boolean type: VIRTUAL A[Catch:\{ SQLException \-\> 0x0052 \}, TRY_ENTER]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0013 A[Catch:\{ SQLException \-\> 0x0052 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: INVOKE  (r1 I:mil.nga.geopackage.extension.coverage.GriddedCoverage) = \l  (r1 I:mil.nga.geopackage.extension.coverage.GriddedCoverageDao)\l  (r0 I:mil.nga.geopackage.tiles.matrixset.TileMatrixSet)\l mil.nga.geopackage.extension.coverage.GriddedCoverageDao.query(mil.nga.geopackage.tiles.matrixset.TileMatrixSet):mil.nga.geopackage.extension.coverage.GriddedCoverage type: VIRTUAL A[Catch:\{ SQLException \-\> 0x0052 \}]\l0x0011: NOP   A[TRY_LEAVE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|0x0014: INVOKE  (r0 I:mil.nga.geopackage.extension.coverage.GriddedCoverageDataType) = \l  (r1 I:mil.nga.geopackage.extension.coverage.GriddedCoverage)\l mil.nga.geopackage.extension.coverage.GriddedCoverage.getDataType():mil.nga.geopackage.extension.coverage.GriddedCoverageDataType type: VIRTUAL \l0x0018: SGET  (r1 I:int[]) =  mil.nga.geopackage.extension.coverage.CoverageData.1.$SwitchMap$mil$nga$geopackage$extension$coverage$GriddedCoverageDataType int[] \l0x001a: INVOKE  (r2 I:int) = \l  (r0 I:mil.nga.geopackage.extension.coverage.GriddedCoverageDataType)\l mil.nga.geopackage.extension.coverage.GriddedCoverageDataType.ordinal():int type: VIRTUAL \l0x001e: AGET  (r1 I:?[int, float]) = (r1 I:?[int, float][]), (r2 I:?[int, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0020|0x0020: SWITCH  \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[1, 2] t:[0x0046, 0x003a] \l}"];
Node_9 [shape=record,label="{9\:\ 0x0023|0x0023: NEW_INSTANCE  (r8 I:mil.nga.geopackage.GeoPackageException) =  mil.nga.geopackage.GeoPackageException \l0x0025: NEW_INSTANCE  (r9 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0027: INVOKE  (r9 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x002a: CONST_STR  (r10 I:java.lang.String) =  \"Unsupported Gridded Coverage Data Type: \" \l0x002c: INVOKE  (r9 I:java.lang.StringBuilder), (r10 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x002f: INVOKE  (r9 I:java.lang.StringBuilder), (r0 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0032: INVOKE  (r9 I:java.lang.String) = (r9 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0036: INVOKE  \l  (r8 I:mil.nga.geopackage.GeoPackageException)\l  (r9 I:java.lang.String)\l mil.nga.geopackage.GeoPackageException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_10 [shape=record,label="{10\:\ 0x0039|0x0039: THROW  (r8 I:java.lang.Throwable) \l}"];
Node_11 [shape=record,label="{11\:\ 0x003a|0x003a: NEW_INSTANCE  (r0 I:mil.nga.geopackage.extension.coverage.CoverageDataTiff) =  mil.nga.geopackage.extension.coverage.CoverageDataTiff \l0x003c: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x003d: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x003e: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x003f: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x0040: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) \l0x0041: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) \l0x0042: INVOKE  \l  (r2 I:mil.nga.geopackage.extension.coverage.CoverageDataTiff)\l  (r3 I:mil.nga.geopackage.GeoPackage)\l  (r4 I:mil.nga.geopackage.tiles.user.TileDao)\l  (r5 I:java.lang.Integer)\l  (r6 I:java.lang.Integer)\l  (r7 I:mil.nga.geopackage.projection.Projection)\l mil.nga.geopackage.extension.coverage.CoverageDataTiff.\<init\>(mil.nga.geopackage.GeoPackage, mil.nga.geopackage.tiles.user.TileDao, java.lang.Integer, java.lang.Integer, mil.nga.geopackage.projection.Projection):void type: DIRECT \l}"];
Node_12 [shape=record,label="{12\:\ 0x0046|0x0046: NEW_INSTANCE  (r0 I:mil.nga.geopackage.extension.coverage.CoverageDataPng) =  mil.nga.geopackage.extension.coverage.CoverageDataPng \l0x0048: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0049: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x004a: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x004b: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x004c: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) \l0x004d: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) \l0x004e: INVOKE  \l  (r1 I:mil.nga.geopackage.extension.coverage.CoverageDataPng)\l  (r2 I:mil.nga.geopackage.GeoPackage)\l  (r3 I:mil.nga.geopackage.tiles.user.TileDao)\l  (r4 I:java.lang.Integer)\l  (r5 I:java.lang.Integer)\l  (r6 I:mil.nga.geopackage.projection.Projection)\l mil.nga.geopackage.extension.coverage.CoverageDataPng.\<init\>(mil.nga.geopackage.GeoPackage, mil.nga.geopackage.tiles.user.TileDao, java.lang.Integer, java.lang.Integer, mil.nga.geopackage.projection.Projection):void type: DIRECT \l}"];
Node_13 [shape=record,label="{13\:\ 0x0051|0x0051: RETURN  \l  (r0 I:mil.nga.geopackage.extension.coverage.CoverageData\<?\>)\l \l}"];
Node_14 [shape=record,label="{14\:\ 0x0052|ExcHandler: SQLException null\lSplitter:B:1:0x0008\l|0x0052: MOVE_EXCEPTION  (r8 I:?[OBJECT]) =  \l}"];
Node_15 [shape=record,label="{15\:\ 0x0053|0x0053: NEW_INSTANCE  (r9 I:mil.nga.geopackage.GeoPackageException) =  mil.nga.geopackage.GeoPackageException \l0x0055: NEW_INSTANCE  (r10 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0057: INVOKE  (r10 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x005a: CONST_STR  (r11 I:java.lang.String) =  \"Failed to get Gridded Coverage for table name: \" \l0x005c: INVOKE  (r10 I:java.lang.StringBuilder), (r11 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x005f: INVOKE  (r11 I:java.lang.String) = (r0 I:mil.nga.geopackage.tiles.matrixset.TileMatrixSet) mil.nga.geopackage.tiles.matrixset.TileMatrixSet.getTableName():java.lang.String type: VIRTUAL \l0x0063: INVOKE  (r10 I:java.lang.StringBuilder), (r11 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0066: INVOKE  (r10 I:java.lang.String) = (r10 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x006a: INVOKE  \l  (r9 I:mil.nga.geopackage.GeoPackageException)\l  (r10 I:java.lang.String)\l  (r8 I:java.lang.Throwable)\l mil.nga.geopackage.GeoPackageException.\<init\>(java.lang.String, java.lang.Throwable):void type: DIRECT \l}"];
Node_16 [shape=record,label="{16\:\ 0x006d|0x006d: THROW  (r9 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static mil.nga.geopackage.extension.coverage.CoverageData\<?\> mil.nga.geopackage.extension.coverage.CoverageData.getCoverageData((r8 I:mil.nga.geopackage.GeoPackage A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:mil.nga.geopackage.tiles.user.TileDao A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:java.lang.Integer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:java.lang.Integer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:mil.nga.geopackage.projection.Projection A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lmil\/nga\/geopackage\/GeoPackage;, Lmil\/nga\/geopackage\/tiles\/user\/TileDao;, Ljava\/lang\/Integer;, Ljava\/lang\/Integer;, Lmil\/nga\/geopackage\/projection\/Projection;, ), Lmil\/nga\/geopackage\/extension\/coverage\/CoverageData\<, *\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_14;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_11;
Node_8 -> Node_12;
Node_9 -> Node_10;
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_15 -> Node_16;
}

