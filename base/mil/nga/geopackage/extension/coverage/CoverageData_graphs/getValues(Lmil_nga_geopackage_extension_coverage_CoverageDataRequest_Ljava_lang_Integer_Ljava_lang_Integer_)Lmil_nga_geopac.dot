digraph "CFG formil.nga.geopackage.extension.coverage.CoverageData.getValues(Lmil\/nga\/geopackage\/extension\/coverage\/CoverageDataRequest;Ljava\/lang\/Integer;Ljava\/lang\/Integer;)Lmil\/nga\/geopackage\/extension\/coverage\/CoverageDataResults;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r8 = r16\lr0 = r17\lmil.nga.geopackage.BoundingBox r1 = r17.getBoundingBox()\lr9 = null\l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|if (r8.sameProjection != false) goto L_0x001c\l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|mil.nga.geopackage.projection.ProjectionTransform r2 = r8.requestProjection.getTransformation(r8.coverageProjection)\lr10 = r2.transform(r1)\lr11 = r2\l}"];
Node_3 [shape=record,label="{3\:\ 0x001c|r10 = r1\lr11 = null\l}"];
Node_4 [shape=record,label="{4\:\ 0x001e|PHI: r10 r11 \l  PHI: (r10v0 mil.nga.geopackage.BoundingBox) = (r10v1 mil.nga.geopackage.BoundingBox), (r10v2 mil.nga.geopackage.BoundingBox) binds: [B:3:0x001c, B:2:0x000d] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r11v0 mil.nga.geopackage.projection.ProjectionTransform) = (r11v1 mil.nga.geopackage.projection.ProjectionTransform), (r11v2 mil.nga.geopackage.projection.ProjectionTransform) binds: [B:3:0x001c, B:2:0x000d] A[DONT_GENERATE, DONT_INLINE]\l|r0.setProjectedBoundingBox(r10)\l}"];
Node_5 [shape=record,label="{5\:\ 0x002c|if (mil.nga.geopackage.extension.coverage.CoverageData.C13381.f239x69146fe5[r8.algorithm.ordinal()] == 1) goto L_0x0030\l}"];
Node_6 [shape=record,label="{6\:\ 0x002e|r7 = 1\l}"];
Node_7 [shape=record,label="{7\:\ 0x0030|r7 = 3\l}"];
Node_8 [shape=record,label="{8\:\ 0x0032|PHI: r7 \l  PHI: (r7v0 int) = (r7v2 int), (r7v3 int) binds: [B:7:0x0030, B:6:0x002e] A[DONT_GENERATE, DONT_INLINE]\l|mil.nga.geopackage.extension.coverage.CoverageDataTileMatrixResults r1 = getResults(r0, r10, r7)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0036|if (r1 == null) goto L_0x00cc\l}"];
Node_10 [shape=record,label="{10\:\ 0x0038|mil.nga.geopackage.tiles.matrix.TileMatrix r12 = r1.getTileMatrix()\lmil.nga.geopackage.tiles.user.TileCursor r13 = r1.getTileResults()\l}"];
Node_11 [shape=record,label="{11\:\ 0x0040|if (r18 == null) goto L_0x004b\l}"];
Node_12 [shape=record,label="{12\:\ 0x0042|SYNTHETIC\lSplitter:B:12:0x0042\l}"];
Node_13 [shape=record,label="{13\:\ ?|Catch:\{ all \-\> 0x0048 \}\lSplitter:B:12:0x0042\l|int r1 = r18.intValue()     \/\/ Catch:\{ all \-\> 0x0048 \}\l}"];
Node_14 [shape=record,label="{14\:\ 0x0046|Catch:\{ all \-\> 0x0048 \}\lPHI: r1 \l  PHI: (r1v6 int) = (r1v5 int), (r1v23 int) binds: [B:17:0x004b, B:13:?] A[DONT_GENERATE, DONT_INLINE]\l|r14 = r1     \/\/ Catch:\{ all \-\> 0x0048 \}\l}"];
Node_15 [shape=record,label="{15\:\ 0x0048|Catch:\{ all \-\> 0x0048 \}\lExcHandler: all (r0v2 'th' java.lang.Throwable A[CUSTOM_DECLARE, Catch:\{ all \-\> 0x0048 \}])\lSplitter:B:12:0x0042\l|java.lang.Throwable r0 = move\-exception     \/\/ Catch:\{ all \-\> 0x0048 \}\l}"];
Node_16 [shape=record,label="{16\:\ 0x0049|Catch:\{ all \-\> 0x0048 \}\l}"];
Node_17 [shape=record,label="{17\:\ 0x004b|Catch:\{ all \-\> 0x0048 \}\l|int r1 = (int) r12.getTileWidth()     \/\/ Catch:\{ all \-\> 0x0048 \}\l}"];
Node_18 [shape=record,label="{18\:\ 0x0051|Catch:\{ all \-\> 0x0048 \}\l|if (r19 == null) goto L_0x0059     \/\/ Catch:\{ all \-\> 0x0048 \}\l}"];
Node_19 [shape=record,label="{19\:\ 0x0053|Catch:\{ all \-\> 0x0048 \}\l|int r1 = r19.intValue()     \/\/ Catch:\{ all \-\> 0x0048 \}\l}"];
Node_20 [shape=record,label="{20\:\ 0x0057|Catch:\{ all \-\> 0x0048 \}\lPHI: r1 \l  PHI: (r1v9 int) = (r1v8 int), (r1v22 int) binds: [B:21:0x0059, B:19:0x0053] A[DONT_GENERATE, DONT_INLINE]\l|r15 = r1     \/\/ Catch:\{ all \-\> 0x0048 \}\l}"];
Node_21 [shape=record,label="{21\:\ 0x0059|Catch:\{ all \-\> 0x0048 \}\l|int r1 = (int) r12.getTileHeight()     \/\/ Catch:\{ all \-\> 0x0048 \}\l}"];
Node_22 [shape=record,label="{22\:\ 0x005f|Catch:\{ all \-\> 0x0048 \}\l}"];
Node_23 [shape=record,label="{23\:\ 0x0061|Catch:\{ all \-\> 0x0048 \}\l|if (r8.sameProjection != false) goto L_0x0096     \/\/ Catch:\{ all \-\> 0x0048 \}\l}"];
Node_24 [shape=record,label="{24\:\ 0x0063|Catch:\{ all \-\> 0x0048 \}\l|int r1 = (int) java.lang.Math.round((r10.getMaxLongitude() \- r10.getMinLongitude()) \/ r12.getPixelXSize())     \/\/ Catch:\{ all \-\> 0x0048 \}\l}"];
Node_25 [shape=record,label="{25\:\ 0x0077|Catch:\{ all \-\> 0x0048 \}\l|if (r1 \<= 0) goto L_0x007a     \/\/ Catch:\{ all \-\> 0x0048 \}\l}"];
Node_26 [shape=record,label="{26\:\ 0x0079|Catch:\{ all \-\> 0x0048 \}\l}"];
Node_27 [shape=record,label="{27\:\ 0x007a|Catch:\{ all \-\> 0x0048 \}\l|r1 = r14     \/\/ Catch:\{ all \-\> 0x0048 \}\l}"];
Node_28 [shape=record,label="{28\:\ 0x007b|Catch:\{ all \-\> 0x0048 \}\lPHI: r1 \l  PHI: (r1v20 int) = (r1v21 int), (r1v19 int) binds: [B:27:0x007a, B:26:0x0079] A[DONT_GENERATE, DONT_INLINE]\l|int r2 = (int) java.lang.Math.round((r10.getMaxLatitude() \- r10.getMinLatitude()) \/ r12.getPixelYSize())     \/\/ Catch:\{ all \-\> 0x0048 \}\l}"];
Node_29 [shape=record,label="{29\:\ 0x008f|Catch:\{ all \-\> 0x0048 \}\l|if (r2 \<= 0) goto L_0x0094     \/\/ Catch:\{ all \-\> 0x0048 \}\l}"];
Node_30 [shape=record,label="{30\:\ 0x0091|Catch:\{ all \-\> 0x0048 \}\l|r5 = r1     \/\/ Catch:\{ all \-\> 0x0048 \}\lr6 = r2     \/\/ Catch:\{ all \-\> 0x0048 \}\l}"];
Node_31 [shape=record,label="{31\:\ 0x0094|Catch:\{ all \-\> 0x0048 \}\l|r5 = r1     \/\/ Catch:\{ all \-\> 0x0048 \}\l}"];
Node_32 [shape=record,label="{32\:\ 0x0096|Catch:\{ all \-\> 0x0048 \}\l|r5 = r14     \/\/ Catch:\{ all \-\> 0x0048 \}\l}"];
Node_33 [shape=record,label="{33\:\ 0x0097|Catch:\{ all \-\> 0x0048 \}\lPHI: r5 \l  PHI: (r5v2 int) = (r5v3 int), (r5v5 int) binds: [B:32:0x0096, B:31:0x0094] A[DONT_GENERATE, DONT_INLINE]\l|r6 = r15     \/\/ Catch:\{ all \-\> 0x0048 \}\l}"];
Node_34 [shape=record,label="{34\:\ 0x0098|Catch:\{ all \-\> 0x0048 \}\lPHI: r5 r6 \l  PHI: (r5v0 int) = (r5v2 int), (r5v6 int) binds: [B:33:0x0097, B:30:0x0091] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v0 int) = (r6v2 int), (r6v4 int) binds: [B:33:0x0097, B:30:0x0091] A[DONT_GENERATE, DONT_INLINE]\l|java.lang.Double[][] r2 = getValues(r12, r13, r17, r5, r6, r7)     \/\/ Catch:\{ all \-\> 0x0048 \}\l}"];
Node_35 [shape=record,label="{35\:\ 0x00a2|Catch:\{ all \-\> 0x0048 \}\l|if (r2 == null) goto L_0x00bc     \/\/ Catch:\{ all \-\> 0x0048 \}\l}"];
Node_36 [shape=record,label="{36\:\ 0x00a4|Catch:\{ all \-\> 0x0048 \}\l}"];
Node_37 [shape=record,label="{37\:\ 0x00a6|Catch:\{ all \-\> 0x0048 \}\l|if (r8.sameProjection != false) goto L_0x00bc     \/\/ Catch:\{ all \-\> 0x0048 \}\l}"];
Node_38 [shape=record,label="{38\:\ 0x00a8|Catch:\{ all \-\> 0x0048 \}\l}"];
Node_39 [shape=record,label="{39\:\ 0x00ac|Catch:\{ all \-\> 0x0048 \}\l|if (r17.isPoint() != false) goto L_0x00bc     \/\/ Catch:\{ all \-\> 0x0048 \}\l}"];
Node_40 [shape=record,label="{40\:\ 0x00ae|Catch:\{ all \-\> 0x0048 \}\l|r1 = r16     \/\/ Catch:\{ all \-\> 0x0048 \}\lr3 = r14     \/\/ Catch:\{ all \-\> 0x0048 \}\lr4 = r15     \/\/ Catch:\{ all \-\> 0x0048 \}\ljava.lang.Double[][] r2 = reprojectCoverageData(r2, r3, r4, r17.getBoundingBox(), r11, r10)     \/\/ Catch:\{ all \-\> 0x0048 \}\l}"];
Node_41 [shape=record,label="{41\:\ 0x00bc|Catch:\{ all \-\> 0x0048 \}\lPHI: r2 \l  PHI: (r2v6 java.lang.Double[][]) = (r2v5 java.lang.Double[][]), (r2v5 java.lang.Double[][]), (r2v5 java.lang.Double[][]), (r2v7 java.lang.Double[][]) binds: [B:35:0x00a2, B:37:0x00a6, B:39:0x00ac, B:40:0x00ae] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 == null) goto L_0x00c4     \/\/ Catch:\{ all \-\> 0x0048 \}\l}"];
Node_42 [shape=record,label="{42\:\ 0x00be|Catch:\{ all \-\> 0x0048 \}\l}"];
Node_43 [shape=record,label="{43\:\ 0x00c3|r9 = new mil.nga.geopackage.extension.coverage.CoverageDataResults(r2, r12)     \/\/ Catch:\{ all \-\> 0x0048 \}\l}"];
Node_44 [shape=record,label="{44\:\ 0x00c4|PHI: r9 \l  PHI: (r9v2 mil.nga.geopackage.extension.coverage.CoverageDataResults) = (r9v0 mil.nga.geopackage.extension.coverage.CoverageDataResults), (r9v3 mil.nga.geopackage.extension.coverage.CoverageDataResults) binds: [B:41:0x00bc, B:43:0x00c3] A[DONT_GENERATE, DONT_INLINE]\l|r13.close()\l}"];
Node_45 [shape=record,label="{45\:\ 0x00c8|r13.close()\l}"];
Node_46 [shape=record,label="{46\:\ 0x00cb|throw r0\l}"];
Node_47 [shape=record,label="{47\:\ 0x00cc|RETURN\lPHI: r9 \l  PHI: (r9v1 mil.nga.geopackage.extension.coverage.CoverageDataResults) = (r9v0 mil.nga.geopackage.extension.coverage.CoverageDataResults), (r9v2 mil.nga.geopackage.extension.coverage.CoverageDataResults) binds: [B:9:0x0036, B:44:0x00c4] A[DONT_GENERATE, DONT_INLINE]\l|return r9\l}"];
MethodNode[shape=record,label="{public mil.nga.geopackage.extension.coverage.CoverageDataResults mil.nga.geopackage.extension.coverage.CoverageData.getValues((r16v0 'this' mil.nga.geopackage.extension.coverage.CoverageData A[IMMUTABLE_TYPE, THIS]), (r17v0 mil.nga.geopackage.extension.coverage.CoverageDataRequest A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18v0 java.lang.Integer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19v0 java.lang.Integer A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_47;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_17;
Node_12 -> Node_13;
Node_12 -> Node_15;
Node_13 -> Node_14;
Node_14 -> Node_18;
Node_15 -> Node_16;
Node_16 -> Node_45;
Node_17 -> Node_14;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_21;
Node_19 -> Node_20;
Node_20 -> Node_22;
Node_21 -> Node_20;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_32;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_28;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_34;
Node_31 -> Node_33;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_41;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_41;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_41;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_44;
Node_42 -> Node_43;
Node_43 -> Node_44;
Node_44 -> Node_47;
Node_45 -> Node_46;
}

