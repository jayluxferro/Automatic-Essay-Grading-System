digraph "CFG formil.nga.geopackage.extension.ExtensionsDao.setUniqueWhere(Lcom\/j256\/ormlite\/stmt\/Where;Ljava\/lang\/String;ZLjava\/lang\/String;ZLjava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"extension_name\" \l0x0002: INVOKE  \l  (r2 I:com.j256.ormlite.stmt.Where)\l  (r0 I:java.lang.String)\l  (r3 I:java.lang.Object)\l com.j256.ormlite.stmt.Where.eq(java.lang.String, java.lang.Object):com.j256.ormlite.stmt.Where type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x001c \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0013 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: INVOKE  (r3 I:com.j256.ormlite.stmt.Where) = (r2 I:com.j256.ormlite.stmt.Where) com.j256.ormlite.stmt.Where.and():com.j256.ormlite.stmt.Where type: VIRTUAL \l0x000d: CONST_STR  (r4 I:java.lang.String) =  \"table_name\" \l0x000f: INVOKE  (r3 I:com.j256.ormlite.stmt.Where), (r4 I:java.lang.String) com.j256.ormlite.stmt.Where.isNull(java.lang.String):com.j256.ormlite.stmt.Where type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|0x0013: INVOKE  (r3 I:com.j256.ormlite.stmt.Where) = (r2 I:com.j256.ormlite.stmt.Where) com.j256.ormlite.stmt.Where.and():com.j256.ormlite.stmt.Where type: VIRTUAL \l0x0017: CONST_STR  (r4 I:java.lang.String) =  \"table_name\" \l0x0019: INVOKE  \l  (r3 I:com.j256.ormlite.stmt.Where)\l  (r4 I:java.lang.String)\l  (r5 I:java.lang.Object)\l com.j256.ormlite.stmt.Where.eq(java.lang.String, java.lang.Object):com.j256.ormlite.stmt.Where type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|0x001c: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0033 \l}"];
Node_6 [shape=record,label="{6\:\ 0x001e|0x001e: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x002a \l}"];
Node_7 [shape=record,label="{7\:\ 0x0020|0x0020: INVOKE  (r2 I:com.j256.ormlite.stmt.Where) = (r2 I:com.j256.ormlite.stmt.Where) com.j256.ormlite.stmt.Where.and():com.j256.ormlite.stmt.Where type: VIRTUAL \l0x0024: CONST_STR  (r3 I:java.lang.String) =  \"column_name\" \l0x0026: INVOKE  (r2 I:com.j256.ormlite.stmt.Where), (r3 I:java.lang.String) com.j256.ormlite.stmt.Where.isNull(java.lang.String):com.j256.ormlite.stmt.Where type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x002a|0x002a: INVOKE  (r2 I:com.j256.ormlite.stmt.Where) = (r2 I:com.j256.ormlite.stmt.Where) com.j256.ormlite.stmt.Where.and():com.j256.ormlite.stmt.Where type: VIRTUAL \l0x002e: CONST_STR  (r3 I:java.lang.String) =  \"column_name\" \l0x0030: INVOKE  \l  (r2 I:com.j256.ormlite.stmt.Where)\l  (r3 I:java.lang.String)\l  (r7 I:java.lang.Object)\l com.j256.ormlite.stmt.Where.eq(java.lang.String, java.lang.Object):com.j256.ormlite.stmt.Where type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0033|0x0033: RETURN   \l}"];
MethodNode[shape=record,label="{private void mil.nga.geopackage.extension.ExtensionsDao.setUniqueWhere((r1 'this' I:mil.nga.geopackage.extension.ExtensionsDao A[IMMUTABLE_TYPE, THIS]), (r2 I:com.j256.ormlite.stmt.Where\<mil.nga.geopackage.extension.Extensions, java.lang.Void\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/j256\/ormlite\/stmt\/Where\<, Lmil\/nga\/geopackage\/extension\/Extensions;, Ljava\/lang\/Void;, \>;, Ljava\/lang\/String;, Z, Ljava\/lang\/String;, Z, Ljava\/lang\/String;, )V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_9;
Node_8 -> Node_9;
}

