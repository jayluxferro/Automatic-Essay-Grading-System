digraph "CFG formil.nga.geopackage.extension.ExtensionsDao.queryByExtension(Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;)Lmil\/nga\/geopackage\/extension\/Extensions;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:com.j256.ormlite.stmt.QueryBuilder) = (r8 I:mil.nga.geopackage.extension.ExtensionsDao) mil.nga.geopackage.extension.ExtensionsDao.queryBuilder():com.j256.ormlite.stmt.QueryBuilder type: VIRTUAL \l0x0004: INVOKE  (r2 I:com.j256.ormlite.stmt.Where) = (r0 I:com.j256.ormlite.stmt.QueryBuilder) com.j256.ormlite.stmt.QueryBuilder.where():com.j256.ormlite.stmt.Where type: VIRTUAL \l0x0008: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0009: CONST  (r6 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000a: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x000b: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x000c: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x000d: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) \l0x000e: INVOKE  \l  (r1 I:mil.nga.geopackage.extension.ExtensionsDao)\l  (r2 I:com.j256.ormlite.stmt.Where)\l  (r3 I:java.lang.String)\l  (r4 I:boolean)\l  (r5 I:java.lang.String)\l  (r6 I:boolean)\l  (r7 I:java.lang.String)\l mil.nga.geopackage.extension.ExtensionsDao.setUniqueWhere(com.j256.ormlite.stmt.Where, java.lang.String, boolean, java.lang.String, boolean, java.lang.String):void type: DIRECT \l0x0011: INVOKE  (r0 I:java.util.List) = (r0 I:com.j256.ormlite.stmt.QueryBuilder) com.j256.ormlite.stmt.QueryBuilder.query():java.util.List type: VIRTUAL \l0x0015: INVOKE  (r1 I:int) = (r0 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x0019: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x001a|0x001a: IF  (r1 I:?[int, byte, short, char]) \> (r2 I:?[int, byte, short, char])  \-\> B:7:0x002c \l}"];
Node_2 [shape=record,label="{2\:\ 0x001c|0x001c: INVOKE  (r9 I:int) = (r0 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x0020|0x0020: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x002a \l}"];
Node_4 [shape=record,label="{4\:\ 0x0022|0x0022: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0023: INVOKE  (r9 I:java.lang.Object) = (r0 I:java.util.List), (r9 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0027: CHECK_CAST  (r9 I:mil.nga.geopackage.extension.Extensions) = (mil.nga.geopackage.extension.Extensions) (r9 I:?[OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x002a|0x002a: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x002b|0x002b: RETURN  (r9 I:mil.nga.geopackage.extension.Extensions) \l}"];
Node_7 [shape=record,label="{7\:\ 0x002c|0x002c: NEW_INSTANCE  (r0 I:mil.nga.geopackage.GeoPackageException) =  mil.nga.geopackage.GeoPackageException \l0x002e: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0030: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0033: CONST_STR  (r2 I:java.lang.String) =  \"More than one \" \l0x0035: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0038: CONST_CLASS  (r2 I:java.lang.Class\<mil.nga.geopackage.extension.Extensions\>) =  mil.nga.geopackage.extension.Extensions.class \l0x003a: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.Class) java.lang.Class.getSimpleName():java.lang.String type: VIRTUAL \l0x003e: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0041: CONST_STR  (r2 I:java.lang.String) =  \" existed for unique combination of Extension Name: \" \l0x0043: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0046: INVOKE  (r1 I:java.lang.StringBuilder), (r9 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0049: CONST_STR  (r9 I:java.lang.String) =  \", Table Name: \" \l0x004b: INVOKE  (r1 I:java.lang.StringBuilder), (r9 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x004e: INVOKE  (r1 I:java.lang.StringBuilder), (r10 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0051: CONST_STR  (r9 I:java.lang.String) =  \", Column Name: \" \l0x0053: INVOKE  (r1 I:java.lang.StringBuilder), (r9 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0056: INVOKE  (r1 I:java.lang.StringBuilder), (r11 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0059: INVOKE  (r9 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x005d: INVOKE  \l  (r0 I:mil.nga.geopackage.GeoPackageException)\l  (r9 I:java.lang.String)\l mil.nga.geopackage.GeoPackageException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_8 [shape=record,label="{8\:\ 0x0060|0x0060: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public mil.nga.geopackage.extension.Extensions mil.nga.geopackage.extension.ExtensionsDao.queryByExtension((r8 'this' I:mil.nga.geopackage.extension.ExtensionsDao A[IMMUTABLE_TYPE, THIS]), (r9 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_7 -> Node_8;
}

