digraph "CFG formil.nga.geopackage.extension.NGAExtensions.deleteGeometryIndex(Lmil\/nga\/geopackage\/GeoPackageCore;Ljava\/lang\/String;)V" {
subgraph cluster_Region_1898417107 {
label = "R(2:0|(2:(1:4)|(1:(1:7))))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|mil.nga.geopackage.extension.index.TableIndexDao mil.nga.geopackage.extension.index.TableIndexDao r0 = r4.getTableIndexDao()\lmil.nga.geopackage.extension.ExtensionsDao mil.nga.geopackage.extension.ExtensionsDao r1 = r4.getExtensionsDao()\l}"];
subgraph cluster_TryCatchRegion_1139916034 {
label = "Try: R(2:(1:4)|(1:(1:7))) catches: R(3:8|9|10)";
node [shape=record,color=blue];
subgraph cluster_Region_928898013 {
label = "R(2:(1:4)|(1:(1:7)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1558008302 {
label = "IF [B:3:0x000c] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000c|Catch:\{ SQLException \-\> 0x001d \}\l|if (r0.isTableExists() == true) goto L_0x000e     \/\/ Catch:\{ SQLException \-\> 0x001d \}\l}"];
subgraph cluster_Region_113251694 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000e|Catch:\{ SQLException \-\> 0x001d \}\l|r0.deleteByIdCascade(r5)     \/\/ Catch:\{ SQLException \-\> 0x001d \}\l}"];
}
}
subgraph cluster_Region_731035894 {
label = "R(1:(1:7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_495199687 {
label = "IF [B:6:0x0015] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0015|Catch:\{ SQLException \-\> 0x001d \}\l|if (r1.isTableExists() == true) goto L_0x0017     \/\/ Catch:\{ SQLException \-\> 0x001d \}\l}"];
subgraph cluster_Region_1345342647 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0017|Catch:\{ SQLException \-\> 0x001d \}\l|r1.deleteByExtension(mil.nga.geopackage.extension.index.FeatureTableCoreIndex.EXTENSION_NAME, r5)     \/\/ Catch:\{ SQLException \-\> 0x001d \}\l}"];
}
}
}
}
subgraph cluster_Region_1548394400 {
label = "R(3:8|9|10) | ExcHandler: SQLException (r0v1 'e' java.sql.SQLException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x001d|ExcHandler: SQLException (r0v1 'e' java.sql.SQLException A[CUSTOM_DECLARE])\lSplitter:B:1:0x0008\l}"];
Node_9 [shape=record,label="{9\:\ 0x001e}"];
Node_10 [shape=record,label="{10\:\ 0x0040|throw new mil.nga.geopackage.GeoPackageException(\"Failed to delete Table Index. GeoPackage: \" + r4.getName() + \", Table: \" + r5, r0)\l}"];
}
}
}
subgraph cluster_Region_1548394400 {
label = "R(3:8|9|10) | ExcHandler: SQLException (r0v1 'e' java.sql.SQLException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x001d|ExcHandler: SQLException (r0v1 'e' java.sql.SQLException A[CUSTOM_DECLARE])\lSplitter:B:1:0x0008\l}"];
Node_9 [shape=record,label="{9\:\ 0x001e}"];
Node_10 [shape=record,label="{10\:\ 0x0040|throw new mil.nga.geopackage.GeoPackageException(\"Failed to delete Table Index. GeoPackage: \" + r4.getName() + \", Table: \" + r5, r0)\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0008|SYNTHETIC\lSplitter:B:1:0x0008\l}"];
Node_2 [shape=record,color=red,label="{2\:\ ?|Catch:\{ SQLException \-\> 0x001d \}\lSplitter:B:1:0x0008\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0011|Catch:\{ SQLException \-\> 0x001d \}\l}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_12 [shape=record,color=red,label="{12\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static void mil.nga.geopackage.extension.NGAExtensions.deleteGeometryIndex((r4v0 mil.nga.geopackage.GeoPackageCore A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_6 -> Node_12[style=dashed];
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_1 -> Node_2;
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_5 -> Node_6;
}

