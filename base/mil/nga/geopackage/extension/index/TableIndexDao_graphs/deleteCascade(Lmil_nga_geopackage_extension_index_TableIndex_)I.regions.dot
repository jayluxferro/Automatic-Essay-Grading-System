digraph "CFG formil.nga.geopackage.extension.index.TableIndexDao.deleteCascade(Lmil\/nga\/geopackage\/extension\/index\/TableIndex;)I" {
subgraph cluster_Region_623013627 {
label = "R(1:(2:(1:5)|(3:1|(1:3)|6)))";
node [shape=record,color=blue];
subgraph cluster_Region_1943272213 {
label = "R(2:(1:5)|(3:1|(1:3)|6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1969368787 {
label = "IF [B:0:0x0000] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r6 == null) goto L_0x0029\l}"];
subgraph cluster_Region_741634201 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0029|SYNTHETIC\lRETURN\lORIG_RETURN\l|return 0\l}"];
}
}
subgraph cluster_Region_1585644155 {
label = "R(3:1|(1:3)|6)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|mil.nga.geopackage.extension.index.GeometryIndexDao mil.nga.geopackage.extension.index.GeometryIndexDao r0 = getGeometryIndexDao()\l}"];
subgraph cluster_IfRegion_1678018740 {
label = "IF [B:2:0x000a] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000a|if (r0.isTableExists() == true) goto L_0x000c\l}"];
subgraph cluster_Region_1426163400 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000c|com.j256.ormlite.stmt.DeleteBuilder com.j256.ormlite.stmt.DeleteBuilder r1 = r0.deleteBuilder()\lr1.where().mo17213eq(\"table_name\", r6.getTableName())\lr0.delete(r1.prepare())\l}"];
}
}
Node_6 [shape=record,label="{6\:\ ?|SYNTHETIC\lRETURN\l|return delete(r6)\l}"];
}
}
}
Node_4 [shape=record,color=red,label="{4\:\ 0x0024}"];
MethodNode[shape=record,label="{public int mil.nga.geopackage.extension.index.TableIndexDao.deleteCascade((r5v0 'this' mil.nga.geopackage.extension.index.TableIndexDao A[IMMUTABLE_TYPE, THIS]), (r6v0 mil.nga.geopackage.extension.index.TableIndex A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_5;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_4[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_6;
}

