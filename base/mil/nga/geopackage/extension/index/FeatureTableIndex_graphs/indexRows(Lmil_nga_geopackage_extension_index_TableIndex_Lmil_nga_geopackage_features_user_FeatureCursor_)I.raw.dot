digraph "CFG formil.nga.geopackage.extension.index.FeatureTableIndex.indexRows(Lmil\/nga\/geopackage\/extension\/index\/TableIndex;Lmil\/nga\/geopackage\/features\/user\/FeatureCursor;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: IGET  (r1 I:mil.nga.geopackage.io.GeoPackageProgress) = (r5 I:mil.nga.geopackage.extension.index.FeatureTableIndex) mil.nga.geopackage.extension.index.FeatureTableIndex.progress mil.nga.geopackage.io.GeoPackageProgress A[Catch:\{ all \-\> 0x006a \}, TRY_ENTER]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0003|0x0003: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x000d A[Catch:\{ all \-\> 0x006a \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|0x0005: IGET  (r1 I:mil.nga.geopackage.io.GeoPackageProgress) = (r5 I:mil.nga.geopackage.extension.index.FeatureTableIndex) mil.nga.geopackage.extension.index.FeatureTableIndex.progress mil.nga.geopackage.io.GeoPackageProgress A[Catch:\{ all \-\> 0x006a \}]\l0x0007: INVOKE  (r1 I:boolean) = (r1 I:mil.nga.geopackage.io.GeoPackageProgress) mil.nga.geopackage.io.GeoPackageProgress.isActive():boolean type: INTERFACE A[Catch:\{ all \-\> 0x006a \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|0x000b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0066 A[Catch:\{ all \-\> 0x006a \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|0x000d: INVOKE  (r1 I:boolean) = (r7 I:mil.nga.geopackage.features.user.FeatureCursor) mil.nga.geopackage.features.user.FeatureCursor.moveToNext():boolean type: VIRTUAL A[Catch:\{ all \-\> 0x006a \}]\l0x0010: NOP   A[TRY_LEAVE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|0x0011: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0066 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0013|SYNTHETIC\lSplitter:B:8:0x0013\l}"];
Node_9 [shape=record,label="{9\:\ ?|Splitter:B:8:0x0013\l|0x0013: INVOKE  (r1 I:mil.nga.geopackage.user.UserRow) = (r7 I:mil.nga.geopackage.features.user.FeatureCursor) mil.nga.geopackage.features.user.FeatureCursor.getRow():mil.nga.geopackage.user.UserRow type: VIRTUAL A[Catch:\{ Exception \-\> 0x003a \}, TRY_ENTER]\l0x0017: CHECK_CAST  (r1 I:mil.nga.geopackage.features.user.FeatureRow) = (mil.nga.geopackage.features.user.FeatureRow) (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ Exception \-\> 0x003a \}]\l0x0019: INVOKE  (r2 I:boolean) = (r1 I:mil.nga.geopackage.features.user.FeatureRow) mil.nga.geopackage.features.user.FeatureRow.isValid():boolean type: VIRTUAL A[Catch:\{ Exception \-\> 0x003a \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x001d|0x001d: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0001 A[Catch:\{ Exception \-\> 0x003a \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x001f|0x001f: INVOKE  (r2 I:long) = (r1 I:mil.nga.geopackage.features.user.FeatureRow) mil.nga.geopackage.features.user.FeatureRow.getId():long type: VIRTUAL A[Catch:\{ Exception \-\> 0x003a \}]\l0x0023: INVOKE  (r1 I:mil.nga.geopackage.geom.GeoPackageGeometryData) = (r1 I:mil.nga.geopackage.features.user.FeatureRow) mil.nga.geopackage.features.user.FeatureRow.getGeometry():mil.nga.geopackage.geom.GeoPackageGeometryData type: VIRTUAL A[Catch:\{ Exception \-\> 0x003a \}]\l0x0027: INVOKE  (r1 I:boolean) = \l  (r5 I:mil.nga.geopackage.extension.index.FeatureTableIndex)\l  (r6 I:mil.nga.geopackage.extension.index.TableIndex)\l  (r2 I:long)\l  (r1 I:mil.nga.geopackage.geom.GeoPackageGeometryData)\l mil.nga.geopackage.extension.index.FeatureTableIndex.index(mil.nga.geopackage.extension.index.TableIndex, long, mil.nga.geopackage.geom.GeoPackageGeometryData):boolean type: VIRTUAL A[Catch:\{ Exception \-\> 0x003a \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x002b|0x002b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x002f A[Catch:\{ Exception \-\> 0x003a \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x002d|0x002d: ARITH  (r0 I:int) = (r0 I:int) + (1 int) A[Catch:\{ Exception \-\> 0x003a \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x002f|0x002f: IGET  (r1 I:mil.nga.geopackage.io.GeoPackageProgress) = (r5 I:mil.nga.geopackage.extension.index.FeatureTableIndex) mil.nga.geopackage.extension.index.FeatureTableIndex.progress mil.nga.geopackage.io.GeoPackageProgress A[Catch:\{ Exception \-\> 0x003a \}]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0031|0x0031: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0001 A[Catch:\{ Exception \-\> 0x003a \}]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0033|0x0033: IGET  (r1 I:mil.nga.geopackage.io.GeoPackageProgress) = (r5 I:mil.nga.geopackage.extension.index.FeatureTableIndex) mil.nga.geopackage.extension.index.FeatureTableIndex.progress mil.nga.geopackage.io.GeoPackageProgress A[Catch:\{ Exception \-\> 0x003a \}]\l0x0035: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ Exception \-\> 0x003a \}]\l0x0036: INVOKE  (r1 I:mil.nga.geopackage.io.GeoPackageProgress), (r2 I:int) mil.nga.geopackage.io.GeoPackageProgress.addProgress(int):void type: INTERFACE A[Catch:\{ Exception \-\> 0x003a \}, TRY_LEAVE]\l}"];
Node_18 [shape=record,label="{18\:\ 0x003a|ExcHandler: Exception null\lSplitter:B:8:0x0013\l|0x003a: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_19 [shape=record,label="{19\:\ 0x003b|0x003b: CONST_CLASS  (r2 I:java.lang.Class\<mil.nga.geopackage.extension.index.FeatureTableIndex\>) =  mil.nga.geopackage.extension.index.FeatureTableIndex.class \l}"];
Node_20 [shape=record,label="{20\:\ 0x003d|SYNTHETIC\lSplitter:B:20:0x003d\l}"];
Node_21 [shape=record,label="{21\:\ ?|Splitter:B:20:0x003d\l|0x003d: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.Class) java.lang.Class.getSimpleName():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x006a \}, TRY_ENTER]\l0x0041: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ all \-\> 0x006a \}]\l0x0043: INVOKE  (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x006a \}]\l0x0046: CONST_STR  (r4 I:java.lang.String) =  \"Failed to index feature. Table: \" A[Catch:\{ all \-\> 0x006a \}]\l0x0048: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x006a \}]\l0x004b: INVOKE  (r4 I:java.lang.String) = (r6 I:mil.nga.geopackage.extension.index.TableIndex) mil.nga.geopackage.extension.index.TableIndex.getTableName():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x006a \}]\l0x004f: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x006a \}]\l0x0052: CONST_STR  (r4 I:java.lang.String) =  \", Position: \" A[Catch:\{ all \-\> 0x006a \}]\l0x0054: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x006a \}]\l0x0057: INVOKE  (r4 I:int) = (r7 I:mil.nga.geopackage.features.user.FeatureCursor) mil.nga.geopackage.features.user.FeatureCursor.getPosition():int type: VIRTUAL A[Catch:\{ all \-\> 0x006a \}]\l0x005b: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x006a \}]\l0x005e: INVOKE  (r3 I:java.lang.String) = (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x006a \}]\l0x0062: INVOKE  \l  (r2 I:java.lang.String)\l  (r3 I:java.lang.String)\l  (r1 I:java.lang.Throwable)\l android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC A[Catch:\{ all \-\> 0x006a \}, TRY_LEAVE]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0066|0x0066: INVOKE  (r7 I:mil.nga.geopackage.features.user.FeatureCursor) mil.nga.geopackage.features.user.FeatureCursor.close():void type: VIRTUAL \l}"];
Node_24 [shape=record,label="{24\:\ 0x0069|0x0069: RETURN  (r0 I:int) \l}"];
Node_25 [shape=record,label="{25\:\ 0x006a|ExcHandler: all null\lSplitter:B:1:0x0001\l|0x006a: MOVE_EXCEPTION  (r6 I:?[OBJECT]) =  \l}"];
Node_26 [shape=record,label="{26\:\ 0x006b|0x006b: INVOKE  (r7 I:mil.nga.geopackage.features.user.FeatureCursor) mil.nga.geopackage.features.user.FeatureCursor.close():void type: VIRTUAL \l}"];
Node_27 [shape=record,label="{27\:\ 0x006e|0x006e: THROW  (r6 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private int mil.nga.geopackage.extension.index.FeatureTableIndex.indexRows((r5 'this' I:mil.nga.geopackage.extension.index.FeatureTableIndex A[IMMUTABLE_TYPE, THIS]), (r6 I:mil.nga.geopackage.extension.index.TableIndex A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:mil.nga.geopackage.features.user.FeatureCursor A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_25;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_23;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_23;
Node_8 -> Node_9;
Node_8 -> Node_18;
Node_9 -> Node_10;
Node_10 -> Node_1;
Node_10 -> Node_11[style=dashed];
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_1;
Node_15 -> Node_16[style=dashed];
Node_16 -> Node_1;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_20 -> Node_25;
Node_21 -> Node_25;
Node_21 -> Node_1;
Node_23 -> Node_24;
Node_25 -> Node_26;
Node_26 -> Node_27;
}

