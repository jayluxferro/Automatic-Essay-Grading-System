digraph "CFG formil.nga.geopackage.extension.index.FeatureTableIndex.indexRows(Lmil\/nga\/geopackage\/extension\/index\/TableIndex;Lmil\/nga\/geopackage\/features\/user\/FeatureCursor;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|LOOP_START\lSYNTHETIC\lPHI: r0 \l  PHI: (r0v1 int) = (r0v0 int), (r0v2 int) binds: [B:0:0x0000, B:26:0x0001] A[DONT_GENERATE, DONT_INLINE]\lSplitter:B:1:0x0001\lLOOP:0: B:1:0x0001\-\>B:26:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ Exception \-\> 0x003a, all \-\> 0x006a \}\lSplitter:B:1:0x0001\l}"];
Node_3 [shape=record,label="{3\:\ 0x0003|Catch:\{ Exception \-\> 0x003a, all \-\> 0x006a \}\l|if (r5.progress == null) goto L_0x000d     \/\/ Catch:\{ Exception \-\> 0x003a, all \-\> 0x006a \}\l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|Catch:\{ Exception \-\> 0x003a, all \-\> 0x006a \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|Catch:\{ Exception \-\> 0x003a, all \-\> 0x006a \}\l|if (r5.progress.isActive() == false) goto L_0x0066     \/\/ Catch:\{ Exception \-\> 0x003a, all \-\> 0x006a \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|Catch:\{ Exception \-\> 0x003a, all \-\> 0x006a \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|if (r7.moveToNext() == false) goto L_0x0066\l}"];
Node_8 [shape=record,label="{8\:\ 0x0013|SYNTHETIC\lSplitter:B:8:0x0013\l}"];
Node_9 [shape=record,label="{9\:\ ?|Catch:\{ Exception \-\> 0x003a, all \-\> 0x006a \}\lSplitter:B:8:0x0013\l|mil.nga.geopackage.features.user.FeatureRow r1 = (mil.nga.geopackage.features.user.FeatureRow) r7.getRow()     \/\/ Catch:\{ Exception \-\> 0x003a, all \-\> 0x006a \}\l}"];
Node_10 [shape=record,label="{10\:\ 0x001d|Catch:\{ Exception \-\> 0x003a, all \-\> 0x006a \}\l|if (r1.isValid() == false) goto L_0x0001     \/\/ Catch:\{ Exception \-\> 0x003a, all \-\> 0x006a \}\l}"];
Node_11 [shape=record,label="{11\:\ 0x001f|Catch:\{ Exception \-\> 0x003a, all \-\> 0x006a \}\l}"];
Node_12 [shape=record,label="{12\:\ 0x002b|Catch:\{ Exception \-\> 0x003a, all \-\> 0x006a \}\l|if (index(r6, r1.getId(), r1.getGeometry()) == false) goto L_0x002f     \/\/ Catch:\{ Exception \-\> 0x003a, all \-\> 0x006a \}\l}"];
Node_13 [shape=record,label="{13\:\ 0x002d|Catch:\{ Exception \-\> 0x003a, all \-\> 0x006a \}\l|int r0 = r0 + 1     \/\/ Catch:\{ Exception \-\> 0x003a, all \-\> 0x006a \}\l}"];
Node_14 [shape=record,label="{14\:\ 0x002f|Catch:\{ Exception \-\> 0x003a, all \-\> 0x006a \}\lPHI: r0 \l  PHI: (r0v3 int) = (r0v1 int), (r0v4 int) binds: [B:12:0x002b, B:13:0x002d] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0031|Catch:\{ Exception \-\> 0x003a, all \-\> 0x006a \}\l|if (r5.progress == null) goto L_0x0001     \/\/ Catch:\{ Exception \-\> 0x003a, all \-\> 0x006a \}\l}"];
Node_16 [shape=record,label="{16\:\ 0x0033|Catch:\{ Exception \-\> 0x003a, all \-\> 0x006a \}\l|r5.progress.addProgress(1)     \/\/ Catch:\{ Exception \-\> 0x003a, all \-\> 0x006a \}\l}"];
Node_17 [shape=record,label="{17\:\ 0x003a|ExcHandler: Exception (r1v2 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:8:0x0013\l|java.lang.Exception r1 = move\-exception\l}"];
Node_18 [shape=record,label="{18\:\ 0x003b}"];
Node_19 [shape=record,label="{19\:\ 0x003d|SYNTHETIC\lSplitter:B:19:0x003d\l}"];
Node_20 [shape=record,label="{20\:\ ?|Catch:\{ Exception \-\> 0x003a, all \-\> 0x006a \}\lSplitter:B:19:0x003d\l|java.lang.String r2 = mil.nga.geopackage.extension.index.FeatureTableIndex.class.getSimpleName()     \/\/ Catch:\{ Exception \-\> 0x003a, all \-\> 0x006a \}\ljava.lang.StringBuilder r3 = new java.lang.StringBuilder()     \/\/ Catch:\{ Exception \-\> 0x003a, all \-\> 0x006a \}\lr3.append(\"Failed to index feature. Table: \")     \/\/ Catch:\{ Exception \-\> 0x003a, all \-\> 0x006a \}\lr3.append(r6.getTableName())     \/\/ Catch:\{ Exception \-\> 0x003a, all \-\> 0x006a \}\lr3.append(\", Position: \")     \/\/ Catch:\{ Exception \-\> 0x003a, all \-\> 0x006a \}\lr3.append(r7.getPosition())     \/\/ Catch:\{ Exception \-\> 0x003a, all \-\> 0x006a \}\landroid.util.Log.e(r2, r3.toString(), r1)     \/\/ Catch:\{ Exception \-\> 0x003a, all \-\> 0x006a \}\l}"];
Node_21 [shape=record,label="{21\:\ 0x0066|r7.close()\l}"];
Node_22 [shape=record,label="{22\:\ 0x0069|RETURN\l|return r0\l}"];
Node_23 [shape=record,label="{23\:\ 0x006a|ExcHandler: all (r6v1 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:1:0x0001\l|java.lang.Throwable r6 = move\-exception\l}"];
Node_24 [shape=record,label="{24\:\ 0x006b|r7.close()\l}"];
Node_25 [shape=record,label="{25\:\ 0x006e|throw r6\l}"];
Node_26 [shape=record,label="{26\:\ 0x0001|LOOP_END\lSYNTHETIC\lPHI: r0 \l  PHI: (r0v2 int) = (r0v1 int), (r0v1 int), (r0v3 int), (r0v3 int) binds: [B:32:0x0001, B:29:0x0001, B:30:0x0001, B:31:0x0001] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0001\-\>B:26:0x0001\l}"];
Node_27 [shape=record,label="{27\:\ 0x0066|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x0066|SYNTHETIC\l}"];
Node_29 [shape=record,label="{29\:\ 0x0001|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x0001|SYNTHETIC\l}"];
Node_31 [shape=record,label="{31\:\ 0x0001|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ 0x0001|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private int mil.nga.geopackage.extension.index.FeatureTableIndex.indexRows((r5v0 'this' mil.nga.geopackage.extension.index.FeatureTableIndex A[IMMUTABLE_TYPE, THIS]), (r6v0 mil.nga.geopackage.extension.index.TableIndex A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 mil.nga.geopackage.features.user.FeatureCursor A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_23;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_27;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_28;
Node_8 -> Node_9;
Node_8 -> Node_17;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_29;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_30;
Node_16 -> Node_31;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_19 -> Node_23;
Node_20 -> Node_23;
Node_20 -> Node_32;
Node_21 -> Node_22;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_26 -> Node_1;
Node_27 -> Node_21;
Node_28 -> Node_21;
Node_29 -> Node_26;
Node_30 -> Node_26;
Node_31 -> Node_26;
Node_32 -> Node_26;
}

