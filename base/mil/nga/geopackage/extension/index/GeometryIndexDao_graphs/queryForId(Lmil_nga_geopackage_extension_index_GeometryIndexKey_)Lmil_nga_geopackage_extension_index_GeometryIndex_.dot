digraph "CFG formil.nga.geopackage.extension.index.GeometryIndexDao.queryForId(Lmil\/nga\/geopackage\/extension\/index\/GeometryIndexKey;)Lmil\/nga\/geopackage\/extension\/index\/GeometryIndex;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r5 == null) goto L_0x006b\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|java.util.HashMap r0 = new java.util.HashMap()\lr0.put(\"table_name\", r5.getTableName())\lr0.put(\"geom_id\", java.lang.Long.valueOf(r5.getGeomId()))\ljava.util.List r0 = queryForFieldValues(r0)\l}"];
Node_2 [shape=record,label="{2\:\ 0x0025|if (r0.isEmpty() != false) goto L_0x006b\l}"];
Node_3 [shape=record,label="{3\:\ 0x0027}"];
Node_4 [shape=record,label="{4\:\ 0x002c|if (r0.size() \> 1) goto L_0x0036\l}"];
Node_5 [shape=record,label="{5\:\ 0x002e}"];
Node_6 [shape=record,label="{6\:\ 0x0036|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"More than one \")\lr1.append(mil.nga.geopackage.extension.index.GeometryIndex.class.getSimpleName())\lr1.append(\" returned for key. Table Name: \")\lr1.append(r5.getTableName())\lr1.append(\", Geom Id: \")\lr1.append(r5.getGeomId())\l}"];
Node_7 [shape=record,label="{7\:\ 0x006a|throw new java.sql.SQLException(r1.toString())\l}"];
Node_8 [shape=record,label="{8\:\ 0x006b|SYNTHETIC\lRETURN\lORIG_RETURN\l|return null\l}"];
Node_9 [shape=record,label="{9\:\ ?|SYNTHETIC\lRETURN\l|return (mil.nga.geopackage.extension.index.GeometryIndex) r0.get(0)\l}"];
MethodNode[shape=record,label="{public mil.nga.geopackage.extension.index.GeometryIndex mil.nga.geopackage.extension.index.GeometryIndexDao.queryForId((r4v0 'this' mil.nga.geopackage.extension.index.GeometryIndexDao A[IMMUTABLE_TYPE, THIS]), (r5v0 mil.nga.geopackage.extension.index.GeometryIndexKey A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_8;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_8;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_9;
Node_6 -> Node_7;
}

