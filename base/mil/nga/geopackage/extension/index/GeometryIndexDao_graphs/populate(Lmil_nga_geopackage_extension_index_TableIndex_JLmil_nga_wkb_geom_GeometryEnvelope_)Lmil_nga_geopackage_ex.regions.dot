digraph "CFG formil.nga.geopackage.extension.index.GeometryIndexDao.populate(Lmil\/nga\/geopackage\/extension\/index\/TableIndex;JLmil\/nga\/wkb\/geom\/GeometryEnvelope;)Lmil\/nga\/geopackage\/extension\/index\/GeometryIndex;" {
subgraph cluster_Region_689378080 {
label = "R(4:0|(1:2)|(1:5)|6)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|mil.nga.geopackage.extension.index.GeometryIndex mil.nga.geopackage.extension.index.GeometryIndex r0 = new mil.nga.geopackage.extension.index.GeometryIndex()\lr0.setTableIndex(r2)\lr0.setGeomId(r3)\lr0.setMinX(r5.getMinX())\lr0.setMaxX(r5.getMaxX())\lr0.setMinY(r5.getMinY())\lr0.setMaxY(r5.getMaxY())\l}"];
subgraph cluster_IfRegion_1895458089 {
label = "IF [B:1:0x002b] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x002b|if (r5.hasZ() == true) goto L_0x002d\l}"];
subgraph cluster_Region_39031853 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x002d|r0.setMinZ(r5.getMinZ())\lr0.setMaxZ(r5.getMaxZ())\l}"];
}
}
subgraph cluster_IfRegion_1112614248 {
label = "IF [B:4:0x003f] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x003f|if (r5.hasM() == true) goto L_0x0041\l}"];
subgraph cluster_Region_1370771656 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0041|r0.setMinM(r5.getMinM())\lr0.setMaxM(r5.getMaxM())\l}"];
}
}
Node_6 [shape=record,label="{6\:\ 0x004f|RETURN\l|return r0\l}"];
}
Node_3 [shape=record,color=red,label="{3\:\ 0x003b}"];
MethodNode[shape=record,label="{public mil.nga.geopackage.extension.index.GeometryIndex mil.nga.geopackage.extension.index.GeometryIndexDao.populate((r1v0 'this' mil.nga.geopackage.extension.index.GeometryIndexDao A[IMMUTABLE_TYPE, THIS]), (r2v0 mil.nga.geopackage.extension.index.TableIndex A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 mil.nga.wkb.geom.GeometryEnvelope A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_5 -> Node_6;
Node_3 -> Node_4;
}

