digraph "CFG formil.nga.geopackage.extension.index.FeatureTableCoreIndex.isIndexed()Z" {
subgraph cluster_Region_1588564574 {
label = "R(1:(2:(1:17)|(2:2|(2:4|(2:(1:18)|(2:6|(2:(1:21)|(1:13)))))))) | DECL_VAR: java.util.Date null\l";
node [shape=record,color=blue];
subgraph cluster_Region_1864359590 {
label = "R(2:(1:17)|(2:2|(2:4|(2:(1:18)|(2:6|(2:(1:21)|(1:13)))))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_239950858 {
label = "IF [B:1:0x0005] THEN: R(1:17) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0005|if (getExtension() == null) goto L_?\l}"];
subgraph cluster_Region_1789663712 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return false\l}"];
}
}
subgraph cluster_Region_1219713929 {
label = "R(2:2|(2:4|(2:(1:18)|(2:6|(2:(1:21)|(1:13))))))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0007}"];
subgraph cluster_TryCatchRegion_1497908951 {
label = "Try: R(2:4|(2:(1:18)|(2:6|(2:(1:21)|(1:13))))) catches: R(3:14|15|16)";
node [shape=record,color=blue];
subgraph cluster_Region_2027904281 {
label = "R(2:4|(2:(1:18)|(2:6|(2:(1:21)|(1:13)))))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ ?|Catch:\{ SQLException \-\> 0x003f \}\lSplitter:B:3:0x000d\l|mil.nga.geopackage.core.contents.Contents mil.nga.geopackage.core.contents.Contents r0 = (mil.nga.geopackage.core.contents.Contents) r6.geoPackage.getContentsDao().queryForId(r6.tableName)     \/\/ Catch:\{ SQLException \-\> 0x003f \}\l}"];
subgraph cluster_Region_1023540472 {
label = "R(2:(1:18)|(2:6|(2:(1:21)|(1:13))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1976118774 {
label = "IF [B:5:0x0015] THEN: R(1:18) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0015|Catch:\{ SQLException \-\> 0x003f \}\l|if (r0 == null) goto L_?     \/\/ Catch:\{ SQLException \-\> 0x003f \}\l}"];
subgraph cluster_Region_937984417 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
}
}
subgraph cluster_Region_1071066751 {
label = "R(2:6|(2:(1:21)|(1:13)))";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0017|Catch:\{ SQLException \-\> 0x003f \}\l|java.util.Date java.util.Date r0 = r0.getLastChange()     \/\/ Catch:\{ SQLException \-\> 0x003f \}\lmil.nga.geopackage.extension.index.TableIndex mil.nga.geopackage.extension.index.TableIndex r2 = (mil.nga.geopackage.extension.index.TableIndex) r6.geoPackage.getTableIndexDao().queryForId(r6.tableName)     \/\/ Catch:\{ SQLException \-\> 0x003f \}\l}"];
subgraph cluster_Region_1708518342 {
label = "R(2:(1:21)|(1:13))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1036495748 {
label = "IF [B:7:0x0029, B:9:0x002f, B:12:0x003b] THEN: R(1:21) ELSE: null";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0029|Catch:\{ SQLException \-\> 0x003f \}\l|if (r2 == null) goto L_?     \/\/ Catch:\{ SQLException \-\> 0x003f \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x002f|ADDED_TO_REGION\lCatch:\{ SQLException \-\> 0x003f \}\l|if ((r2 = r2.getLastIndexed()) == null) goto L_?     \/\/ Catch:\{ SQLException \-\> 0x003f \}\l}"];
Node_12 [shape=record,label="{12\:\ 0x003b|ADDED_TO_REGION\l|if (r2.getTime() \< r0.getTime()) goto L_?\l}"];
subgraph cluster_Region_2117105493 {
label = "R(1:21)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
}
}
subgraph cluster_Region_1290052183 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x003d|SYNTHETIC\lRETURN\l|return true\l}"];
}
}
}
}
}
subgraph cluster_Region_1072875491 {
label = "R(3:14|15|16) | ExcHandler: SQLException (r0v3 'e' java.sql.SQLException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x003f|ExcHandler: SQLException (r0v3 'e' java.sql.SQLException A[CUSTOM_DECLARE])\lSplitter:B:3:0x000d\l}"];
Node_15 [shape=record,label="{15\:\ 0x0040}"];
Node_16 [shape=record,label="{16\:\ 0x0066|throw new mil.nga.geopackage.GeoPackageException(\"Failed to check if table is indexed, GeoPackage: \" + r6.geoPackage.getName() + \", Table Name: \" + r6.tableName, r0)\l}"];
}
}
}
}
}
subgraph cluster_Region_1072875491 {
label = "R(3:14|15|16) | ExcHandler: SQLException (r0v3 'e' java.sql.SQLException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x003f|ExcHandler: SQLException (r0v3 'e' java.sql.SQLException A[CUSTOM_DECLARE])\lSplitter:B:3:0x000d\l}"];
Node_15 [shape=record,label="{15\:\ 0x0040}"];
Node_16 [shape=record,label="{16\:\ 0x0066|throw new mil.nga.geopackage.GeoPackageException(\"Failed to check if table is indexed, GeoPackage: \" + r6.geoPackage.getName() + \", Table Name: \" + r6.tableName, r0)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x000d|SYNTHETIC\lSplitter:B:3:0x000d\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x002b|Catch:\{ SQLException \-\> 0x003f \}\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0031|Catch:\{ SQLException \-\> 0x003f \}\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0039}"];
Node_19 [shape=record,color=red,label="{19\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return false\l}"];
Node_20 [shape=record,color=red,label="{20\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return false\l}"];
MethodNode[shape=record,label="{public boolean mil.nga.geopackage.extension.index.FeatureTableCoreIndex.isIndexed((r6v0 'this' mil.nga.geopackage.extension.index.FeatureTableCoreIndex A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_17;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_18;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_19;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_20;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_21;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_0 -> Node_1;
Node_3 -> Node_4;
Node_3 -> Node_14;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12;
}

