digraph "CFG formil.nga.geopackage.extension.index.FeatureTableCoreIndex.isIndexed()Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:mil.nga.geopackage.extension.Extensions) = \l  (r6 I:mil.nga.geopackage.extension.index.FeatureTableCoreIndex)\l mil.nga.geopackage.extension.index.FeatureTableCoreIndex.getExtension():mil.nga.geopackage.extension.Extensions type: VIRTUAL \l0x0004: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0067 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: IGET  (r0 I:mil.nga.geopackage.GeoPackageCore) = \l  (r6 I:mil.nga.geopackage.extension.index.FeatureTableCoreIndex)\l mil.nga.geopackage.extension.index.FeatureTableCoreIndex.geoPackage mil.nga.geopackage.GeoPackageCore \l0x0009: INVOKE  (r0 I:mil.nga.geopackage.core.contents.ContentsDao) = (r0 I:mil.nga.geopackage.GeoPackageCore) mil.nga.geopackage.GeoPackageCore.getContentsDao():mil.nga.geopackage.core.contents.ContentsDao type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|SYNTHETIC\lSplitter:B:3:0x000d\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x000d\l|0x000d: IGET  (r2 I:java.lang.String) = \l  (r6 I:mil.nga.geopackage.extension.index.FeatureTableCoreIndex)\l mil.nga.geopackage.extension.index.FeatureTableCoreIndex.tableName java.lang.String A[Catch:\{ SQLException \-\> 0x003f \}, TRY_ENTER]\l0x000f: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:mil.nga.geopackage.core.contents.ContentsDao)\l  (r2 I:java.lang.Object)\l mil.nga.geopackage.core.contents.ContentsDao.queryForId(java.lang.Object):java.lang.Object type: VIRTUAL A[Catch:\{ SQLException \-\> 0x003f \}]\l0x0013: CHECK_CAST  (r0 I:mil.nga.geopackage.core.contents.Contents) = (mil.nga.geopackage.core.contents.Contents) (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ SQLException \-\> 0x003f \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0067 A[Catch:\{ SQLException \-\> 0x003f \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|0x0017: INVOKE  (r0 I:java.util.Date) = (r0 I:mil.nga.geopackage.core.contents.Contents) mil.nga.geopackage.core.contents.Contents.getLastChange():java.util.Date type: VIRTUAL A[Catch:\{ SQLException \-\> 0x003f \}]\l0x001b: IGET  (r2 I:mil.nga.geopackage.GeoPackageCore) = \l  (r6 I:mil.nga.geopackage.extension.index.FeatureTableCoreIndex)\l mil.nga.geopackage.extension.index.FeatureTableCoreIndex.geoPackage mil.nga.geopackage.GeoPackageCore A[Catch:\{ SQLException \-\> 0x003f \}]\l0x001d: INVOKE  (r2 I:mil.nga.geopackage.extension.index.TableIndexDao) = (r2 I:mil.nga.geopackage.GeoPackageCore) mil.nga.geopackage.GeoPackageCore.getTableIndexDao():mil.nga.geopackage.extension.index.TableIndexDao type: INTERFACE A[Catch:\{ SQLException \-\> 0x003f \}]\l0x0021: IGET  (r3 I:java.lang.String) = \l  (r6 I:mil.nga.geopackage.extension.index.FeatureTableCoreIndex)\l mil.nga.geopackage.extension.index.FeatureTableCoreIndex.tableName java.lang.String A[Catch:\{ SQLException \-\> 0x003f \}]\l0x0023: INVOKE  (r2 I:java.lang.Object) = \l  (r2 I:mil.nga.geopackage.extension.index.TableIndexDao)\l  (r3 I:java.lang.Object)\l mil.nga.geopackage.extension.index.TableIndexDao.queryForId(java.lang.Object):java.lang.Object type: VIRTUAL A[Catch:\{ SQLException \-\> 0x003f \}]\l0x0027: CHECK_CAST  (r2 I:mil.nga.geopackage.extension.index.TableIndex) = (mil.nga.geopackage.extension.index.TableIndex) (r2 I:?[OBJECT, ARRAY]) A[Catch:\{ SQLException \-\> 0x003f \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0029|0x0029: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0067 A[Catch:\{ SQLException \-\> 0x003f \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x002b|0x002b: INVOKE  (r2 I:java.util.Date) = (r2 I:mil.nga.geopackage.extension.index.TableIndex) mil.nga.geopackage.extension.index.TableIndex.getLastIndexed():java.util.Date type: VIRTUAL A[Catch:\{ SQLException \-\> 0x003f \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x002f|0x002f: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0067 A[Catch:\{ SQLException \-\> 0x003f \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0031|0x0031: INVOKE  (r2 I:long) = (r2 I:java.util.Date) java.util.Date.getTime():long type: VIRTUAL A[Catch:\{ SQLException \-\> 0x003f \}]\l0x0035: INVOKE  (r4 I:long) = (r0 I:java.util.Date) java.util.Date.getTime():long type: VIRTUAL A[Catch:\{ SQLException \-\> 0x003f \}]\l0x0038: NOP   A[TRY_LEAVE]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0039|0x0039: CMP_L  (r0 I:int) = (r2 I:long), (r4 I:long) \l}"];
Node_12 [shape=record,label="{12\:\ 0x003b|0x003b: IF  (r0 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:17:0x0067 \l}"];
Node_13 [shape=record,label="{13\:\ 0x003d|0x003d: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x003f|ExcHandler: SQLException null\lSplitter:B:3:0x000d\l|0x003f: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_15 [shape=record,label="{15\:\ 0x0040|0x0040: NEW_INSTANCE  (r1 I:mil.nga.geopackage.GeoPackageException) =  mil.nga.geopackage.GeoPackageException \l0x0042: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0044: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0047: CONST_STR  (r3 I:java.lang.String) =  \"Failed to check if table is indexed, GeoPackage: \" \l0x0049: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x004c: IGET  (r3 I:mil.nga.geopackage.GeoPackageCore) = \l  (r6 I:mil.nga.geopackage.extension.index.FeatureTableCoreIndex)\l mil.nga.geopackage.extension.index.FeatureTableCoreIndex.geoPackage mil.nga.geopackage.GeoPackageCore \l0x004e: INVOKE  (r3 I:java.lang.String) = (r3 I:mil.nga.geopackage.GeoPackageCore) mil.nga.geopackage.GeoPackageCore.getName():java.lang.String type: INTERFACE \l0x0052: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0055: CONST_STR  (r3 I:java.lang.String) =  \", Table Name: \" \l0x0057: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x005a: IGET  (r3 I:java.lang.String) = \l  (r6 I:mil.nga.geopackage.extension.index.FeatureTableCoreIndex)\l mil.nga.geopackage.extension.index.FeatureTableCoreIndex.tableName java.lang.String \l0x005c: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x005f: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0063: INVOKE  \l  (r1 I:mil.nga.geopackage.GeoPackageException)\l  (r2 I:java.lang.String)\l  (r0 I:java.lang.Throwable)\l mil.nga.geopackage.GeoPackageException.\<init\>(java.lang.String, java.lang.Throwable):void type: DIRECT \l}"];
Node_16 [shape=record,label="{16\:\ 0x0066|0x0066: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0067|0x0067: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean mil.nga.geopackage.extension.index.FeatureTableCoreIndex.isIndexed((r6 'this' I:mil.nga.geopackage.extension.index.FeatureTableCoreIndex A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_17;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_14;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_17;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_17;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_17;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_17;
Node_13 -> Node_17;
Node_14 -> Node_15;
Node_15 -> Node_16;
}

