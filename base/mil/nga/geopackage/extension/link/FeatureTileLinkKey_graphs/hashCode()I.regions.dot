digraph "CFG formil.nga.geopackage.extension.link.FeatureTileLinkKey.hashCode()I" {
subgraph cluster_Region_1540134378 {
label = "R(5:0|(1:2)(1:3)|4|(1:6)|8) | DECL_VAR: int null\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r1 = 0\l}"];
subgraph cluster_IfRegion_789915217 {
label = "IF [B:1:0x0003] THEN: R(1:2) ELSE: R(1:3)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0003|if (r3.featureTableName == null) goto L_0x0005\l}"];
subgraph cluster_Region_1508930272 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0005|r0 = 0\l}"];
}
subgraph cluster_Region_2063861306 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0007|int r0 = r3.featureTableName.hashCode()\l}"];
}
}
Node_4 [shape=record,label="{4\:\ 0x000d|PHI: r0 \l  PHI: (r0v1 int) = (r0v6 int), (r0v7 int) binds: [B:3:0x0007, B:2:0x0005] A[DONT_GENERATE, DONT_INLINE]\l|int int r0 = (r0 + 31) * 31\l}"];
subgraph cluster_IfRegion_1639239694 {
label = "IF [B:5:0x0014] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0014|if (r3.tileTableName != null) goto L_0x0017\l}"];
subgraph cluster_Region_1957168034 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0017|int r1 = r3.tileTableName.hashCode()\l}"];
}
}
Node_8 [shape=record,label="{8\:\ 0x001e|RETURN\l|return r0 + r1\l}"];
}
Node_7 [shape=record,color=red,label="{7\:\ 0x001d|PHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v3 int) binds: [B:5:0x0014, B:6:0x0017] A[DONT_GENERATE, DONT_INLINE]\l}"];
MethodNode[shape=record,label="{public int mil.nga.geopackage.extension.link.FeatureTileLinkKey.hashCode((r3v0 'this' mil.nga.geopackage.extension.link.FeatureTileLinkKey A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_7[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_8;
}

