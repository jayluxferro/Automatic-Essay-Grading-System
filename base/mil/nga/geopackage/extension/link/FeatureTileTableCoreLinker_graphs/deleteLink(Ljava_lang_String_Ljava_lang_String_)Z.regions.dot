digraph "CFG formil.nga.geopackage.extension.link.FeatureTileTableCoreLinker.deleteLink(Ljava\/lang\/String;Ljava\/lang\/String;)Z" {
subgraph cluster_Region_1139031165 {
label = "R(1:(1:(2:(1:10)|(2:3|(2:(1:9)|(1:11))))))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_2088427422 {
label = "Try: R(1:(2:(1:10)|(2:3|(2:(1:9)|(1:11))))) catches: R(3:6|7|8)";
node [shape=record,color=blue];
subgraph cluster_Region_181729320 {
label = "R(1:(2:(1:10)|(2:3|(2:(1:9)|(1:11)))))";
node [shape=record,color=blue];
subgraph cluster_Region_1067553182 {
label = "R(2:(1:10)|(2:3|(2:(1:9)|(1:11))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1564759491 {
label = "IF [B:2:0x0007] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0007|Catch:\{ SQLException \-\> 0x0019 \}\l|if (r4.featureTileLinkDao.isTableExists() != true) goto L_?     \/\/ Catch:\{ SQLException \-\> 0x0019 \}\l}"];
subgraph cluster_Region_2011756506 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
}
}
subgraph cluster_Region_1523602615 {
label = "R(2:3|(2:(1:9)|(1:11)))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0009|Catch:\{ SQLException \-\> 0x0019 \}\l}"];
subgraph cluster_Region_1766724370 {
label = "R(2:(1:9)|(1:11))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_383494581 {
label = "IF [B:4:0x0014] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0014|if (r4.featureTileLinkDao.deleteById(new mil.nga.geopackage.extension.link.FeatureTileLinkKey(r5, r6)) \> 0) goto L_0x0016\l}"];
subgraph cluster_Region_649972371 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return true\l}"];
}
}
subgraph cluster_Region_2114995999 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
}
}
}
}
}
subgraph cluster_Region_1734286668 {
label = "R(3:6|7|8) | ExcHandler: SQLException (r0v0 'e' java.sql.SQLException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0019|ExcHandler: SQLException (r0v0 'e' java.sql.SQLException A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l}"];
Node_7 [shape=record,label="{7\:\ 0x001a}"];
Node_8 [shape=record,label="{8\:\ 0x0046|throw new mil.nga.geopackage.GeoPackageException(\"Failed to delete feature tile link for GeoPackage: \" + r4.geoPackage.getName() + \", Feature Table: \" + r5 + \", Tile Table: \" + r6, r0)\l}"];
}
}
}
subgraph cluster_Region_1734286668 {
label = "R(3:6|7|8) | ExcHandler: SQLException (r0v0 'e' java.sql.SQLException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0019|ExcHandler: SQLException (r0v0 'e' java.sql.SQLException A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l}"];
Node_7 [shape=record,label="{7\:\ 0x001a}"];
Node_8 [shape=record,label="{8\:\ 0x0046|throw new mil.nga.geopackage.GeoPackageException(\"Failed to delete feature tile link for GeoPackage: \" + r4.geoPackage.getName() + \", Feature Table: \" + r5 + \", Tile Table: \" + r6, r0)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|Catch:\{ SQLException \-\> 0x0019 \}\lSplitter:B:0:0x0000\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0016}"];
MethodNode[shape=record,label="{public boolean mil.nga.geopackage.extension.link.FeatureTileTableCoreLinker.deleteLink((r4v0 'this' mil.nga.geopackage.extension.link.FeatureTileTableCoreLinker A[IMMUTABLE_TYPE, THIS]), (r5v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_10;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_11[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_0 -> Node_1;
Node_0 -> Node_6;
Node_1 -> Node_2;
Node_5 -> Node_9;
}

