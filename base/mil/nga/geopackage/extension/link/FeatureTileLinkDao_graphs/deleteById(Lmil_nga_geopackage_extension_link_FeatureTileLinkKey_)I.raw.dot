digraph "CFG formil.nga.geopackage.extension.link.FeatureTileLinkDao.deleteById(Lmil\/nga\/geopackage\/extension\/link\/FeatureTileLinkKey;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000d \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: INVOKE  (r1 I:mil.nga.geopackage.extension.link.FeatureTileLink) = \l  (r0 I:mil.nga.geopackage.extension.link.FeatureTileLinkDao)\l  (r1 I:mil.nga.geopackage.extension.link.FeatureTileLinkKey)\l mil.nga.geopackage.extension.link.FeatureTileLinkDao.queryForId(mil.nga.geopackage.extension.link.FeatureTileLinkKey):mil.nga.geopackage.extension.link.FeatureTileLink type: VIRTUAL \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000d \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: INVOKE  (r1 I:int) = \l  (r0 I:mil.nga.geopackage.extension.link.FeatureTileLinkDao)\l  (r1 I:mil.nga.geopackage.extension.link.FeatureTileLink)\l mil.nga.geopackage.extension.link.FeatureTileLinkDao.delete(mil.nga.geopackage.extension.link.FeatureTileLink):int type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: RETURN  (r1 I:int) \l}"];
MethodNode[shape=record,label="{public int mil.nga.geopackage.extension.link.FeatureTileLinkDao.deleteById((r0 'this' I:mil.nga.geopackage.extension.link.FeatureTileLinkDao A[IMMUTABLE_TYPE, THIS]), (r1 I:mil.nga.geopackage.extension.link.FeatureTileLinkKey A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_4;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_5;
Node_4 -> Node_5;
}

