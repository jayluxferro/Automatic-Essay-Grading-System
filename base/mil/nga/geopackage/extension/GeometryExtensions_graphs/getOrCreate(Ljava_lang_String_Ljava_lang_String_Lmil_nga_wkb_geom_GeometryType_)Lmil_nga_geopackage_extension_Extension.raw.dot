digraph "CFG formil.nga.geopackage.extension.GeometryExtensions.getOrCreate(Ljava\/lang\/String;Ljava\/lang\/String;Lmil\/nga\/wkb\/geom\/GeometryType;)Lmil\/nga\/geopackage\/extension\/Extensions;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:java.lang.String) = (r9 I:mil.nga.wkb.geom.GeometryType) mil.nga.geopackage.extension.GeometryExtensions.getExtensionName(mil.nga.wkb.geom.GeometryType):java.lang.String type: STATIC \l0x0004: SGET  (r4 I:java.lang.String) =  mil.nga.geopackage.extension.GeometryExtensions.GEOMETRY_TYPES_EXTENSION_DEFINITION java.lang.String \l0x0006: SGET  (r5 I:mil.nga.geopackage.extension.ExtensionScopeType) =  mil.nga.geopackage.extension.ExtensionScopeType.READ_WRITE mil.nga.geopackage.extension.ExtensionScopeType \l0x0008: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY]) \l0x0009: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l0x000a: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x000b: INVOKE  (r7 I:mil.nga.geopackage.extension.Extensions) = \l  (r0 I:mil.nga.geopackage.extension.GeometryExtensions)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.String)\l  (r3 I:java.lang.String)\l  (r4 I:java.lang.String)\l  (r5 I:mil.nga.geopackage.extension.ExtensionScopeType)\l mil.nga.geopackage.extension.GeometryExtensions.getOrCreate(java.lang.String, java.lang.String, java.lang.String, java.lang.String, mil.nga.geopackage.extension.ExtensionScopeType):mil.nga.geopackage.extension.Extensions type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|0x000f: RETURN  (r7 I:mil.nga.geopackage.extension.Extensions) \l}"];
MethodNode[shape=record,label="{public mil.nga.geopackage.extension.Extensions mil.nga.geopackage.extension.GeometryExtensions.getOrCreate((r6 'this' I:mil.nga.geopackage.extension.GeometryExtensions A[IMMUTABLE_TYPE, THIS]), (r7 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:mil.nga.wkb.geom.GeometryType A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

