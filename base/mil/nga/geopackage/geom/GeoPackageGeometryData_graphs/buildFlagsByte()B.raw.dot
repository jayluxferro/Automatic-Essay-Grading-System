digraph "CFG formil.nga.geopackage.geom.GeoPackageGeometryData.buildFlagsByte()B" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:boolean) = (r5 I:mil.nga.geopackage.geom.GeoPackageGeometryData) mil.nga.geopackage.geom.GeoPackageGeometryData.extended boolean \l0x0002: ARITH  (r0 I:int) = (r0 I:int) \<\< (5 int) \l0x0004: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0005: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l0x0006: CAST  (r0 I:byte) = (byte) (r0 I:int) \l0x0007: IGET  (r2 I:boolean) = (r5 I:mil.nga.geopackage.geom.GeoPackageGeometryData) mil.nga.geopackage.geom.GeoPackageGeometryData.empty boolean \l0x0009: ARITH  (r2 I:int) = (r2 I:int) \<\< (4 int) \l0x000b: ARITH  (r0 I:int) = (r0 I:int) + (r2 I:int) \l0x000c: CAST  (r0 I:byte) = (byte) (r0 I:int) \l0x000d: IGET  (r2 I:mil.nga.wkb.geom.GeometryEnvelope) = (r5 I:mil.nga.geopackage.geom.GeoPackageGeometryData) mil.nga.geopackage.geom.GeoPackageGeometryData.envelope mil.nga.wkb.geom.GeometryEnvelope \l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|0x000f: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0013 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0011|0x0011: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|0x0013: IGET  (r2 I:mil.nga.wkb.geom.GeometryEnvelope) = (r5 I:mil.nga.geopackage.geom.GeoPackageGeometryData) mil.nga.geopackage.geom.GeoPackageGeometryData.envelope mil.nga.wkb.geom.GeometryEnvelope \l0x0015: INVOKE  (r2 I:int) = (r2 I:mil.nga.wkb.geom.GeometryEnvelope) mil.nga.geopackage.geom.GeoPackageGeometryData.getIndicator(mil.nga.wkb.geom.GeometryEnvelope):int type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x0019|0x0019: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x001a: ARITH  (r2 I:int) = (r2 I:int) \<\< (r3 I:int) \l0x001b: ARITH  (r0 I:int) = (r0 I:int) + (r2 I:int) \l0x001c: CAST  (r0 I:byte) = (byte) (r0 I:int) \l0x001d: IGET  (r2 I:java.nio.ByteOrder) = (r5 I:mil.nga.geopackage.geom.GeoPackageGeometryData) mil.nga.geopackage.geom.GeoPackageGeometryData.byteOrder java.nio.ByteOrder \l0x001f: SGET  (r4 I:java.nio.ByteOrder) =  java.nio.ByteOrder.BIG_ENDIAN java.nio.ByteOrder \l}"];
Node_5 [shape=record,label="{5\:\ 0x0021|0x0021: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0024 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0024|0x0024: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0025|0x0025: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l0x0026: CAST  (r0 I:byte) = (byte) (r0 I:int) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0027|0x0027: RETURN  (r0 I:byte) \l}"];
MethodNode[shape=record,label="{private byte mil.nga.geopackage.geom.GeoPackageGeometryData.buildFlagsByte((r5 'this' I:mil.nga.geopackage.geom.GeoPackageGeometryData A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_7;
Node_5 -> Node_8[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_9;
}

