digraph "CFG formil.nga.geopackage.geom.GeoPackageGeometryData.readFlags(B)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: ARITH  (r0 I:int) = (r5 I:int) \>\> (7 int) \l0x0002: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0003: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) & (r1 I:?[int, boolean, short, byte, char]) \l0x0004: ARITH  (r2 I:int) = (r5 I:int) \>\> (6 int) \l0x0006: ARITH  (r2 I:?[int, boolean, short, byte, char]) = (r2 I:?[int, boolean, short, byte, char]) & (r1 I:?[int, boolean, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0047 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0047 \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: ARITH  (r0 I:int) = (r5 I:int) \>\> (5 int) \l0x000d: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) & (r1 I:?[int, boolean, short, byte, char]) \l0x000e: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0013 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|0x0014: IPUT  \l  (r0 I:boolean)\l  (r4 I:mil.nga.geopackage.geom.GeoPackageGeometryData)\l mil.nga.geopackage.geom.GeoPackageGeometryData.extended boolean \l0x0016: ARITH  (r0 I:int) = (r5 I:int) \>\> (4 int) \l0x0018: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) & (r1 I:?[int, boolean, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0019|0x0019: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x001c \l}"];
Node_9 [shape=record,label="{9\:\ 0x001b|0x001b: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x001c|0x001c: IPUT  \l  (r2 I:boolean)\l  (r4 I:mil.nga.geopackage.geom.GeoPackageGeometryData)\l mil.nga.geopackage.geom.GeoPackageGeometryData.empty boolean \l0x001e: ARITH  (r0 I:int) = (r5 I:int) \>\> (1 int) \l0x0020: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) & (7 ?[int, float, short, byte, char]) \l0x0022: CONST  (r2 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0023|0x0023: IF  (r0 I:?[int, byte, short, char]) \> (r2 I:?[int, byte, short, char])  \-\> B:18:0x0030 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0025|0x0025: ARITH  (r5 I:?[int, boolean, short, byte, char]) = (r5 I:?[int, boolean, short, byte, char]) & (r1 I:?[int, boolean, short, byte, char]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0026|0x0026: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x002b \l}"];
Node_14 [shape=record,label="{14\:\ 0x0028|0x0028: SGET  (r5 I:java.nio.ByteOrder) =  java.nio.ByteOrder.BIG_ENDIAN java.nio.ByteOrder \l}"];
Node_15 [shape=record,label="{15\:\ 0x002b|0x002b: SGET  (r5 I:java.nio.ByteOrder) =  java.nio.ByteOrder.LITTLE_ENDIAN java.nio.ByteOrder \l}"];
Node_16 [shape=record,label="{16\:\ 0x002d|0x002d: IPUT  \l  (r5 I:java.nio.ByteOrder)\l  (r4 I:mil.nga.geopackage.geom.GeoPackageGeometryData)\l mil.nga.geopackage.geom.GeoPackageGeometryData.byteOrder java.nio.ByteOrder \l}"];
Node_17 [shape=record,label="{17\:\ 0x002f|0x002f: RETURN  (r0 I:int) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0030|0x0030: NEW_INSTANCE  (r5 I:mil.nga.geopackage.GeoPackageException) =  mil.nga.geopackage.GeoPackageException \l0x0032: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0034: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0037: CONST_STR  (r2 I:java.lang.String) =  \"Unexpected GeoPackage Geometry flags. Envelope contents indicator must be between 0 and 4. Actual: \" \l0x0039: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x003c: INVOKE  (r1 I:java.lang.StringBuilder), (r0 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x003f: INVOKE  (r0 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0043: INVOKE  \l  (r5 I:mil.nga.geopackage.GeoPackageException)\l  (r0 I:java.lang.String)\l mil.nga.geopackage.GeoPackageException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_19 [shape=record,label="{19\:\ 0x0046|0x0046: THROW  (r5 I:java.lang.Throwable) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0047|0x0047: NEW_INSTANCE  (r5 I:mil.nga.geopackage.GeoPackageException) =  mil.nga.geopackage.GeoPackageException \l0x0049: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x004b: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x004e: CONST_STR  (r3 I:java.lang.String) =  \"Unexpected GeoPackage Geometry flags. Flag bit 7 and 6 should both be 0, 7=\" \l0x0050: INVOKE  (r1 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0053: INVOKE  (r1 I:java.lang.StringBuilder), (r0 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x0056: CONST_STR  (r0 I:java.lang.String) =  \", 6=\" \l0x0058: INVOKE  (r1 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x005b: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x005e: INVOKE  (r0 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0062: INVOKE  \l  (r5 I:mil.nga.geopackage.GeoPackageException)\l  (r0 I:java.lang.String)\l mil.nga.geopackage.GeoPackageException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_21 [shape=record,label="{21\:\ 0x0065|0x0065: THROW  (r5 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private int mil.nga.geopackage.geom.GeoPackageGeometryData.readFlags((r4 'this' I:mil.nga.geopackage.geom.GeoPackageGeometryData A[IMMUTABLE_TYPE, THIS]), (r5 I:byte A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_20;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_20;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_18;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_18 -> Node_19;
Node_20 -> Node_21;
}

