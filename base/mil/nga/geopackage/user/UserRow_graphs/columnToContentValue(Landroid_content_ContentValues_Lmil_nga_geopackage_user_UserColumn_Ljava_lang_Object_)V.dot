digraph "CFG formil.nga.geopackage.user.UserRow.columnToContentValue(Landroid\/content\/ContentValues;Lmil\/nga\/geopackage\/user\/UserColumn;Ljava\/lang\/Object;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.String r0 = r9.getName()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|if ((r10 instanceof java.lang.Number) == false) goto L_0x00c0\l}"];
Node_2 [shape=record,label="{2\:\ 0x000b}"];
Node_3 [shape=record,label="{3\:\ 0x000e|if ((r10 instanceof java.lang.Byte) == false) goto L_0x002d\l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|java.lang.Class[] r1 = new java.lang.Class[]\{java.lang.Byte.class, java.lang.Short.class, java.lang.Integer.class, java.lang.Long.class\}\lvalidateValue(r9, r10, r1)\lr8.put(r0, (java.lang.Byte) r10)\l}"];
Node_5 [shape=record,label="{5\:\ 0x002d}"];
Node_6 [shape=record,label="{6\:\ 0x002f|if ((r10 instanceof java.lang.Short) == false) goto L_0x0049\l}"];
Node_7 [shape=record,label="{7\:\ 0x0031|java.lang.Class[] r1 = new java.lang.Class[]\{java.lang.Short.class, java.lang.Integer.class, java.lang.Long.class\}\lvalidateValue(r9, r10, r1)\lr8.put(r0, (java.lang.Short) r10)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0049}"];
Node_9 [shape=record,label="{9\:\ 0x004b|if ((r10 instanceof java.lang.Integer) == false) goto L_0x0061\l}"];
Node_10 [shape=record,label="{10\:\ 0x004d|java.lang.Class[] r1 = new java.lang.Class[]\{java.lang.Integer.class, java.lang.Long.class\}\lvalidateValue(r9, r10, r1)\lr8.put(r0, (java.lang.Integer) r10)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0061}"];
Node_12 [shape=record,label="{12\:\ 0x0063|if ((r10 instanceof java.lang.Long) == false) goto L_0x0079\l}"];
Node_13 [shape=record,label="{13\:\ 0x0065|java.lang.Class[] r1 = new java.lang.Class[]\{java.lang.Long.class, java.lang.Double.class\}\lvalidateValue(r9, r10, r1)\lr8.put(r0, (java.lang.Long) r10)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0079}"];
Node_15 [shape=record,label="{15\:\ 0x007b|if ((r10 instanceof java.lang.Float) == false) goto L_0x008d\l}"];
Node_16 [shape=record,label="{16\:\ 0x007d|java.lang.Class[] r1 = new java.lang.Class[]\{java.lang.Float.class\}\lvalidateValue(r9, r10, r1)\lr8.put(r0, (java.lang.Float) r10)\l}"];
Node_17 [shape=record,label="{17\:\ 0x008d}"];
Node_18 [shape=record,label="{18\:\ 0x008f|if ((r10 instanceof java.lang.Double) == false) goto L_0x00a1\l}"];
Node_19 [shape=record,label="{19\:\ 0x0091|java.lang.Class[] r1 = new java.lang.Class[]\{java.lang.Double.class\}\lvalidateValue(r9, r10, r1)\lr8.put(r0, (java.lang.Double) r10)\l}"];
Node_20 [shape=record,label="{20\:\ 0x00a1|java.lang.StringBuilder r9 = new java.lang.StringBuilder()\lr9.append(\"Unsupported Number type: \")\lr9.append(r10.getClass().getSimpleName())\l}"];
Node_21 [shape=record,label="{21\:\ 0x00bf|throw new mil.nga.geopackage.GeoPackageException(r9.toString())\l}"];
Node_22 [shape=record,label="{22\:\ 0x00c0}"];
Node_23 [shape=record,label="{23\:\ 0x00c2|if ((r10 instanceof java.lang.String) == false) goto L_0x011b\l}"];
Node_24 [shape=record,label="{24\:\ 0x00c4|java.lang.Class[] r1 = new java.lang.Class[]\{java.lang.String.class\}\lvalidateValue(r9, r10, r1)\ljava.lang.String r10 = (java.lang.String) r10\l}"];
Node_25 [shape=record,label="{25\:\ 0x00d3|if (r9.getMax() == null) goto L_0x0116\l}"];
Node_26 [shape=record,label="{26\:\ 0x00d5}"];
Node_27 [shape=record,label="{27\:\ 0x00e4|if ((((long) r10.length()) \> r9.getMax().longValue() ? 1 : (((long) r10.length()) == r9.getMax().longValue() ? 0 : \-1)) \> 0) goto L_0x00e7\l}"];
Node_28 [shape=record,label="{28\:\ 0x00e7|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"String is larger than the column max. Size: \")\lr1.append(r10.length())\lr1.append(\", Max: \")\lr1.append(r9.getMax())\lr1.append(\", Column: \")\lr1.append(r0)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0115|throw new mil.nga.geopackage.GeoPackageException(r1.toString())\l}"];
Node_30 [shape=record,label="{30\:\ 0x0116|r8.put(r0, r10)\l}"];
Node_31 [shape=record,label="{31\:\ 0x011b}"];
Node_32 [shape=record,label="{32\:\ 0x011d|if ((r10 instanceof byte[]) == false) goto L_0x016f\l}"];
Node_33 [shape=record,label="{33\:\ 0x011f|java.lang.Class[] r1 = new java.lang.Class[]\{byte[].class\}\lvalidateValue(r9, r10, r1)\lbyte[] r10 = (byte[]) r10\l}"];
Node_34 [shape=record,label="{34\:\ 0x012e|if (r9.getMax() == null) goto L_0x016b\l}"];
Node_35 [shape=record,label="{35\:\ 0x0130}"];
Node_36 [shape=record,label="{36\:\ 0x013c|if ((((long) r10.length) \> r9.getMax().longValue() ? 1 : (((long) r10.length) == r9.getMax().longValue() ? 0 : \-1)) \> 0) goto L_0x013f\l}"];
Node_37 [shape=record,label="{37\:\ 0x013f|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Byte array is larger than the column max. Size: \")\lr1.append(r10.length)\lr1.append(\", Max: \")\lr1.append(r9.getMax())\lr1.append(\", Column: \")\lr1.append(r0)\l}"];
Node_38 [shape=record,label="{38\:\ 0x016a|throw new mil.nga.geopackage.GeoPackageException(r1.toString())\l}"];
Node_39 [shape=record,label="{39\:\ 0x016b|r8.put(r0, r10)\l}"];
Node_40 [shape=record,label="{40\:\ 0x016f}"];
Node_41 [shape=record,label="{41\:\ 0x0171|if ((r10 instanceof java.lang.Boolean) == false) goto L_0x018a\l}"];
Node_42 [shape=record,label="{42\:\ 0x0173|java.lang.Class[] r1 = new java.lang.Class[]\{java.lang.Boolean.class\}\lvalidateValue(r9, r10, r1)\lr8.put(r0, java.lang.Short.valueOf(((java.lang.Boolean) r10).booleanValue() ? (short) 1 : 0))\l}"];
Node_43 [shape=record,label="{43\:\ 0x018a}"];
Node_44 [shape=record,label="{44\:\ 0x018c|if ((r10 instanceof java.util.Date) == false) goto L_0x01ad\l}"];
Node_45 [shape=record,label="{45\:\ 0x018e|java.lang.Class[] r1 = new java.lang.Class[]\{java.util.Date.class, java.lang.String.class\}\lvalidateValue(r9, r10, r1)\lmil.nga.geopackage.db.DateConverter r9 = mil.nga.geopackage.p021db.DateConverter.converter(r9.getDataType())\lr8.put(r0, r9.stringValue((java.util.Date) r10))\l}"];
Node_46 [shape=record,label="{46\:\ 0x01ad|java.lang.StringBuilder r9 = new java.lang.StringBuilder()\lr9.append(\"Unsupported update column value. column: \")\lr9.append(r0)\lr9.append(\", value: \")\lr9.append(r10)\l}"];
Node_47 [shape=record,label="{47\:\ 0x01cb|throw new mil.nga.geopackage.GeoPackageException(r9.toString())\l}"];
Node_48 [shape=record,label="{48\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_49 [shape=record,label="{49\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_50 [shape=record,label="{50\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_51 [shape=record,label="{51\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_52 [shape=record,label="{52\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_53 [shape=record,label="{53\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_54 [shape=record,label="{54\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_55 [shape=record,label="{55\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_56 [shape=record,label="{56\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_57 [shape=record,label="{57\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{protected void mil.nga.geopackage.user.UserRow.columnToContentValue((r7v0 'this' mil.nga.geopackage.user.UserRow A[IMMUTABLE_TYPE, THIS]), (r8v0 android.content.ContentValues A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 TColumn A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Landroid\/content\/ContentValues;, TTColumn;, Ljava\/lang\/Object;, )V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_22;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_49;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_50;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_51;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_52;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_53;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_54;
Node_20 -> Node_21;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_31;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_30;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_27 -> Node_30[style=dashed];
Node_28 -> Node_29;
Node_30 -> Node_55;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_40;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_39;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_36 -> Node_39[style=dashed];
Node_37 -> Node_38;
Node_39 -> Node_56;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_43;
Node_42 -> Node_57;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_46;
Node_45 -> Node_48;
Node_46 -> Node_47;
}

