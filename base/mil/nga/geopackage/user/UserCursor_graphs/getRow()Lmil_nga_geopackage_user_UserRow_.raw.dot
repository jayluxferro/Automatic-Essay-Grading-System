digraph "CFG formil.nga.geopackage.user.UserCursor.getRow()Lmil\/nga\/geopackage\/user\/UserRow;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:mil.nga.geopackage.user.UserInvalidCursor\<TColumn, TTable, TRow, ? extends mil.nga.geopackage.user.UserCursor\<TColumn, TTable, TRow\>, ? extends mil.nga.geopackage.user.UserDao\<TColumn, TTable, TRow, ? extends mil.nga.geopackage.user.UserCursor\<TColumn, TTable, TRow\>\>\>) = (r1 I:mil.nga.geopackage.user.UserCursor) mil.nga.geopackage.user.UserCursor.invalidCursor mil.nga.geopackage.user.UserInvalidCursor \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0009 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: INVOKE  (r0 I:mil.nga.geopackage.user.UserRow) = (r1 I:mil.nga.geopackage.user.UserCursor) mil.nga.geopackage.user.UserCursor.getCurrentRow():mil.nga.geopackage.user.UserRow type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: IGET  (r0 I:mil.nga.geopackage.user.UserInvalidCursor\<TColumn, TTable, TRow, ? extends mil.nga.geopackage.user.UserCursor\<TColumn, TTable, TRow\>, ? extends mil.nga.geopackage.user.UserDao\<TColumn, TTable, TRow, ? extends mil.nga.geopackage.user.UserCursor\<TColumn, TTable, TRow\>\>\>) = (r1 I:mil.nga.geopackage.user.UserCursor) mil.nga.geopackage.user.UserCursor.invalidCursor mil.nga.geopackage.user.UserInvalidCursor \l0x000b: INVOKE  (r0 I:mil.nga.geopackage.user.UserRow) = (r0 I:mil.nga.geopackage.user.UserInvalidCursor) mil.nga.geopackage.user.UserInvalidCursor.getRow():mil.nga.geopackage.user.UserRow type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: RETURN  (r0 I:TRow) \l}"];
MethodNode[shape=record,label="{public TRow mil.nga.geopackage.user.UserCursor.getRow((r1 'this' I:mil.nga.geopackage.user.UserCursor A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[()TTRow;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
}

