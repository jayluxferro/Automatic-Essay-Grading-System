digraph "CFG formil.nga.geopackage.user.UserInvalidCursor.readBlobValue(Lmil\/nga\/geopackage\/user\/UserRow;Lmil\/nga\/geopackage\/user\/UserColumn;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.io.ByteArrayOutputStream r0 = new java.io.ByteArrayOutputStream()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|SYNTHETIC\lSplitter:B:1:0x0006\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ all \-\> 0x0092, IOException \-\> 0x00a8 \}\lSplitter:B:1:0x0006\l|byte[] r2 = new byte[]\{0\}\lr4 = 1     \/\/ Catch:\{ all \-\> 0x0092, IOException \-\> 0x00a8 \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|LOOP_START\lCatch:\{ all \-\> 0x0092, IOException \-\> 0x00a8 \}\lPHI: r2 r4 \l  PHI: (r2v2 byte[]) = (r2v1 byte[]), (r2v5 byte[]) binds: [B:2:?, B:13:?] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v1 int) = (r4v0 int), (r4v2 int) binds: [B:2:?, B:13:?] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:3:0x000c\-\>B:13:?\l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|Catch:\{ all \-\> 0x0092, IOException \-\> 0x00a8 \}\l|if (r2.length \<= 0) goto L_0x0097     \/\/ Catch:\{ all \-\> 0x0092, IOException \-\> 0x00a8 \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|Catch:\{ all \-\> 0x0092, IOException \-\> 0x00a8 \}\l|if (r4 \<= 1) goto L_0x0014     \/\/ Catch:\{ all \-\> 0x0092, IOException \-\> 0x00a8 \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|Catch:\{ all \-\> 0x0092, IOException \-\> 0x00a8 \}\l|r0.write(r2)     \/\/ Catch:\{ all \-\> 0x0092, IOException \-\> 0x00a8 \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|Catch:\{ all \-\> 0x0092, IOException \-\> 0x00a8 \}\l|byte[] r2 = new byte[0]     \/\/ Catch:\{ all \-\> 0x0092, IOException \-\> 0x00a8 \}\ljava.lang.StringBuilder r5 = new java.lang.StringBuilder()     \/\/ Catch:\{ all \-\> 0x0092, IOException \-\> 0x00a8 \}\lr5.append(\"select substr(\")     \/\/ Catch:\{ all \-\> 0x0092, IOException \-\> 0x00a8 \}\lr5.append(mil.nga.geopackage.p021db.CoreSQLUtils.quoteWrap(r11.getName()))     \/\/ Catch:\{ all \-\> 0x0092, IOException \-\> 0x00a8 \}\lr5.append(\", \")     \/\/ Catch:\{ all \-\> 0x0092, IOException \-\> 0x00a8 \}\lr5.append(r4)     \/\/ Catch:\{ all \-\> 0x0092, IOException \-\> 0x00a8 \}\lr5.append(\", \")     \/\/ Catch:\{ all \-\> 0x0092, IOException \-\> 0x00a8 \}\lr5.append(1048576)     \/\/ Catch:\{ all \-\> 0x0092, IOException \-\> 0x00a8 \}\lr5.append(\") from \")     \/\/ Catch:\{ all \-\> 0x0092, IOException \-\> 0x00a8 \}\lr5.append(mil.nga.geopackage.p021db.CoreSQLUtils.quoteWrap(r9.dao.getTableName()))     \/\/ Catch:\{ all \-\> 0x0092, IOException \-\> 0x00a8 \}\lr5.append(\" where \")     \/\/ Catch:\{ all \-\> 0x0092, IOException \-\> 0x00a8 \}\lr5.append(mil.nga.geopackage.p021db.CoreSQLUtils.quoteWrap(r10.getPkColumn().getName()))     \/\/ Catch:\{ all \-\> 0x0092, IOException \-\> 0x00a8 \}\lr5.append(\" = \")     \/\/ Catch:\{ all \-\> 0x0092, IOException \-\> 0x00a8 \}\lr5.append(r10.getId())     \/\/ Catch:\{ all \-\> 0x0092, IOException \-\> 0x00a8 \}\ljava.lang.String r5 = r5.toString()     \/\/ Catch:\{ all \-\> 0x0092, IOException \-\> 0x00a8 \}\landroid.database.Cursor r5 = r9.dao.getDatabaseConnection().getDb().rawQuery(r5, (java.lang.String[]) null)     \/\/ Catch:\{ all \-\> 0x0092, IOException \-\> 0x00a8 \}\l}"];
Node_8 [shape=record,label="{8\:\ 0x0082|SYNTHETIC\lSplitter:B:8:0x0082\l}"];
Node_9 [shape=record,label="{9\:\ ?|Catch:\{ all \-\> 0x0092, IOException \-\> 0x00a8 \}\lSplitter:B:8:0x0082\l}"];
Node_10 [shape=record,label="{10\:\ 0x0086|Catch:\{ all \-\> 0x0092, IOException \-\> 0x00a8 \}\l|if (r5.moveToNext() == false) goto L_0x008c     \/\/ Catch:\{ all \-\> 0x0092, IOException \-\> 0x00a8 \}\l}"];
Node_11 [shape=record,label="{11\:\ 0x0088|Catch:\{ all \-\> 0x0092, IOException \-\> 0x00a8 \}\l|byte[] r2 = r5.getBlob(0)     \/\/ Catch:\{ all \-\> 0x0092, IOException \-\> 0x00a8 \}\l}"];
Node_12 [shape=record,label="{12\:\ 0x008c|SYNTHETIC\lPHI: r2 \l  PHI: (r2v5 byte[]) = (r2v4 byte[]), (r2v6 byte[]) binds: [B:10:0x0086, B:11:0x0088] A[DONT_GENERATE, DONT_INLINE]\lSplitter:B:12:0x008c\l}"];
Node_13 [shape=record,label="{13\:\ ?|LOOP_END\lCatch:\{ all \-\> 0x0092, IOException \-\> 0x00a8 \}\lSplitter:B:12:0x008c\lLOOP:0: B:3:0x000c\-\>B:13:?\l|r5.close()     \/\/ Catch:\{ all \-\> 0x0092, IOException \-\> 0x00a8 \}\lint r4 = r4 + 1048576     \/\/ Catch:\{ all \-\> 0x0092, IOException \-\> 0x00a8 \}\l}"];
Node_14 [shape=record,label="{14\:\ 0x0092|Catch:\{ all \-\> 0x0092, IOException \-\> 0x00a8 \}\lExcHandler: all (r10v3 'th' java.lang.Throwable A[CUSTOM_DECLARE, Catch:\{ all \-\> 0x00a6 \}])\lSplitter:B:8:0x0082\l|java.lang.Throwable r10 = move\-exception     \/\/ Catch:\{ all \-\> 0x0092, IOException \-\> 0x00a8 \}\l}"];
Node_15 [shape=record,label="{15\:\ 0x0093|Catch:\{ all \-\> 0x0092, IOException \-\> 0x00a8 \}\l|r5.close()     \/\/ Catch:\{ all \-\> 0x0092, IOException \-\> 0x00a8 \}\l}"];
Node_16 [shape=record,label="{16\:\ 0x0096|Catch:\{ all \-\> 0x0092, IOException \-\> 0x00a8 \}\l|throw r10     \/\/ Catch:\{ all \-\> 0x0092, IOException \-\> 0x00a8 \}\l}"];
Node_17 [shape=record,label="{17\:\ 0x0097|Catch:\{ all \-\> 0x0092, IOException \-\> 0x00a8 \}\l|byte[] r1 = r0.toByteArray()     \/\/ Catch:\{ all \-\> 0x0092, IOException \-\> 0x00a8 \}\lr10.setValue(r11.getIndex(), (java.lang.Object) r1)     \/\/ Catch:\{ all \-\> 0x0092, IOException \-\> 0x00a8 \}\l}"];
Node_18 [shape=record,label="{18\:\ 0x00a2|com.j256.ormlite.misc.IOUtils.closeQuietly(r0)\l}"];
Node_19 [shape=record,label="{19\:\ 0x00a6|ExcHandler: all (r10v2 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:22:0x00ab\l|java.lang.Throwable r10 = move\-exception\l}"];
Node_20 [shape=record,label="{20\:\ 0x00a8|ExcHandler: IOException (r10v1 'e' java.io.IOException A[CUSTOM_DECLARE])\lSplitter:B:1:0x0006\l|java.io.IOException r10 = move\-exception\l}"];
Node_21 [shape=record,label="{21\:\ 0x00a9}"];
Node_22 [shape=record,label="{22\:\ 0x00ab|SYNTHETIC\lSplitter:B:22:0x00ab\l}"];
Node_23 [shape=record,label="{23\:\ ?|Catch:\{ all \-\> 0x00a6 \}\lSplitter:B:22:0x00ab\l|java.lang.String r1 = mil.nga.geopackage.user.UserInvalidCursor.class.getSimpleName()     \/\/ Catch:\{ all \-\> 0x00a6 \}\ljava.lang.StringBuilder r2 = new java.lang.StringBuilder()     \/\/ Catch:\{ all \-\> 0x00a6 \}\lr2.append(\"Failed to read large blob value. Table: \")     \/\/ Catch:\{ all \-\> 0x00a6 \}\lr2.append(r9.dao.getTableName())     \/\/ Catch:\{ all \-\> 0x00a6 \}\lr2.append(\", Column: \")     \/\/ Catch:\{ all \-\> 0x00a6 \}\lr2.append(r11.getName())     \/\/ Catch:\{ all \-\> 0x00a6 \}\lr2.append(\", Position: \")     \/\/ Catch:\{ all \-\> 0x00a6 \}\lr2.append(getPosition())     \/\/ Catch:\{ all \-\> 0x00a6 \}\landroid.util.Log.e(r1, r2.toString(), r10)     \/\/ Catch:\{ all \-\> 0x00a6 \}\l}"];
Node_24 [shape=record,label="{24\:\ 0x00e2|RETURN\l|return\l}"];
Node_25 [shape=record,label="{25\:\ 0x00e3|com.j256.ormlite.misc.IOUtils.closeQuietly(r0)\l}"];
Node_26 [shape=record,label="{26\:\ 0x00e6|throw r10\l}"];
Node_27 [shape=record,label="{27\:\ 0x0097|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void mil.nga.geopackage.user.UserInvalidCursor.readBlobValue((r9v0 'this' mil.nga.geopackage.user.UserInvalidCursor A[IMMUTABLE_TYPE, THIS]), (r10v0 mil.nga.geopackage.user.UserRow A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 mil.nga.geopackage.user.UserColumn A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_20;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_27;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_14;
Node_8 -> Node_20;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_20;
Node_13 -> Node_3;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_18 -> Node_24;
Node_19 -> Node_25;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_22 -> Node_19;
Node_23 -> Node_19;
Node_23 -> Node_18;
Node_25 -> Node_26;
Node_27 -> Node_17;
}

