digraph "CFG formil.nga.geopackage.user.UserInvalidCursor.readBlobValue(Lmil\/nga\/geopackage\/user\/UserRow;Lmil\/nga\/geopackage\/user\/UserColumn;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.io.ByteArrayOutputStream) =  java.io.ByteArrayOutputStream \l0x0002: INVOKE  (r0 I:java.io.ByteArrayOutputStream) java.io.ByteArrayOutputStream.\<init\>():void type: DIRECT \l0x0005: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|SYNTHETIC\lSplitter:B:1:0x0006\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0006\l|0x0006: NEW_ARRAY  (r2 I:byte[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: byte[] A[Catch:\{ IOException \-\> 0x00a8 \}, TRY_ENTER]\l0x0008: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ IOException \-\> 0x00a8 \}]\l0x0009: APUT  \l  (r2 I:byte[] A[IMMUTABLE_TYPE])\l  (r3 I:?[int, short, byte, char])\l  (r3 I:byte A[IMMUTABLE_TYPE])\l A[Catch:\{ IOException \-\> 0x00a8 \}]\l0x000b: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ IOException \-\> 0x00a8 \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: ARRAY_LENGTH  (r5 I:int) = (r2 I:?[]) A[Catch:\{ IOException \-\> 0x00a8 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: IF  (r5 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:17:0x0097 A[Catch:\{ IOException \-\> 0x00a8 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: IF  (r4 I:?[int, byte, short, char]) \<= (r1 I:?[int, byte, short, char])  \-\> B:7:0x0014 A[Catch:\{ IOException \-\> 0x00a8 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|0x0011: INVOKE  (r0 I:java.io.ByteArrayOutputStream), (r2 I:byte[]) java.io.ByteArrayOutputStream.write(byte[]):void type: VIRTUAL A[Catch:\{ IOException \-\> 0x00a8 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|0x0014: NEW_ARRAY  (r2 I:byte[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: byte[] A[Catch:\{ IOException \-\> 0x00a8 \}]\l0x0016: NEW_INSTANCE  (r5 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ IOException \-\> 0x00a8 \}]\l0x0018: INVOKE  (r5 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ IOException \-\> 0x00a8 \}]\l0x001b: CONST_STR  (r6 I:java.lang.String) =  \"select substr(\" A[Catch:\{ IOException \-\> 0x00a8 \}]\l0x001d: INVOKE  (r5 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ IOException \-\> 0x00a8 \}]\l0x0020: INVOKE  (r6 I:java.lang.String) = (r11 I:mil.nga.geopackage.user.UserColumn) mil.nga.geopackage.user.UserColumn.getName():java.lang.String type: VIRTUAL A[Catch:\{ IOException \-\> 0x00a8 \}]\l0x0024: INVOKE  (r6 I:java.lang.String) = (r6 I:java.lang.String) mil.nga.geopackage.db.CoreSQLUtils.quoteWrap(java.lang.String):java.lang.String type: STATIC A[Catch:\{ IOException \-\> 0x00a8 \}]\l0x0028: INVOKE  (r5 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ IOException \-\> 0x00a8 \}]\l0x002b: CONST_STR  (r6 I:java.lang.String) =  \", \" A[Catch:\{ IOException \-\> 0x00a8 \}]\l0x002d: INVOKE  (r5 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ IOException \-\> 0x00a8 \}]\l0x0030: INVOKE  (r5 I:java.lang.StringBuilder), (r4 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ IOException \-\> 0x00a8 \}]\l0x0033: CONST_STR  (r6 I:java.lang.String) =  \", \" A[Catch:\{ IOException \-\> 0x00a8 \}]\l0x0035: INVOKE  (r5 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ IOException \-\> 0x00a8 \}]\l0x0038: CONST  (r6 I:?[int, float, short, byte, char]) = \l  (1048576(0x100000, float:1.469368E\-39) ?[int, float, short, byte, char])\l A[Catch:\{ IOException \-\> 0x00a8 \}]\l0x003a: INVOKE  (r5 I:java.lang.StringBuilder), (r6 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ IOException \-\> 0x00a8 \}]\l0x003d: CONST_STR  (r7 I:java.lang.String) =  \") from \" A[Catch:\{ IOException \-\> 0x00a8 \}]\l0x003f: INVOKE  (r5 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ IOException \-\> 0x00a8 \}]\l0x0042: IGET  (r7 I:TUserDao) = (r9 I:mil.nga.geopackage.user.UserInvalidCursor) mil.nga.geopackage.user.UserInvalidCursor.dao mil.nga.geopackage.user.UserDao A[Catch:\{ IOException \-\> 0x00a8 \}]\l0x0044: INVOKE  (r7 I:java.lang.String) = (r7 I:mil.nga.geopackage.user.UserDao) mil.nga.geopackage.user.UserDao.getTableName():java.lang.String type: VIRTUAL A[Catch:\{ IOException \-\> 0x00a8 \}]\l0x0048: INVOKE  (r7 I:java.lang.String) = (r7 I:java.lang.String) mil.nga.geopackage.db.CoreSQLUtils.quoteWrap(java.lang.String):java.lang.String type: STATIC A[Catch:\{ IOException \-\> 0x00a8 \}]\l0x004c: INVOKE  (r5 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ IOException \-\> 0x00a8 \}]\l0x004f: CONST_STR  (r7 I:java.lang.String) =  \" where \" A[Catch:\{ IOException \-\> 0x00a8 \}]\l0x0051: INVOKE  (r5 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ IOException \-\> 0x00a8 \}]\l0x0054: INVOKE  (r7 I:mil.nga.geopackage.user.UserColumn) = (r10 I:mil.nga.geopackage.user.UserRow) mil.nga.geopackage.user.UserRow.getPkColumn():mil.nga.geopackage.user.UserColumn type: VIRTUAL A[Catch:\{ IOException \-\> 0x00a8 \}]\l0x0058: INVOKE  (r7 I:java.lang.String) = (r7 I:mil.nga.geopackage.user.UserColumn) mil.nga.geopackage.user.UserColumn.getName():java.lang.String type: VIRTUAL A[Catch:\{ IOException \-\> 0x00a8 \}]\l0x005c: INVOKE  (r7 I:java.lang.String) = (r7 I:java.lang.String) mil.nga.geopackage.db.CoreSQLUtils.quoteWrap(java.lang.String):java.lang.String type: STATIC A[Catch:\{ IOException \-\> 0x00a8 \}]\l0x0060: INVOKE  (r5 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ IOException \-\> 0x00a8 \}]\l0x0063: CONST_STR  (r7 I:java.lang.String) =  \" = \" A[Catch:\{ IOException \-\> 0x00a8 \}]\l0x0065: INVOKE  (r5 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ IOException \-\> 0x00a8 \}]\l0x0068: INVOKE  (r7 I:long) = (r10 I:mil.nga.geopackage.user.UserRow) mil.nga.geopackage.user.UserRow.getId():long type: VIRTUAL A[Catch:\{ IOException \-\> 0x00a8 \}]\l0x006c: INVOKE  (r5 I:java.lang.StringBuilder), (r7 I:long) java.lang.StringBuilder.append(long):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ IOException \-\> 0x00a8 \}]\l0x006f: INVOKE  (r5 I:java.lang.String) = (r5 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ IOException \-\> 0x00a8 \}]\l0x0073: IGET  (r7 I:TUserDao) = (r9 I:mil.nga.geopackage.user.UserInvalidCursor) mil.nga.geopackage.user.UserInvalidCursor.dao mil.nga.geopackage.user.UserDao A[Catch:\{ IOException \-\> 0x00a8 \}]\l0x0075: INVOKE  (r7 I:mil.nga.geopackage.db.GeoPackageDatabase) = (r7 I:mil.nga.geopackage.user.UserDao) mil.nga.geopackage.user.UserDao.getDatabaseConnection():mil.nga.geopackage.db.GeoPackageDatabase type: VIRTUAL A[Catch:\{ IOException \-\> 0x00a8 \}]\l0x0079: INVOKE  (r7 I:android.database.sqlite.SQLiteDatabase) = (r7 I:mil.nga.geopackage.db.GeoPackageDatabase) mil.nga.geopackage.db.GeoPackageDatabase.getDb():android.database.sqlite.SQLiteDatabase type: VIRTUAL A[Catch:\{ IOException \-\> 0x00a8 \}]\l0x007d: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ IOException \-\> 0x00a8 \}]\l0x007e: INVOKE  (r5 I:android.database.Cursor) = \l  (r7 I:android.database.sqlite.SQLiteDatabase)\l  (r5 I:java.lang.String)\l  (r8 I:java.lang.String[])\l android.database.sqlite.SQLiteDatabase.rawQuery(java.lang.String, java.lang.String[]):android.database.Cursor type: VIRTUAL A[Catch:\{ IOException \-\> 0x00a8 \}]\l0x0081: NOP   A[TRY_LEAVE]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0082|SYNTHETIC\lSplitter:B:8:0x0082\l}"];
Node_9 [shape=record,label="{9\:\ ?|Splitter:B:8:0x0082\l|0x0082: INVOKE  (r7 I:boolean) = (r5 I:android.database.Cursor) android.database.Cursor.moveToNext():boolean type: INTERFACE A[Catch:\{ all \-\> 0x0092 \}, TRY_ENTER]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0086|0x0086: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x008c A[Catch:\{ all \-\> 0x0092 \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0088|0x0088: INVOKE  (r2 I:byte[]) = (r5 I:android.database.Cursor), (r3 I:int) android.database.Cursor.getBlob(int):byte[] type: INTERFACE A[Catch:\{ all \-\> 0x0092 \}]\l0x008b: NOP   A[TRY_LEAVE]\l}"];
Node_12 [shape=record,label="{12\:\ 0x008c|SYNTHETIC\lSplitter:B:12:0x008c\l}"];
Node_13 [shape=record,label="{13\:\ ?|Splitter:B:12:0x008c\l|0x008c: INVOKE  (r5 I:android.database.Cursor) android.database.Cursor.close():void type: INTERFACE A[Catch:\{ IOException \-\> 0x00a8 \}, TRY_ENTER]\l0x008f: ARITH  (r4 I:int) = (r4 I:int) + (r6 I:int) A[Catch:\{ IOException \-\> 0x00a8 \}]\l0x0090: GOTO  \-\> 0x000c A[Catch:\{ IOException \-\> 0x00a8 \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0092|ExcHandler: all null\lSplitter:B:8:0x0082\l|0x0092: MOVE_EXCEPTION  (r10 I:?[OBJECT]) =  A[Catch:\{ IOException \-\> 0x00a8 \}]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0093|0x0093: INVOKE  (r5 I:android.database.Cursor) android.database.Cursor.close():void type: INTERFACE A[Catch:\{ IOException \-\> 0x00a8 \}]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0096|0x0096: THROW  (r10 I:java.lang.Throwable) A[Catch:\{ IOException \-\> 0x00a8 \}]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0097|0x0097: INVOKE  (r1 I:byte[]) = (r0 I:java.io.ByteArrayOutputStream) java.io.ByteArrayOutputStream.toByteArray():byte[] type: VIRTUAL A[Catch:\{ IOException \-\> 0x00a8 \}]\l0x009b: INVOKE  (r2 I:int) = (r11 I:mil.nga.geopackage.user.UserColumn) mil.nga.geopackage.user.UserColumn.getIndex():int type: VIRTUAL A[Catch:\{ IOException \-\> 0x00a8 \}]\l0x009f: INVOKE  \l  (r10 I:mil.nga.geopackage.user.UserRow)\l  (r2 I:int)\l  (r1 I:java.lang.Object)\l mil.nga.geopackage.user.UserRow.setValue(int, java.lang.Object):void type: VIRTUAL A[Catch:\{ IOException \-\> 0x00a8 \}, TRY_LEAVE]\l}"];
Node_18 [shape=record,label="{18\:\ 0x00a2|0x00a2: INVOKE  (r0 I:java.io.Closeable) com.j256.ormlite.misc.IOUtils.closeQuietly(java.io.Closeable):void type: STATIC \l}"];
Node_19 [shape=record,label="{19\:\ 0x00a6|ExcHandler: all null\lSplitter:B:23:0x00ab\l|0x00a6: MOVE_EXCEPTION  (r10 I:?[OBJECT]) =  \l}"];
Node_21 [shape=record,label="{21\:\ 0x00a8|ExcHandler: IOException null\lSplitter:B:1:0x0006\l|0x00a8: MOVE_EXCEPTION  (r10 I:?[OBJECT]) =  \l}"];
Node_22 [shape=record,label="{22\:\ 0x00a9|0x00a9: CONST_CLASS  (r1 I:java.lang.Class\<mil.nga.geopackage.user.UserInvalidCursor\>) =  mil.nga.geopackage.user.UserInvalidCursor.class \l}"];
Node_23 [shape=record,label="{23\:\ 0x00ab|SYNTHETIC\lSplitter:B:23:0x00ab\l}"];
Node_24 [shape=record,label="{24\:\ ?|Splitter:B:23:0x00ab\l|0x00ab: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.Class) java.lang.Class.getSimpleName():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x00a6 \}, TRY_ENTER]\l0x00af: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ all \-\> 0x00a6 \}]\l0x00b1: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x00a6 \}]\l0x00b4: CONST_STR  (r3 I:java.lang.String) =  \"Failed to read large blob value. Table: \" A[Catch:\{ all \-\> 0x00a6 \}]\l0x00b6: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x00a6 \}]\l0x00b9: IGET  (r3 I:TUserDao) = (r9 I:mil.nga.geopackage.user.UserInvalidCursor) mil.nga.geopackage.user.UserInvalidCursor.dao mil.nga.geopackage.user.UserDao A[Catch:\{ all \-\> 0x00a6 \}]\l0x00bb: INVOKE  (r3 I:java.lang.String) = (r3 I:mil.nga.geopackage.user.UserDao) mil.nga.geopackage.user.UserDao.getTableName():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x00a6 \}]\l0x00bf: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x00a6 \}]\l0x00c2: CONST_STR  (r3 I:java.lang.String) =  \", Column: \" A[Catch:\{ all \-\> 0x00a6 \}]\l0x00c4: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x00a6 \}]\l0x00c7: INVOKE  (r11 I:java.lang.String) = (r11 I:mil.nga.geopackage.user.UserColumn) mil.nga.geopackage.user.UserColumn.getName():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x00a6 \}]\l0x00cb: INVOKE  (r2 I:java.lang.StringBuilder), (r11 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x00a6 \}]\l0x00ce: CONST_STR  (r11 I:java.lang.String) =  \", Position: \" A[Catch:\{ all \-\> 0x00a6 \}]\l0x00d0: INVOKE  (r2 I:java.lang.StringBuilder), (r11 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x00a6 \}]\l0x00d3: INVOKE  (r11 I:int) = (r9 I:mil.nga.geopackage.user.UserInvalidCursor) mil.nga.geopackage.user.UserInvalidCursor.getPosition():int type: VIRTUAL A[Catch:\{ all \-\> 0x00a6 \}]\l0x00d7: INVOKE  (r2 I:java.lang.StringBuilder), (r11 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x00a6 \}]\l0x00da: INVOKE  (r11 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x00a6 \}]\l0x00de: INVOKE  \l  (r1 I:java.lang.String)\l  (r11 I:java.lang.String)\l  (r10 I:java.lang.Throwable)\l android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC A[Catch:\{ all \-\> 0x00a6 \}, TRY_LEAVE]\l}"];
Node_26 [shape=record,label="{26\:\ 0x00e2|0x00e2: RETURN   \l}"];
Node_27 [shape=record,label="{27\:\ 0x00e3|0x00e3: INVOKE  (r0 I:java.io.Closeable) com.j256.ormlite.misc.IOUtils.closeQuietly(java.io.Closeable):void type: STATIC \l}"];
Node_28 [shape=record,label="{28\:\ 0x00e6|0x00e6: THROW  (r10 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private void mil.nga.geopackage.user.UserInvalidCursor.readBlobValue((r9 'this' I:mil.nga.geopackage.user.UserInvalidCursor A[IMMUTABLE_TYPE, THIS]), (r10 I:mil.nga.geopackage.user.UserRow A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:mil.nga.geopackage.user.UserColumn A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_21;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_17;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_14;
Node_8 -> Node_21;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_21;
Node_13 -> Node_3;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_18 -> Node_26;
Node_19 -> Node_27;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_23 -> Node_19;
Node_24 -> Node_19;
Node_24 -> Node_18;
Node_27 -> Node_28;
}

