digraph "CFG formil.nga.geopackage.user.UserCoreTableReader.readTable(Lmil\/nga\/geopackage\/user\/UserCoreConnection;)Lmil\/nga\/geopackage\/user\/UserTable;" {
subgraph cluster_Region_1914495435 {
label = "R(4:0|(1:(6:4|5|9|(2:17|(2:(2:20|(1:23))|30))|29|30))|31|(2:(1:34)|(2:35|36))) | DECL_VAR: java.lang.Long null, java.lang.String null, int null, java.lang.Long null\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.ArrayList java.util.ArrayList r0 = new java.util.ArrayList()\lmil.nga.geopackage.user.UserCoreResult TResult r14 = r14.rawQuery(\"PRAGMA table_info(\" + mil.nga.geopackage.p021db.CoreSQLUtils.quoteWrap(r13.tableName) + \")\", (java.lang.String[]) null)\l}"];
subgraph cluster_LoopRegion_1380683246 {
label = "LOOP:0: (1:(6:4|5|9|(2:17|(2:(2:20|(1:23))|30))|29|30))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x002a|Catch:\{ all \-\> 0x00f4 \}\l|if (r14.moveToNext() != false) goto L_0x002c     \/\/ Catch:\{ all \-\> 0x00f4 \}\l}"];
subgraph cluster_Region_509540973 {
label = "R(1:(6:4|5|9|(2:17|(2:(2:20|(1:23))|30))|29|30))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_161802107 {
label = "Try: R(6:4|5|9|(2:17|(2:(2:20|(1:23))|30))|29|30) catches: R(3:37|38|39)";
node [shape=record,color=blue];
subgraph cluster_Region_404486229 {
label = "R(6:4|5|9|(2:17|(2:(2:20|(1:23))|30))|29|30)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x002c|Catch:\{ all \-\> 0x00f4 \}\l|int int r5 = r14.getInt(r14.getColumnIndex(CID))     \/\/ Catch:\{ all \-\> 0x00f4 \}\ljava.lang.String java.lang.String r6 = r14.getString(r14.getColumnIndex(\"name\"))     \/\/ Catch:\{ all \-\> 0x00f4 \}\ljava.lang.String java.lang.String r1 = r14.getString(r14.getColumnIndex(\"type\"))     \/\/ Catch:\{ all \-\> 0x00f4 \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x0056|Catch:\{ all \-\> 0x00f4 \}\l|boolean r9 = r14.getInt(r14.getColumnIndex(NOT_NULL)) == 1\l}"];
Node_9 [shape=record,label="{9\:\ 0x0065|Catch:\{ all \-\> 0x00f4 \}\l|boolean r11 = r14.getInt(r14.getColumnIndex(f250PK)) == 1\l}"];
subgraph cluster_IfRegion_1087328579 {
label = "IF [B:12:0x006a, B:14:0x0072, B:16:0x007b] THEN: R(2:17|(2:(2:20|(1:23))|30)) ELSE: null";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x006a|ADDED_TO_REGION\lCatch:\{ all \-\> 0x00f4 \}\lPHI: r11 \l  PHI: (r11v0 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 != null) goto L_0x006c     \/\/ Catch:\{ all \-\> 0x00f4 \}\l}"];
Node_14 [shape=record,label="{14\:\ 0x0072|ADDED_TO_REGION\lCatch:\{ all \-\> 0x00f4 \}\l|if (r1.endsWith(\")\") == true) goto L_0x0074     \/\/ Catch:\{ all \-\> 0x00f4 \}\l}"];
Node_16 [shape=record,label="{16\:\ 0x007b|ADDED_TO_REGION\lCatch:\{ all \-\> 0x00f4 \}\l|if ((r3 = r1.indexOf(\"(\")) \> \-1) goto L_0x007d     \/\/ Catch:\{ all \-\> 0x00f4 \}\l}"];
subgraph cluster_Region_439905535 {
label = "R(2:17|(2:(2:20|(1:23))|30))";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x007d|Catch:\{ all \-\> 0x00f4 \}\l|java.lang.String java.lang.String r7 = r1.substring(r3 + 1, r1.length() \- 1)     \/\/ Catch:\{ all \-\> 0x00f4 \}\l}"];
subgraph cluster_IfRegion_688884373 {
label = "IF [B:18:0x008c] THEN: R(2:(2:20|(1:23))|30) ELSE: null";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x008c|if (r7.isEmpty() == false) goto L_0x008e\l}"];
subgraph cluster_Region_228344468 {
label = "R(2:(2:20|(1:23))|30)";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_1904199654 {
label = "Try: R(2:20|(1:23)) catches: R(4:25|26|28|30)";
node [shape=record,color=blue];
subgraph cluster_Region_334533566 {
label = "R(2:20|(1:23))";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ ?|Catch:\{ NumberFormatException \-\> 0x009b \}\lSplitter:B:19:0x008e\l|java.lang.Long r7 = java.lang.Long.valueOf(r7)     \/\/ Catch:\{ NumberFormatException \-\> 0x009b \}\l}"];
subgraph cluster_TryCatchRegion_1043715811 {
label = "Try: R(1:23) catches: R(3:24|28|30)";
node [shape=record,color=blue];
subgraph cluster_Region_336766635 {
label = "R(1:23)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0096|r8 = r7\lr7 = r1.substring(0, r3)     \/\/ Catch:\{ NumberFormatException \-\> 0x0099 \}\l}"];
}
subgraph cluster_Region_558123183 {
label = "R(3:24|28|30) | ExcHandler: NumberFormatException (e java.lang.NumberFormatException)\l";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0099|ExcHandler: NumberFormatException (e java.lang.NumberFormatException)\lSplitter:B:21:0x0092\l|java.lang.NumberFormatException r3 = e\l}"];
Node_28 [shape=record,label="{28\:\ ?|Catch:\{ all \-\> 0x00f4 \}\l|logger.log(java.util.logging.Level.WARNING, \"Failed to parse type max from type: \" + r1, r3)     \/\/ Catch:\{ all \-\> 0x00f4 \}\lr8 = r7     \/\/ Catch:\{ all \-\> 0x00f4 \}\lr7 = r1     \/\/ Catch:\{ all \-\> 0x00f4 \}\l}"];
Node_30 [shape=record,label="{30\:\ 0x00ba|LOOP_END\lCatch:\{ all \-\> 0x00f4 \}\lPHI: r7 r8 \l  PHI: (r7v1 java.lang.String) = (r7v2 java.lang.String), (r7v5 java.lang.String), (r7v8 java.lang.String) binds: [B:41:0x00ba, B:43:0x00ba, B:42:0x00ba] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v0 java.lang.Long) = (r8v1 java.lang.Long), (r8v6 java.lang.Long), (r8v7 java.lang.Long) binds: [B:41:0x00ba, B:43:0x00ba, B:42:0x00ba] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0026\-\>B:30:0x00ba\l|r0.add(createColumn(r14, r5, r6, r7, r8, r9, r14.getColumnIndex(DFLT_VALUE), r11))     \/\/ Catch:\{ all \-\> 0x00f4 \}\l}"];
}
}
}
subgraph cluster_Region_880951869 {
label = "R(4:25|26|28|30) | ExcHandler: NumberFormatException (e java.lang.NumberFormatException)\l";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x009b|ExcHandler: NumberFormatException (e java.lang.NumberFormatException)\lSplitter:B:19:0x008e\l|java.lang.NumberFormatException r3 = e\l}"];
Node_26 [shape=record,label="{26\:\ 0x009c|r7 = null\l}"];
Node_28 [shape=record,label="{28\:\ ?|Catch:\{ all \-\> 0x00f4 \}\l|logger.log(java.util.logging.Level.WARNING, \"Failed to parse type max from type: \" + r1, r3)     \/\/ Catch:\{ all \-\> 0x00f4 \}\lr8 = r7     \/\/ Catch:\{ all \-\> 0x00f4 \}\lr7 = r1     \/\/ Catch:\{ all \-\> 0x00f4 \}\l}"];
Node_30 [shape=record,label="{30\:\ 0x00ba|LOOP_END\lCatch:\{ all \-\> 0x00f4 \}\lPHI: r7 r8 \l  PHI: (r7v1 java.lang.String) = (r7v2 java.lang.String), (r7v5 java.lang.String), (r7v8 java.lang.String) binds: [B:41:0x00ba, B:43:0x00ba, B:42:0x00ba] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v0 java.lang.Long) = (r8v1 java.lang.Long), (r8v6 java.lang.Long), (r8v7 java.lang.Long) binds: [B:41:0x00ba, B:43:0x00ba, B:42:0x00ba] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0026\-\>B:30:0x00ba\l|r0.add(createColumn(r14, r5, r6, r7, r8, r9, r14.getColumnIndex(DFLT_VALUE), r11))     \/\/ Catch:\{ all \-\> 0x00f4 \}\l}"];
}
}
Node_30 [shape=record,label="{30\:\ 0x00ba|LOOP_END\lCatch:\{ all \-\> 0x00f4 \}\lPHI: r7 r8 \l  PHI: (r7v1 java.lang.String) = (r7v2 java.lang.String), (r7v5 java.lang.String), (r7v8 java.lang.String) binds: [B:41:0x00ba, B:43:0x00ba, B:42:0x00ba] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v0 java.lang.Long) = (r8v1 java.lang.Long), (r8v6 java.lang.Long), (r8v7 java.lang.Long) binds: [B:41:0x00ba, B:43:0x00ba, B:42:0x00ba] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0026\-\>B:30:0x00ba\l|r0.add(createColumn(r14, r5, r6, r7, r8, r9, r14.getColumnIndex(DFLT_VALUE), r11))     \/\/ Catch:\{ all \-\> 0x00f4 \}\l}"];
}
}
}
}
Node_29 [shape=record,label="{29\:\ 0x00b8|Catch:\{ all \-\> 0x00f4 \}\l|r7 = r1     \/\/ Catch:\{ all \-\> 0x00f4 \}\lr8 = null     \/\/ Catch:\{ all \-\> 0x00f4 \}\l}"];
Node_30 [shape=record,label="{30\:\ 0x00ba|LOOP_END\lCatch:\{ all \-\> 0x00f4 \}\lPHI: r7 r8 \l  PHI: (r7v1 java.lang.String) = (r7v2 java.lang.String), (r7v5 java.lang.String), (r7v8 java.lang.String) binds: [B:41:0x00ba, B:43:0x00ba, B:42:0x00ba] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v0 java.lang.Long) = (r8v1 java.lang.Long), (r8v6 java.lang.Long), (r8v7 java.lang.Long) binds: [B:41:0x00ba, B:43:0x00ba, B:42:0x00ba] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0026\-\>B:30:0x00ba\l|r0.add(createColumn(r14, r5, r6, r7, r8, r9, r14.getColumnIndex(DFLT_VALUE), r11))     \/\/ Catch:\{ all \-\> 0x00f4 \}\l}"];
}
subgraph cluster_Region_357895842 {
label = "R(3:37|38|39) | ExcHandler: all (r0v1 'th' java.lang.Throwable A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_37 [shape=record,label="{37\:\ 0x00f4|ExcHandler: all (r0v1 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:1:0x0026\l}"];
Node_38 [shape=record,label="{38\:\ 0x00f5|r14.close()\l}"];
Node_39 [shape=record,label="{39\:\ 0x00f8|throw r0\l}"];
}
}
}
}
Node_31 [shape=record,label="{31\:\ 0x00cb|r14.close()\l}"];
subgraph cluster_Region_1473367770 {
label = "R(2:(1:34)|(2:35|36))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_463063753 {
label = "IF [B:32:0x00d2] THEN: R(1:34) ELSE: null";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x00d2|if (r0.isEmpty() == false) goto L_0x00d4\l}"];
subgraph cluster_Region_1034739757 {
label = "R(1:34)";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x00da|RETURN\l|return createTable(r13.tableName, r0)\l}"];
}
}
subgraph cluster_Region_2036360292 {
label = "R(2:35|36)";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x00db}"];
Node_36 [shape=record,label="{36\:\ 0x00f3|throw new mil.nga.geopackage.GeoPackageException(\"Table does not exist: \" + r13.tableName)\l}"];
}
}
}
subgraph cluster_Region_357895842 {
label = "R(3:37|38|39) | ExcHandler: all (r0v1 'th' java.lang.Throwable A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_37 [shape=record,label="{37\:\ 0x00f4|ExcHandler: all (r0v1 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:1:0x0026\l}"];
Node_38 [shape=record,label="{38\:\ 0x00f5|r14.close()\l}"];
Node_39 [shape=record,label="{39\:\ 0x00f8|throw r0\l}"];
}
subgraph cluster_Region_880951869 {
label = "R(4:25|26|28|30) | ExcHandler: NumberFormatException (e java.lang.NumberFormatException)\l";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x009b|ExcHandler: NumberFormatException (e java.lang.NumberFormatException)\lSplitter:B:19:0x008e\l|java.lang.NumberFormatException r3 = e\l}"];
Node_26 [shape=record,label="{26\:\ 0x009c|r7 = null\l}"];
Node_28 [shape=record,label="{28\:\ ?|Catch:\{ all \-\> 0x00f4 \}\l|logger.log(java.util.logging.Level.WARNING, \"Failed to parse type max from type: \" + r1, r3)     \/\/ Catch:\{ all \-\> 0x00f4 \}\lr8 = r7     \/\/ Catch:\{ all \-\> 0x00f4 \}\lr7 = r1     \/\/ Catch:\{ all \-\> 0x00f4 \}\l}"];
Node_30 [shape=record,label="{30\:\ 0x00ba|LOOP_END\lCatch:\{ all \-\> 0x00f4 \}\lPHI: r7 r8 \l  PHI: (r7v1 java.lang.String) = (r7v2 java.lang.String), (r7v5 java.lang.String), (r7v8 java.lang.String) binds: [B:41:0x00ba, B:43:0x00ba, B:42:0x00ba] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v0 java.lang.Long) = (r8v1 java.lang.Long), (r8v6 java.lang.Long), (r8v7 java.lang.Long) binds: [B:41:0x00ba, B:43:0x00ba, B:42:0x00ba] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0026\-\>B:30:0x00ba\l|r0.add(createColumn(r14, r5, r6, r7, r8, r9, r14.getColumnIndex(DFLT_VALUE), r11))     \/\/ Catch:\{ all \-\> 0x00f4 \}\l}"];
}
subgraph cluster_Region_558123183 {
label = "R(3:24|28|30) | ExcHandler: NumberFormatException (e java.lang.NumberFormatException)\l";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0099|ExcHandler: NumberFormatException (e java.lang.NumberFormatException)\lSplitter:B:21:0x0092\l|java.lang.NumberFormatException r3 = e\l}"];
Node_28 [shape=record,label="{28\:\ ?|Catch:\{ all \-\> 0x00f4 \}\l|logger.log(java.util.logging.Level.WARNING, \"Failed to parse type max from type: \" + r1, r3)     \/\/ Catch:\{ all \-\> 0x00f4 \}\lr8 = r7     \/\/ Catch:\{ all \-\> 0x00f4 \}\lr7 = r1     \/\/ Catch:\{ all \-\> 0x00f4 \}\l}"];
Node_30 [shape=record,label="{30\:\ 0x00ba|LOOP_END\lCatch:\{ all \-\> 0x00f4 \}\lPHI: r7 r8 \l  PHI: (r7v1 java.lang.String) = (r7v2 java.lang.String), (r7v5 java.lang.String), (r7v8 java.lang.String) binds: [B:41:0x00ba, B:43:0x00ba, B:42:0x00ba] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v0 java.lang.Long) = (r8v1 java.lang.Long), (r8v6 java.lang.Long), (r8v7 java.lang.Long) binds: [B:41:0x00ba, B:43:0x00ba, B:42:0x00ba] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0026\-\>B:30:0x00ba\l|r0.add(createColumn(r14, r5, r6, r7, r8, r9, r14.getColumnIndex(DFLT_VALUE), r11))     \/\/ Catch:\{ all \-\> 0x00f4 \}\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0026|LOOP_START\lSYNTHETIC\lSplitter:B:1:0x0026\lLOOP:0: B:1:0x0026\-\>B:30:0x00ba\l}"];
Node_2 [shape=record,color=red,label="{2\:\ ?|Catch:\{ all \-\> 0x00f4 \}\lSplitter:B:1:0x0026\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0058|Catch:\{ all \-\> 0x00f4 \}\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x005a|Catch:\{ all \-\> 0x00f4 \}\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x005b|Catch:\{ all \-\> 0x00f4 \}\lPHI: r9 \l  PHI: (r9v0 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0067|Catch:\{ all \-\> 0x00f4 \}\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0069|Catch:\{ all \-\> 0x00f4 \}\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x006c|Catch:\{ all \-\> 0x00f4 \}\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0074|Catch:\{ all \-\> 0x00f4 \}\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x008e|SYNTHETIC\lSplitter:B:19:0x008e\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0092|SYNTHETIC\lSplitter:B:21:0x0092\l}"];
Node_22 [shape=record,color=red,label="{22\:\ ?|Catch:\{ NumberFormatException \-\> 0x0099 \}\lSplitter:B:21:0x0092\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x009d|SYNTHETIC\lPHI: r3 r7 \l  PHI: (r3v11 'e' java.lang.NumberFormatException) = (r3v12 'e' java.lang.NumberFormatException), (r3v13 'e' java.lang.NumberFormatException) binds: [B:26:0x009c, B:24:0x0099] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r7v4 java.lang.Long) = (r7v6 java.lang.Long), (r7v7 java.lang.Long) binds: [B:26:0x009c, B:24:0x0099] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x00d4}"];
Node_40 [shape=record,color=red,label="{40\:\ 0x00cb|SYNTHETIC\l}"];
Node_41 [shape=record,color=red,label="{41\:\ 0x00ba|SYNTHETIC\l}"];
Node_42 [shape=record,color=red,label="{42\:\ 0x00ba|SYNTHETIC\l}"];
Node_43 [shape=record,color=red,label="{43\:\ 0x00ba|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public TTable mil.nga.geopackage.user.UserCoreTableReader.readTable((r13v0 'this' mil.nga.geopackage.user.UserCoreTableReader A[IMMUTABLE_TYPE, THIS]), (r14v0 mil.nga.geopackage.user.UserCoreConnection\<TColumn, TTable, TRow, TResult\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | JADX INFO: finally extract failed\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lmil\/nga\/geopackage\/user\/UserCoreConnection\<, TTColumn;TTTable;TTRow;TTResult;\>;)TTTable;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_3 -> Node_4;
Node_3 -> Node_40[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_7;
Node_9 -> Node_10;
Node_9 -> Node_11;
Node_12 -> Node_13;
Node_12 -> Node_29[style=dashed];
Node_14 -> Node_15;
Node_14 -> Node_29[style=dashed];
Node_16 -> Node_17;
Node_16 -> Node_29[style=dashed];
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_18 -> Node_29[style=dashed];
Node_20 -> Node_21;
Node_23 -> Node_42;
Node_24 -> Node_27;
Node_28 -> Node_43;
Node_30 -> Node_1;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_28 -> Node_43;
Node_30 -> Node_1;
Node_30 -> Node_1;
Node_29 -> Node_41;
Node_30 -> Node_1;
Node_37 -> Node_38;
Node_38 -> Node_39;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_32 -> Node_35[style=dashed];
Node_35 -> Node_36;
Node_37 -> Node_38;
Node_38 -> Node_39;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_28 -> Node_43;
Node_30 -> Node_1;
Node_24 -> Node_27;
Node_28 -> Node_43;
Node_30 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_37;
Node_2 -> Node_3;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_19 -> Node_20;
Node_19 -> Node_25;
Node_21 -> Node_22;
Node_21 -> Node_24;
Node_22 -> Node_23;
Node_27 -> Node_28;
Node_27 -> Node_37;
Node_33 -> Node_34;
Node_40 -> Node_31;
Node_41 -> Node_30;
Node_42 -> Node_30;
Node_43 -> Node_30;
}

