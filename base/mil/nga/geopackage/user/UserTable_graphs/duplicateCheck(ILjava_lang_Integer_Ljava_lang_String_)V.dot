digraph "CFG formil.nga.geopackage.user.UserTable.duplicateCheck(ILjava\/lang\/Integer;Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r5 != null) goto L_0x0003\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|RETURN\l|return\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"More than one \")\lr1.append(r6)\lr1.append(\" column was found for table '\")\lr1.append(r3.tableName)\lr1.append(\"'. Index \")\lr1.append(r5)\lr1.append(\" and \")\lr1.append(r4)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0033|throw new mil.nga.geopackage.GeoPackageException(r1.toString())\l}"];
MethodNode[shape=record,label="{protected void mil.nga.geopackage.user.UserTable.duplicateCheck((r3v0 'this' mil.nga.geopackage.user.UserTable A[IMMUTABLE_TYPE, THIS]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 java.lang.Integer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_2;
Node_2 -> Node_3;
}

