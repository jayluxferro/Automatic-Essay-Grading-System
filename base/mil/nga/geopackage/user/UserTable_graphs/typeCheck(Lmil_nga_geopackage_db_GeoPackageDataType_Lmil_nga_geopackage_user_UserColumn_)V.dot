digraph "CFG formil.nga.geopackage.user.UserTable.typeCheck(Lmil\/nga\/geopackage\/db\/GeoPackageDataType;Lmil\/nga\/geopackage\/user\/UserColumn;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|mil.nga.geopackage.db.GeoPackageDataType r0 = r6.getDataType()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r0 == null) goto L_0x000e\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006}"];
Node_3 [shape=record,label="{3\:\ 0x000a|if (r0.equals(r5) != false) goto L_0x000d\l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|RETURN\l|return\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|java.lang.StringBuilder r2 = new java.lang.StringBuilder()\lr2.append(\"Unexpected \")\lr2.append(r6.getName())\lr2.append(\" column data type was found for table '\")\lr2.append(r4.tableName)\lr2.append(\"', expected: \")\lr2.append(r5.name())\lr2.append(\", actual: \")\l}"];
Node_6 [shape=record,label="{6\:\ 0x003c|if (r0 == null) goto L_0x0043\l}"];
Node_7 [shape=record,label="{7\:\ 0x003e|java.lang.String r5 = r0.name()\l}"];
Node_8 [shape=record,label="{8\:\ 0x0043|java.lang.String r5 = \"null\"\l}"];
Node_9 [shape=record,label="{9\:\ 0x0045|PHI: r5 \l  PHI: (r5v3 java.lang.String) = (r5v5 java.lang.String), (r5v6 java.lang.String) binds: [B:8:0x0043, B:7:0x003e] A[DONT_GENERATE, DONT_INLINE]\l|r2.append(r5)\l}"];
Node_10 [shape=record,label="{10\:\ 0x004f|throw new mil.nga.geopackage.GeoPackageException(r2.toString())\l}"];
MethodNode[shape=record,label="{protected void mil.nga.geopackage.user.UserTable.typeCheck((r4v0 'this' mil.nga.geopackage.user.UserTable A[IMMUTABLE_TYPE, THIS]), (r5v0 mil.nga.geopackage.db.GeoPackageDataType A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 TColumn A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lmil\/nga\/geopackage\/db\/GeoPackageDataType;, TTColumn;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
}

