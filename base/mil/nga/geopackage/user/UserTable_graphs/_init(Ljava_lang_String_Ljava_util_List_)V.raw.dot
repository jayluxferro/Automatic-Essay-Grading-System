digraph "CFG formil.nga.geopackage.user.UserTable.\<init\>(Ljava\/lang\/String;Ljava\/util\/List;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r7 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: NEW_INSTANCE  (r0 I:java.util.HashMap) =  java.util.HashMap \l0x0005: INVOKE  (r0 I:java.util.HashMap) java.util.HashMap.\<init\>():void type: DIRECT \l0x0008: IPUT  \l  (r0 I:java.util.Map\<java.lang.String, java.lang.Integer\>)\l  (r7 I:mil.nga.geopackage.user.UserTable)\l mil.nga.geopackage.user.UserTable.nameToIndex java.util.Map \l0x000a: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList \l0x000c: INVOKE  (r0 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x000f: IPUT  \l  (r0 I:java.util.List\<mil.nga.geopackage.user.UserUniqueConstraint\<TColumn\>\>)\l  (r7 I:mil.nga.geopackage.user.UserTable)\l mil.nga.geopackage.user.UserTable.uniqueConstraints java.util.List \l0x0011: IPUT  \l  (r8 I:java.lang.String)\l  (r7 I:mil.nga.geopackage.user.UserTable)\l mil.nga.geopackage.user.UserTable.tableName java.lang.String \l0x0013: IPUT  \l  (r9 I:java.util.List\<TColumn\>)\l  (r7 I:mil.nga.geopackage.user.UserTable)\l mil.nga.geopackage.user.UserTable.columns java.util.List \l0x0015: NEW_INSTANCE  (r0 I:java.util.HashSet) =  java.util.HashSet \l0x0017: INVOKE  (r0 I:java.util.HashSet) java.util.HashSet.\<init\>():void type: DIRECT \l0x001a: INVOKE  (r1 I:int) = (r9 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x001e: NEW_ARRAY  (r1 I:java.lang.String[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.String[] \l0x0020: IPUT  \l  (r1 I:java.lang.String[])\l  (r7 I:mil.nga.geopackage.user.UserTable)\l mil.nga.geopackage.user.UserTable.columnNames java.lang.String[] \l0x0022: INVOKE  (r1 I:java.util.Iterator) = (r9 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l0x0026: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0027|0x0027: INVOKE  (r3 I:boolean) = (r1 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x002b|0x002b: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x00b1 \l}"];
Node_3 [shape=record,label="{3\:\ 0x002d|0x002d: INVOKE  (r3 I:java.lang.Object) = (r1 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0031: CHECK_CAST  (r3 I:mil.nga.geopackage.user.UserColumn) = (mil.nga.geopackage.user.UserColumn) (r3 I:?[OBJECT, ARRAY]) \l0x0033: INVOKE  (r4 I:int) = (r3 I:mil.nga.geopackage.user.UserColumn) mil.nga.geopackage.user.UserColumn.getIndex():int type: VIRTUAL \l0x0037: INVOKE  (r5 I:boolean) = (r3 I:mil.nga.geopackage.user.UserColumn) mil.nga.geopackage.user.UserColumn.isPrimaryKey():boolean type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x003b|0x003b: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x006b \l}"];
Node_5 [shape=record,label="{5\:\ 0x003d|0x003d: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0044 \l}"];
Node_6 [shape=record,label="{6\:\ 0x003f|0x003f: INVOKE  (r2 I:java.lang.Integer) = (r4 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x0044|0x0044: NEW_INSTANCE  (r9 I:mil.nga.geopackage.GeoPackageException) =  mil.nga.geopackage.GeoPackageException \l0x0046: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0048: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x004b: CONST_STR  (r1 I:java.lang.String) =  \"More than one primary key column was found for table '\" \l0x004d: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0050: INVOKE  (r0 I:java.lang.StringBuilder), (r8 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0053: CONST_STR  (r8 I:java.lang.String) =  \"'. Index \" \l0x0055: INVOKE  (r0 I:java.lang.StringBuilder), (r8 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0058: INVOKE  (r0 I:java.lang.StringBuilder), (r2 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x005b: CONST_STR  (r8 I:java.lang.String) =  \" and \" \l0x005d: INVOKE  (r0 I:java.lang.StringBuilder), (r8 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0060: INVOKE  (r0 I:java.lang.StringBuilder), (r4 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x0063: INVOKE  (r8 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0067: INVOKE  \l  (r9 I:mil.nga.geopackage.GeoPackageException)\l  (r8 I:java.lang.String)\l mil.nga.geopackage.GeoPackageException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_8 [shape=record,label="{8\:\ 0x006a|0x006a: THROW  (r9 I:java.lang.Throwable) \l}"];
Node_9 [shape=record,label="{9\:\ 0x006b|0x006b: INVOKE  (r5 I:java.lang.Integer) = (r4 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x006f: INVOKE  (r5 I:boolean) = (r0 I:java.util.Set), (r5 I:java.lang.Object) java.util.Set.contains(java.lang.Object):boolean type: INTERFACE \l}"];
Node_10 [shape=record,label="{10\:\ 0x0073|0x0073: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0092 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0075|0x0075: INVOKE  (r5 I:java.lang.Integer) = (r4 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0079: INVOKE  (r0 I:java.util.Set), (r5 I:java.lang.Object) java.util.Set.add(java.lang.Object):boolean type: INTERFACE \l0x007c: IGET  (r5 I:java.lang.String[]) = (r7 I:mil.nga.geopackage.user.UserTable) mil.nga.geopackage.user.UserTable.columnNames java.lang.String[] \l0x007e: INVOKE  (r6 I:java.lang.String) = (r3 I:mil.nga.geopackage.user.UserColumn) mil.nga.geopackage.user.UserColumn.getName():java.lang.String type: VIRTUAL \l0x0082: APUT  \l  (r5 I:?[OBJECT, ARRAY][])\l  (r4 I:?[int, short, byte, char])\l  (r6 I:?[OBJECT, ARRAY])\l \l0x0084: IGET  (r5 I:java.util.Map\<java.lang.String, java.lang.Integer\>) = (r7 I:mil.nga.geopackage.user.UserTable) mil.nga.geopackage.user.UserTable.nameToIndex java.util.Map \l0x0086: INVOKE  (r3 I:java.lang.String) = (r3 I:mil.nga.geopackage.user.UserColumn) mil.nga.geopackage.user.UserColumn.getName():java.lang.String type: VIRTUAL \l0x008a: INVOKE  (r4 I:java.lang.Integer) = (r4 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x008e: INVOKE  \l  (r5 I:java.util.Map)\l  (r3 I:java.lang.Object)\l  (r4 I:java.lang.Object)\l java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE \l}"];
Node_12 [shape=record,label="{12\:\ 0x0092|0x0092: NEW_INSTANCE  (r9 I:mil.nga.geopackage.GeoPackageException) =  mil.nga.geopackage.GeoPackageException \l0x0094: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0096: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0099: CONST_STR  (r1 I:java.lang.String) =  \"Duplicate index: \" \l0x009b: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x009e: INVOKE  (r0 I:java.lang.StringBuilder), (r4 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x00a1: CONST_STR  (r1 I:java.lang.String) =  \", Table Name: \" \l0x00a3: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00a6: INVOKE  (r0 I:java.lang.StringBuilder), (r8 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00a9: INVOKE  (r8 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x00ad: INVOKE  \l  (r9 I:mil.nga.geopackage.GeoPackageException)\l  (r8 I:java.lang.String)\l mil.nga.geopackage.GeoPackageException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_13 [shape=record,label="{13\:\ 0x00b0|0x00b0: THROW  (r9 I:java.lang.Throwable) \l}"];
Node_14 [shape=record,label="{14\:\ 0x00b1|0x00b1: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x00ba \l}"];
Node_15 [shape=record,label="{15\:\ 0x00b3|0x00b3: INVOKE  (r1 I:int) = (r2 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l0x00b7: IPUT  (r1 I:int), (r7 I:mil.nga.geopackage.user.UserTable) mil.nga.geopackage.user.UserTable.pkIndex int \l}"];
Node_16 [shape=record,label="{16\:\ 0x00ba|0x00ba: SGET  (r1 I:java.util.logging.Logger) =  mil.nga.geopackage.user.UserTable.log java.util.logging.Logger \l0x00bc: SGET  (r2 I:java.util.logging.Level) =  java.util.logging.Level.WARNING java.util.logging.Level \l0x00be: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x00c0: INVOKE  (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x00c3: CONST_STR  (r4 I:java.lang.String) =  \"No primary key column was found for table '\" \l0x00c5: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00c8: INVOKE  (r3 I:java.lang.StringBuilder), (r8 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00cb: CONST_STR  (r4 I:java.lang.String) =  \"'\" \l0x00cd: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00d0: INVOKE  (r3 I:java.lang.String) = (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x00d4: INVOKE  \l  (r1 I:java.util.logging.Logger)\l  (r2 I:java.util.logging.Level)\l  (r3 I:java.lang.String)\l java.util.logging.Logger.log(java.util.logging.Level, java.lang.String):void type: VIRTUAL \l0x00d7: CONST  (r1 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x00d8: IPUT  (r1 I:int), (r7 I:mil.nga.geopackage.user.UserTable) mil.nga.geopackage.user.UserTable.pkIndex int \l}"];
Node_17 [shape=record,label="{17\:\ 0x00da|0x00da: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_18 [shape=record,label="{18\:\ 0x00db|0x00db: INVOKE  (r2 I:int) = (r9 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_19 [shape=record,label="{19\:\ 0x00df|0x00df: IF  (r1 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:25:0x010d \l}"];
Node_20 [shape=record,label="{20\:\ 0x00e1|0x00e1: INVOKE  (r2 I:java.lang.Integer) = (r1 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x00e5: INVOKE  (r2 I:boolean) = (r0 I:java.util.Set), (r2 I:java.lang.Object) java.util.Set.contains(java.lang.Object):boolean type: INTERFACE \l}"];
Node_21 [shape=record,label="{21\:\ 0x00e9|0x00e9: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x00ee \l}"];
Node_22 [shape=record,label="{22\:\ 0x00eb|0x00eb: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_23 [shape=record,label="{23\:\ 0x00ee|0x00ee: NEW_INSTANCE  (r9 I:mil.nga.geopackage.GeoPackageException) =  mil.nga.geopackage.GeoPackageException \l0x00f0: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x00f2: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x00f5: CONST_STR  (r2 I:java.lang.String) =  \"No column found at index: \" \l0x00f7: INVOKE  (r0 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00fa: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x00fd: CONST_STR  (r1 I:java.lang.String) =  \", Table Name: \" \l0x00ff: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0102: INVOKE  (r0 I:java.lang.StringBuilder), (r8 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0105: INVOKE  (r8 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0109: INVOKE  \l  (r9 I:mil.nga.geopackage.GeoPackageException)\l  (r8 I:java.lang.String)\l mil.nga.geopackage.GeoPackageException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_24 [shape=record,label="{24\:\ 0x010c|0x010c: THROW  (r9 I:java.lang.Throwable) \l}"];
Node_25 [shape=record,label="{25\:\ 0x010d|0x010d: INVOKE  (r9 I:java.util.List) java.util.Collections.sort(java.util.List):void type: STATIC \l}"];
Node_26 [shape=record,label="{26\:\ 0x0110|0x0110: RETURN   \l}"];
MethodNode[shape=record,label="{protected void mil.nga.geopackage.user.UserTable.\<init\>((r7 'this' I:mil.nga.geopackage.user.UserTable A[IMMUTABLE_TYPE, THIS]), (r8 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:java.util.List\<TColumn\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/String;, Ljava\/util\/List\<, TTColumn;\>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_14;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_9;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_1;
Node_12 -> Node_13;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_25;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_18;
Node_23 -> Node_24;
Node_25 -> Node_26;
}

