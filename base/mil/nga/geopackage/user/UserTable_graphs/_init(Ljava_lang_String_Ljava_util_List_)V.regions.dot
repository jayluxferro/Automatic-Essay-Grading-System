digraph "CFG formil.nga.geopackage.user.UserTable.\<init\>(Ljava\/lang\/String;Ljava\/util\/List;)V" {
subgraph cluster_Region_196497887 {
label = "R(6:0|(3:3|(1:(1:6)(2:7|8))|(1:11)(2:12|13))|(1:15)(1:16)|17|(1:(1:22)(2:23|24))|25)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r7.tableName = r8\lr7.columns = r9\ljava.util.HashSet java.util.HashSet r0 = new java.util.HashSet()\lr7.columnNames = new java.lang.String[r9.size()]\ljava.util.Iterator r1 = r9.iterator()\ljava.lang.Integer r2 = null\l}"];
subgraph cluster_LoopRegion_468161259 {
label = "LOOP:0: (3:3|(1:(1:6)(2:7|8))|(1:11)(2:12|13))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x002b|if (r1.hasNext() != false) goto L_0x002d\l}"];
subgraph cluster_Region_1396691243 {
label = "R(3:3|(1:(1:6)(2:7|8))|(1:11)(2:12|13))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x002d|mil.nga.geopackage.user.UserColumn r3 = (mil.nga.geopackage.user.UserColumn) r1.next()\lint int r4 = r3.getIndex()\l}"];
subgraph cluster_IfRegion_1555826653 {
label = "IF [B:4:0x003b] THEN: R(1:(1:6)(2:7|8)) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x003b|if (r3.isPrimaryKey() == true) goto L_0x003d\l}"];
subgraph cluster_Region_979479404 {
label = "R(1:(1:6)(2:7|8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1581034012 {
label = "IF [B:5:0x003d] THEN: R(1:6) ELSE: R(2:7|8)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x003d|if (r2 == null) goto L_0x003f\l}"];
subgraph cluster_Region_705007130 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x003f|java.lang.Integer r2 = java.lang.Integer.valueOf(r4)\l}"];
}
subgraph cluster_Region_277700647 {
label = "R(2:7|8)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0044}"];
Node_8 [shape=record,label="{8\:\ 0x006a|throw new mil.nga.geopackage.GeoPackageException(\"More than one primary key column was found for table '\" + r8 + \"'. Index \" + r2 + \" and \" + r4)\l}"];
}
}
}
}
subgraph cluster_IfRegion_824753322 {
label = "IF [B:10:0x0073] THEN: R(1:11) ELSE: R(2:12|13)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0073|if (r0.contains(java.lang.Integer.valueOf(r4)) == false) goto L_0x0075\l}"];
subgraph cluster_Region_663567954 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0075|LOOP_END\lLOOP:0: B:1:0x0027\-\>B:11:0x0075\l|r0.add(java.lang.Integer.valueOf(r4))\lr7.columnNames[r4] = r3.getName()\lr7.nameToIndex.put(r3.getName(), java.lang.Integer.valueOf(r4))\l}"];
}
subgraph cluster_Region_1067149855 {
label = "R(2:12|13)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0092}"];
Node_13 [shape=record,label="{13\:\ 0x00b0|throw new mil.nga.geopackage.GeoPackageException(\"Duplicate index: \" + r4 + \", Table Name: \" + r8)\l}"];
}
}
}
}
subgraph cluster_IfRegion_592638791 {
label = "IF [B:14:0x00b1] THEN: R(1:15) ELSE: R(1:16)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x00b1|if (r2 != null) goto L_0x00b3\l}"];
subgraph cluster_Region_622976105 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x00b3|r7.pkIndex = r2.intValue()\l}"];
}
subgraph cluster_Region_2048158420 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x00ba|java.util.logging.Logger java.util.logging.Logger r1 = log\ljava.util.logging.Level java.util.logging.Level r2 = java.util.logging.Level.WARNING\lr1.log(r2, \"No primary key column was found for table '\" + r8 + \"'\")\lr7.pkIndex = \-1\l}"];
}
}
Node_17 [shape=record,label="{17\:\ 0x00da|int r1 = 0\l}"];
subgraph cluster_LoopRegion_1702963498 {
label = "LOOP:1: (1:(1:22)(2:23|24))";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x00df|if (r1 \< r9.size()) goto L_0x00e1\l}"];
subgraph cluster_Region_1983379555 {
label = "R(1:(1:22)(2:23|24))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_319036684 {
label = "IF [B:21:0x00e9] THEN: R(1:22) ELSE: R(2:23|24)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x00e9|if (r0.contains(java.lang.Integer.valueOf(r1)) == true) goto L_0x00eb\l}"];
subgraph cluster_Region_511114907 {
label = "R(1:22)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x00eb|LOOP_END\lLOOP:1: B:18:0x00db\-\>B:22:0x00eb\l|r1++\l}"];
}
subgraph cluster_Region_1375544854 {
label = "R(2:23|24)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x00ee}"];
Node_24 [shape=record,label="{24\:\ 0x010c|throw new mil.nga.geopackage.GeoPackageException(\"No column found at index: \" + r1 + \", Table Name: \" + r8)\l}"];
}
}
}
}
Node_25 [shape=record,label="{25\:\ 0x010d|java.util.Collections.sort(r9)\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0027|LOOP_START\lPHI: r2 \l  PHI: (r2v1 java.lang.Integer) = (r2v0 java.lang.Integer), (r2v7 java.lang.Integer) binds: [B:0:0x0000, B:11:0x0075] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0027\-\>B:11:0x0075\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x006b|PHI: r2 \l  PHI: (r2v7 java.lang.Integer) = (r2v1 java.lang.Integer), (r2v8 java.lang.Integer) binds: [B:4:0x003b, B:6:0x003f] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x00db|LOOP_START\lPHI: r1 \l  PHI: (r1v4 int) = (r1v3 int), (r1v6 int) binds: [B:17:0x00da, B:22:0x00eb] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:18:0x00db\-\>B:22:0x00eb\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x00e1}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0110}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0092|SYNTHETIC\l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x00b1|SYNTHETIC\l}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x0044|SYNTHETIC\l}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x00ee|SYNTHETIC\l}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x010d|SYNTHETIC\l}"];
MethodNode[shape=record,label="{protected void mil.nga.geopackage.user.UserTable.\<init\>((r7v0 'this' mil.nga.geopackage.user.UserTable A[IMMUTABLE_TYPE, THIS]), (r8v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 java.util.List\<TColumn\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/String;, Ljava\/util\/List\<, TTColumn;\>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_28[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_9[style=dashed];
Node_5 -> Node_6;
Node_5 -> Node_29[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_10 -> Node_11;
Node_10 -> Node_27[style=dashed];
Node_11 -> Node_1;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_14 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_19 -> Node_20;
Node_19 -> Node_31[style=dashed];
Node_21 -> Node_22;
Node_21 -> Node_30[style=dashed];
Node_22 -> Node_18;
Node_23 -> Node_24;
Node_25 -> Node_26;
Node_1 -> Node_2;
Node_9 -> Node_10;
Node_18 -> Node_19;
Node_20 -> Node_21;
Node_27 -> Node_12;
Node_28 -> Node_14;
Node_29 -> Node_7;
Node_30 -> Node_23;
Node_31 -> Node_25;
}

