digraph "CFG formil.nga.geopackage.user.UserCoreDao.buildValueWhereArgs(Ljava\/util\/Collection;)[Ljava\/lang\/String;" {
subgraph cluster_Region_1649554709 {
label = "R(3:0|(2:3|(1:(1:9)(1:10)))|(2:(1:13)|(1:21)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.ArrayList java.util.ArrayList r0 = new java.util.ArrayList()\ljava.util.Iterator r5 = r5.iterator()\l}"];
subgraph cluster_LoopRegion_671505571 {
label = "LOOP:0: (2:3|(1:(1:9)(1:10)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000e|if (r5.hasNext() != false) goto L_0x0010\l}"];
subgraph cluster_Region_1859505325 {
label = "R(2:3|(1:(1:9)(1:10)))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0010|mil.nga.geopackage.user.ColumnValue r1 = r5.next()\l}"];
subgraph cluster_IfRegion_815440539 {
label = "IF [B:4:0x0016, B:6:0x001c] THEN: R(1:(1:9)(1:10)) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0016|ADDED_TO_REGION\l|if (r1 == null) goto L_0x0009\l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|ADDED_TO_REGION\l|if (r1.getValue() == null) goto L_0x0009\l}"];
subgraph cluster_Region_1283613922 {
label = "R(1:(1:9)(1:10))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1459346069 {
label = "IF [B:8:0x0022] THEN: R(1:9) ELSE: R(1:10)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0022|if (r1.getTolerance() != null) goto L_0x0024\l}"];
subgraph cluster_Region_633522651 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0024|java.lang.String[] java.lang.String[] r1 = getValueToleranceRange(r1)\lr0.add(r1[0])\lr0.add(r1[1])\l}"];
}
subgraph cluster_Region_830171739 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0034|r0.add(r1.getValue().toString())\l}"];
}
}
}
}
}
}
subgraph cluster_Region_369869891 {
label = "R(2:(1:13)|(1:21))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1334484978 {
label = "IF [B:12:0x0044] THEN: R(1:13) ELSE: null";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0044|if (r0.isEmpty() == true) goto L_0x0046\l}"];
subgraph cluster_Region_1944072803 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0046|SYNTHETIC\lRETURN\l|return null\l}"];
}
}
subgraph cluster_Region_1006891403 {
label = "R(1:21)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return (java.lang.String[]) r0.toArray(new java.lang.String[0])\l}"];
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0009|LOOP_START\lLOOP:0: B:1:0x0009\-\>B:15:0x0009\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0018}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x001e}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0040}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0048}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0009|LOOP_END\lSYNTHETIC\lLOOP:0: B:1:0x0009\-\>B:15:0x0009\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0040|SYNTHETIC\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0009|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0009|SYNTHETIC\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0009|SYNTHETIC\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0009|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public java.lang.String[] mil.nga.geopackage.user.UserCoreDao.buildValueWhereArgs((r4v0 'this' mil.nga.geopackage.user.UserCoreDao A[IMMUTABLE_TYPE, THIS]), (r5v0 java.util.Collection\<mil.nga.geopackage.user.ColumnValue\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/Collection\<, Lmil\/nga\/geopackage\/user\/ColumnValue;, \>;)[, Ljava\/lang\/String;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_16[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_17;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_18;
Node_8 -> Node_9;
Node_8 -> Node_10[style=dashed];
Node_9 -> Node_19;
Node_10 -> Node_20;
Node_12 -> Node_13;
Node_12 -> Node_14[style=dashed];
Node_1 -> Node_2;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_11 -> Node_12;
Node_14 -> Node_21;
Node_15 -> Node_1;
Node_16 -> Node_11;
Node_17 -> Node_15;
Node_18 -> Node_15;
Node_19 -> Node_15;
Node_20 -> Node_15;
}

