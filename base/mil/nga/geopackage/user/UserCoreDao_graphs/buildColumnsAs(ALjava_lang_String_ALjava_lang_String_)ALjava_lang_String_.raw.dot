digraph "CFG formil.nga.geopackage.user.UserCoreDao.buildColumnsAs([Ljava\/lang\/String;[Ljava\/lang\/String;)[Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.util.HashMap) =  java.util.HashMap \l0x0002: INVOKE  (r0 I:java.util.HashMap) java.util.HashMap.\<init\>():void type: DIRECT \l0x0005: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: ARRAY_LENGTH  (r2 I:int) = (r5 I:?[]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: IF  (r1 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:4:0x0013 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: AGET  (r2 I:?[OBJECT, ARRAY]) = (r5 I:?[OBJECT, ARRAY][]), (r1 I:?[int, short, byte, char]) \l0x000b: AGET  (r3 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY][]), (r1 I:?[int, short, byte, char]) \l0x000d: INVOKE  \l  (r0 I:java.util.Map)\l  (r2 I:java.lang.Object)\l  (r3 I:java.lang.Object)\l java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE \l0x0010: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|0x0013: INVOKE  (r5 I:java.lang.String[]) = \l  (r4 I:mil.nga.geopackage.user.UserCoreDao)\l  (r0 I:java.util.Map)\l mil.nga.geopackage.user.UserCoreDao.buildColumnsAs(java.util.Map):java.lang.String[] type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|0x0017: RETURN  (r5 I:java.lang.String[]) \l}"];
MethodNode[shape=record,label="{public java.lang.String[] mil.nga.geopackage.user.UserCoreDao.buildColumnsAs((r4 'this' I:mil.nga.geopackage.user.UserCoreDao A[IMMUTABLE_TYPE, THIS]), (r5 I:java.lang.String[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.lang.String[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
Node_4 -> Node_5;
}

