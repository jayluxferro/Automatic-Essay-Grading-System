digraph "CFG formil.nga.geopackage.user.UserCoreDao.buildWhere(Ljava\/lang\/String;Lmil\/nga\/geopackage\/user\/ColumnValue;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r5 == null) goto L_0x005c\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002}"];
Node_2 [shape=record,label="{2\:\ 0x0006|if (r5.getValue() == null) goto L_0x0053\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008}"];
Node_4 [shape=record,label="{4\:\ 0x000c|if (r5.getTolerance() == null) goto L_0x0053\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e}"];
Node_6 [shape=record,label="{6\:\ 0x0014|if ((r5.getValue() instanceof java.lang.Number) == false) goto L_0x0034\l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|java.lang.String r4 = mil.nga.geopackage.p021db.CoreSQLUtils.quoteWrap(r4)\ljava.lang.StringBuilder r5 = new java.lang.StringBuilder()\lr5.append(r4)\lr5.append(\" \>= ? AND \")\lr5.append(r4)\lr5.append(\" \<= ?\")\l}"];
Node_8 [shape=record,label="{8\:\ 0x0034|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Field value is not a number and can not use a tolerance, Field: \")\lr1.append(r4)\lr1.append(\", Value: \")\lr1.append(r5)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0052|throw new mil.nga.geopackage.GeoPackageException(r1.toString())\l}"];
Node_10 [shape=record,label="{10\:\ 0x0053}"];
Node_11 [shape=record,label="{11\:\ 0x005c}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return buildWhere(r4, (java.lang.Object) null, com.j256.ormlite.stmt.query.SimpleComparison.EQUAL_TO_OPERATION)\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|return r5.toString()\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\l|return buildWhere(r4, r5.getValue())\l}"];
MethodNode[shape=record,label="{public java.lang.String mil.nga.geopackage.user.UserCoreDao.buildWhere((r3v0 'this' mil.nga.geopackage.user.UserCoreDao A[IMMUTABLE_TYPE, THIS]), (r4v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 mil.nga.geopackage.user.ColumnValue A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_11;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_10;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_10;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_13;
Node_8 -> Node_9;
Node_10 -> Node_14;
Node_11 -> Node_12;
}

