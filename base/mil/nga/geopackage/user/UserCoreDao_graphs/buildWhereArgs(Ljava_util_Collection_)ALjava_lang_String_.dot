digraph "CFG formil.nga.geopackage.user.UserCoreDao.buildWhereArgs(Ljava\/util\/Collection;)[Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.ArrayList r0 = new java.util.ArrayList()\ljava.util.Iterator r3 = r3.iterator()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|LOOP_START\lLOOP:0: B:1:0x0009\-\>B:10:0x0009\l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|if (r3.hasNext() == false) goto L_0x001d\l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|java.lang.Object r1 = r3.next()\l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|if (r1 == null) goto L_0x0009\l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|r0.add(r1.toString())\l}"];
Node_6 [shape=record,label="{6\:\ 0x001d}"];
Node_7 [shape=record,label="{7\:\ 0x0021|if (r0.isEmpty() == false) goto L_0x0025\l}"];
Node_8 [shape=record,label="{8\:\ 0x0023|SYNTHETIC\lRETURN\l|return null\l}"];
Node_9 [shape=record,label="{9\:\ 0x0025}"];
Node_10 [shape=record,label="{10\:\ 0x0009|LOOP_END\lSYNTHETIC\lLOOP:0: B:1:0x0009\-\>B:10:0x0009\l}"];
Node_11 [shape=record,label="{11\:\ 0x001d|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ 0x0009|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x0009|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return (java.lang.String[]) r0.toArray(new java.lang.String[0])\l}"];
MethodNode[shape=record,label="{public java.lang.String[] mil.nga.geopackage.user.UserCoreDao.buildWhereArgs((r2v0 'this' mil.nga.geopackage.user.UserCoreDao A[IMMUTABLE_TYPE, THIS]), (r3v0 java.util.Collection\<java.lang.Object\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/Collection\<, Ljava\/lang\/Object;, \>;)[, Ljava\/lang\/String;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_11;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_12;
Node_5 -> Node_13;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_9 -> Node_14;
Node_10 -> Node_1;
Node_11 -> Node_6;
Node_12 -> Node_10;
Node_13 -> Node_10;
}

