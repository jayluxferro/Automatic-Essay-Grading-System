digraph "CFG formil.nga.geopackage.user.UserCoreDao.buildValueWhereArgs(Ljava\/util\/Collection;)[Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList \l0x0002: INVOKE  (r0 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x0005: INVOKE  (r5 I:java.util.Iterator) = (r5 I:java.util.Collection) java.util.Collection.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: INVOKE  (r1 I:boolean) = (r5 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l0x000d: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|0x000e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0040 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: INVOKE  (r1 I:java.lang.Object) = (r5 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0014: CHECK_CAST  (r1 I:mil.nga.geopackage.user.ColumnValue) = (mil.nga.geopackage.user.ColumnValue) (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|0x0016: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0009 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|0x0018: INVOKE  (r3 I:java.lang.Object) = (r1 I:mil.nga.geopackage.user.ColumnValue) mil.nga.geopackage.user.ColumnValue.getValue():java.lang.Object type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|0x001c: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0009 \l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|0x001e: INVOKE  (r3 I:java.lang.Double) = (r1 I:mil.nga.geopackage.user.ColumnValue) mil.nga.geopackage.user.ColumnValue.getTolerance():java.lang.Double type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0022|0x0022: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0034 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0024|0x0024: INVOKE  (r1 I:java.lang.String[]) = \l  (r4 I:mil.nga.geopackage.user.UserCoreDao)\l  (r1 I:mil.nga.geopackage.user.ColumnValue)\l mil.nga.geopackage.user.UserCoreDao.getValueToleranceRange(mil.nga.geopackage.user.ColumnValue):java.lang.String[] type: DIRECT \l0x0028: AGET  (r2 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY][]), (r2 I:?[int, short, byte, char]) \l0x002a: INVOKE  (r0 I:java.util.List), (r2 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x002d: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x002e: AGET  (r1 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY][]), (r2 I:?[int, short, byte, char]) \l0x0030: INVOKE  (r0 I:java.util.List), (r1 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_10 [shape=record,label="{10\:\ 0x0034|0x0034: INVOKE  (r1 I:java.lang.Object) = (r1 I:mil.nga.geopackage.user.ColumnValue) mil.nga.geopackage.user.ColumnValue.getValue():java.lang.Object type: VIRTUAL \l0x0038: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.Object) java.lang.Object.toString():java.lang.String type: VIRTUAL \l0x003c: INVOKE  (r0 I:java.util.List), (r1 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_11 [shape=record,label="{11\:\ 0x0040|0x0040: INVOKE  (r5 I:boolean) = (r0 I:java.util.List) java.util.List.isEmpty():boolean type: INTERFACE \l}"];
Node_12 [shape=record,label="{12\:\ 0x0044|0x0044: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0048 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0046|0x0046: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_14 [shape=record,label="{14\:\ 0x0048|0x0048: NEW_ARRAY  (r5 I:java.lang.String[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: java.lang.String[] \l0x004a: INVOKE  (r5 I:java.lang.Object[]) = (r0 I:java.util.List), (r5 I:java.lang.Object[]) java.util.List.toArray(java.lang.Object[]):java.lang.Object[] type: INTERFACE \l0x004e: CHECK_CAST  (r5 I:java.lang.String[]) = (java.lang.String[]) (r5 I:?[OBJECT, ARRAY]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0050|0x0050: RETURN  (r5 I:java.lang.String[]) \l}"];
MethodNode[shape=record,label="{public java.lang.String[] mil.nga.geopackage.user.UserCoreDao.buildValueWhereArgs((r4 'this' I:mil.nga.geopackage.user.UserCoreDao A[IMMUTABLE_TYPE, THIS]), (r5 I:java.util.Collection\<mil.nga.geopackage.user.ColumnValue\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/Collection\<, Lmil\/nga\/geopackage\/user\/ColumnValue;, \>;)[, Ljava\/lang\/String;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_11;
Node_3 -> Node_4;
Node_4 -> Node_1;
Node_4 -> Node_5[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_1;
Node_6 -> Node_7[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_1;
Node_10 -> Node_1;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_15;
Node_14 -> Node_15;
}

