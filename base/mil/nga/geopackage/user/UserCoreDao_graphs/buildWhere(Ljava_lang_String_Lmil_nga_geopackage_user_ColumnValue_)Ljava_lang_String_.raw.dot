digraph "CFG formil.nga.geopackage.user.UserCoreDao.buildWhere(Ljava\/lang\/String;Lmil\/nga\/geopackage\/user\/ColumnValue;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x005c \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: INVOKE  (r0 I:java.lang.Object) = (r5 I:mil.nga.geopackage.user.ColumnValue) mil.nga.geopackage.user.ColumnValue.getValue():java.lang.Object type: VIRTUAL \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0053 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: INVOKE  (r0 I:java.lang.Double) = (r5 I:mil.nga.geopackage.user.ColumnValue) mil.nga.geopackage.user.ColumnValue.getTolerance():java.lang.Double type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0053 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: INVOKE  (r0 I:java.lang.Object) = (r5 I:mil.nga.geopackage.user.ColumnValue) mil.nga.geopackage.user.ColumnValue.getValue():java.lang.Object type: VIRTUAL \l0x0012: INSTANCE_OF  (r0 I:boolean) = (r0 I:?[OBJECT, ARRAY]) java.lang.Number \l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|0x0014: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0034 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|0x0016: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.String) mil.nga.geopackage.db.CoreSQLUtils.quoteWrap(java.lang.String):java.lang.String type: STATIC \l0x001a: NEW_INSTANCE  (r5 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x001c: INVOKE  (r5 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x001f: INVOKE  (r5 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0022: CONST_STR  (r0 I:java.lang.String) =  \" \>= ? AND \" \l0x0024: INVOKE  (r5 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0027: INVOKE  (r5 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x002a: CONST_STR  (r4 I:java.lang.String) =  \" \<= ?\" \l0x002c: INVOKE  (r5 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x002f: INVOKE  (r4 I:java.lang.String) = (r5 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0034|0x0034: NEW_INSTANCE  (r0 I:mil.nga.geopackage.GeoPackageException) =  mil.nga.geopackage.GeoPackageException \l0x0036: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0038: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x003b: CONST_STR  (r2 I:java.lang.String) =  \"Field value is not a number and can not use a tolerance, Field: \" \l0x003d: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0040: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0043: CONST_STR  (r4 I:java.lang.String) =  \", Value: \" \l0x0045: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0048: INVOKE  (r1 I:java.lang.StringBuilder), (r5 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x004b: INVOKE  (r4 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x004f: INVOKE  \l  (r0 I:mil.nga.geopackage.GeoPackageException)\l  (r4 I:java.lang.String)\l mil.nga.geopackage.GeoPackageException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x0052|0x0052: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0053|0x0053: INVOKE  (r5 I:java.lang.Object) = (r5 I:mil.nga.geopackage.user.ColumnValue) mil.nga.geopackage.user.ColumnValue.getValue():java.lang.Object type: VIRTUAL \l0x0057: INVOKE  (r4 I:java.lang.String) = \l  (r3 I:mil.nga.geopackage.user.UserCoreDao)\l  (r4 I:java.lang.String)\l  (r5 I:java.lang.Object)\l mil.nga.geopackage.user.UserCoreDao.buildWhere(java.lang.String, java.lang.Object):java.lang.String type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x005c|0x005c: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x005d: CONST_STR  (r0 I:java.lang.String) =  \"=\" \l0x005f: INVOKE  (r4 I:java.lang.String) = \l  (r3 I:mil.nga.geopackage.user.UserCoreDao)\l  (r4 I:java.lang.String)\l  (r5 I:java.lang.Object)\l  (r0 I:java.lang.String)\l mil.nga.geopackage.user.UserCoreDao.buildWhere(java.lang.String, java.lang.Object, java.lang.String):java.lang.String type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0063|0x0063: RETURN  (r4 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{public java.lang.String mil.nga.geopackage.user.UserCoreDao.buildWhere((r3 'this' I:mil.nga.geopackage.user.UserCoreDao A[IMMUTABLE_TYPE, THIS]), (r4 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:mil.nga.geopackage.user.ColumnValue A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_11;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_10;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_10;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_12;
Node_8 -> Node_9;
Node_10 -> Node_12;
Node_11 -> Node_12;
}

