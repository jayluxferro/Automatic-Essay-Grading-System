digraph "CFG formil.nga.geopackage.user.UserCoreRow.\<init\>(Lmil\/nga\/geopackage\/user\/UserCoreRow;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r4 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: IGET  (r0 I:TTable) = (r5 I:mil.nga.geopackage.user.UserCoreRow) mil.nga.geopackage.user.UserCoreRow.table mil.nga.geopackage.user.UserTable \l0x0005: IPUT  (r0 I:TTable), (r4 I:mil.nga.geopackage.user.UserCoreRow) mil.nga.geopackage.user.UserCoreRow.table mil.nga.geopackage.user.UserTable \l0x0007: IGET  (r0 I:int[]) = (r5 I:mil.nga.geopackage.user.UserCoreRow) mil.nga.geopackage.user.UserCoreRow.columnTypes int[] \l0x0009: IPUT  (r0 I:int[]), (r4 I:mil.nga.geopackage.user.UserCoreRow) mil.nga.geopackage.user.UserCoreRow.columnTypes int[] \l0x000b: IGET  (r0 I:java.lang.Object[]) = (r5 I:mil.nga.geopackage.user.UserCoreRow) mil.nga.geopackage.user.UserCoreRow.values java.lang.Object[] \l0x000d: ARRAY_LENGTH  (r0 I:int) = (r0 I:?[]) \l0x000e: NEW_ARRAY  (r0 I:java.lang.Object[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x0010: IPUT  \l  (r0 I:java.lang.Object[])\l  (r4 I:mil.nga.geopackage.user.UserCoreRow)\l mil.nga.geopackage.user.UserCoreRow.values java.lang.Object[] \l0x0012: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0013|0x0013: IGET  (r1 I:java.lang.Object[]) = (r4 I:mil.nga.geopackage.user.UserCoreRow) mil.nga.geopackage.user.UserCoreRow.values java.lang.Object[] \l0x0015: ARRAY_LENGTH  (r1 I:int) = (r1 I:?[]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0016|0x0016: IF  (r0 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:7:0x002d \l}"];
Node_3 [shape=record,label="{3\:\ 0x0018|0x0018: IGET  (r1 I:java.lang.Object[]) = (r5 I:mil.nga.geopackage.user.UserCoreRow) mil.nga.geopackage.user.UserCoreRow.values java.lang.Object[] \l0x001a: AGET  (r1 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY][]), (r0 I:?[int, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x001c|0x001c: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x002a \l}"];
Node_5 [shape=record,label="{5\:\ 0x001e|0x001e: INVOKE  (r2 I:mil.nga.geopackage.user.UserColumn) = (r5 I:mil.nga.geopackage.user.UserCoreRow), (r0 I:int) mil.nga.geopackage.user.UserCoreRow.getColumn(int):mil.nga.geopackage.user.UserColumn type: VIRTUAL \l0x0022: IGET  (r3 I:java.lang.Object[]) = (r4 I:mil.nga.geopackage.user.UserCoreRow) mil.nga.geopackage.user.UserCoreRow.values java.lang.Object[] \l0x0024: INVOKE  (r1 I:java.lang.Object) = \l  (r4 I:mil.nga.geopackage.user.UserCoreRow)\l  (r2 I:mil.nga.geopackage.user.UserColumn)\l  (r1 I:java.lang.Object)\l mil.nga.geopackage.user.UserCoreRow.copyValue(mil.nga.geopackage.user.UserColumn, java.lang.Object):java.lang.Object type: VIRTUAL \l0x0028: APUT  \l  (r3 I:?[OBJECT, ARRAY][])\l  (r0 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x002a|0x002a: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x002d|0x002d: RETURN   \l}"];
MethodNode[shape=record,label="{protected void mil.nga.geopackage.user.UserCoreRow.\<init\>((r4 'this' I:mil.nga.geopackage.user.UserCoreRow A[IMMUTABLE_TYPE, THIS]), (r5 I:mil.nga.geopackage.user.UserCoreRow\<TColumn, TTable\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lmil\/nga\/geopackage\/user\/UserCoreRow\<, TTColumn;TTTable;\>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_1;
}

