digraph "CFG formil.nga.geopackage.user.UserCoreRow.validateValue(Lmil\/nga\/geopackage\/user\/UserColumn;Ljava\/lang\/Object;[Ljava\/lang\/Class;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:mil.nga.geopackage.db.GeoPackageDataType) = (r6 I:mil.nga.geopackage.user.UserColumn) mil.nga.geopackage.user.UserColumn.getDataType():mil.nga.geopackage.db.GeoPackageDataType type: VIRTUAL \l0x0004: INVOKE  (r0 I:java.lang.Class) = (r0 I:mil.nga.geopackage.db.GeoPackageDataType) mil.nga.geopackage.db.GeoPackageDataType.getClassType():java.lang.Class type: VIRTUAL \l0x0008: ARRAY_LENGTH  (r1 I:int) = (r8 I:?[]) \l0x0009: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000a: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: IF  (r3 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:6:0x001a \l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|0x000d: AGET  (r4 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY][]), (r3 I:?[int, short, byte, char]) \l0x000f: INVOKE  (r4 I:boolean) = (r4 I:java.lang.Object), (r0 I:java.lang.Object) java.lang.Object.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|0x0013: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0017 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|0x0015: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|0x0017: ARITH  (r3 I:int) = (r3 I:int) + (1 int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|0x001a: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|0x001b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x001e \l}"];
Node_8 [shape=record,label="{8\:\ 0x001d|0x001d: RETURN   \l}"];
Node_9 [shape=record,label="{9\:\ 0x001e|0x001e: NEW_INSTANCE  (r1 I:mil.nga.geopackage.GeoPackageException) =  mil.nga.geopackage.GeoPackageException \l0x0020: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0022: INVOKE  (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0025: CONST_STR  (r4 I:java.lang.String) =  \"Illegal value. Column: \" \l0x0027: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x002a: INVOKE  (r6 I:java.lang.String) = (r6 I:mil.nga.geopackage.user.UserColumn) mil.nga.geopackage.user.UserColumn.getName():java.lang.String type: VIRTUAL \l0x002e: INVOKE  (r3 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0031: CONST_STR  (r6 I:java.lang.String) =  \", Value: \" \l0x0033: INVOKE  (r3 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0036: INVOKE  (r3 I:java.lang.StringBuilder), (r7 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0039: CONST_STR  (r6 I:java.lang.String) =  \", Expected Type: \" \l0x003b: INVOKE  (r3 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x003e: INVOKE  (r6 I:java.lang.String) = (r0 I:java.lang.Class) java.lang.Class.getSimpleName():java.lang.String type: VIRTUAL \l0x0042: INVOKE  (r3 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0045: CONST_STR  (r6 I:java.lang.String) =  \", Actual Type: \" \l0x0047: INVOKE  (r3 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x004a: AGET  (r6 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY][]), (r2 I:?[int, short, byte, char]) \l0x004c: INVOKE  (r6 I:java.lang.String) = (r6 I:java.lang.Class) java.lang.Class.getSimpleName():java.lang.String type: VIRTUAL \l0x0050: INVOKE  (r3 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0053: INVOKE  (r6 I:java.lang.String) = (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0057: INVOKE  \l  (r1 I:mil.nga.geopackage.GeoPackageException)\l  (r6 I:java.lang.String)\l mil.nga.geopackage.GeoPackageException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_10 [shape=record,label="{10\:\ 0x005a|0x005a: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{protected void mil.nga.geopackage.user.UserCoreRow.validateValue((r5 'this' I:mil.nga.geopackage.user.UserCoreRow A[IMMUTABLE_TYPE, THIS]), (r6 I:TColumn A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:java.lang.Class\<?\>[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(TTColumn;, Ljava\/lang\/Object;, [, Ljava\/lang\/Class\<, *\>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_7;
Node_5 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_9 -> Node_10;
}

