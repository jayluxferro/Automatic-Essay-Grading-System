digraph "CFG formil.nga.geopackage.user.UserRowSync.getRowOrLock(J)Lmil\/nga\/geopackage\/user\/UserCoreRow;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.concurrent.locks.Lock) = (r4 I:mil.nga.geopackage.user.UserRowSync) mil.nga.geopackage.user.UserRowSync.lock java.util.concurrent.locks.Lock \l0x0002: INVOKE  (r0 I:java.util.concurrent.locks.Lock) java.util.concurrent.locks.Lock.lock():void type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|SYNTHETIC\lSplitter:B:1:0x0005\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0005\l|0x0005: IGET  (r0 I:java.util.Map\<java.lang.Long, mil.nga.geopackage.user.UserRowSync\<TColumn, TTable, TRow\>$RowCondition\>) = (r4 I:mil.nga.geopackage.user.UserRowSync) mil.nga.geopackage.user.UserRowSync.rows java.util.Map A[Catch:\{ InterruptedException \-\> 0x0045 \}, TRY_ENTER]\l0x0007: INVOKE  (r1 I:java.lang.Long) = (r5 I:long) java.lang.Long.valueOf(long):java.lang.Long type: STATIC A[Catch:\{ InterruptedException \-\> 0x0045 \}]\l0x000b: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.Map), (r1 I:java.lang.Object) java.util.Map.get(java.lang.Object):java.lang.Object type: INTERFACE A[Catch:\{ InterruptedException \-\> 0x0045 \}]\l0x000f: CHECK_CAST  (r0 I:mil.nga.geopackage.user.UserRowSync$RowCondition) = (mil.nga.geopackage.user.UserRowSync$RowCondition) (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ InterruptedException \-\> 0x0045 \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|0x0011: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0025 A[Catch:\{ InterruptedException \-\> 0x0045 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|0x0013: INVOKE  (r1 I:mil.nga.geopackage.user.UserCoreRow) = (r0 I:mil.nga.geopackage.user.UserRowSync$RowCondition) mil.nga.geopackage.user.UserRowSync.RowCondition.access$000(mil.nga.geopackage.user.UserRowSync$RowCondition):mil.nga.geopackage.user.UserCoreRow type: STATIC A[Catch:\{ InterruptedException \-\> 0x0045 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|0x0017: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x003d A[Catch:\{ InterruptedException \-\> 0x0045 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|0x0019: INVOKE  (r1 I:java.util.concurrent.locks.Condition) = (r0 I:mil.nga.geopackage.user.UserRowSync$RowCondition) mil.nga.geopackage.user.UserRowSync.RowCondition.access$100(mil.nga.geopackage.user.UserRowSync$RowCondition):java.util.concurrent.locks.Condition type: STATIC A[Catch:\{ InterruptedException \-\> 0x0045 \}]\l0x001d: INVOKE  (r1 I:java.util.concurrent.locks.Condition) java.util.concurrent.locks.Condition.await():void type: INTERFACE A[Catch:\{ InterruptedException \-\> 0x0045 \}]\l0x0020: INVOKE  (r1 I:mil.nga.geopackage.user.UserCoreRow) = (r0 I:mil.nga.geopackage.user.UserRowSync$RowCondition) mil.nga.geopackage.user.UserRowSync.RowCondition.access$000(mil.nga.geopackage.user.UserRowSync$RowCondition):mil.nga.geopackage.user.UserCoreRow type: STATIC A[Catch:\{ InterruptedException \-\> 0x0045 \}]\l0x0024: GOTO  \-\> 0x003d A[Catch:\{ InterruptedException \-\> 0x0045 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0025|0x0025: NEW_INSTANCE  (r0 I:mil.nga.geopackage.user.UserRowSync$RowCondition) =  mil.nga.geopackage.user.UserRowSync$RowCondition A[Catch:\{ InterruptedException \-\> 0x0045 \}]\l0x0027: INVOKE  \l  (r0 I:mil.nga.geopackage.user.UserRowSync$RowCondition)\l  (r4 I:mil.nga.geopackage.user.UserRowSync)\l mil.nga.geopackage.user.UserRowSync.RowCondition.\<init\>(mil.nga.geopackage.user.UserRowSync):void type: DIRECT A[Catch:\{ InterruptedException \-\> 0x0045 \}]\l0x002a: IGET  (r1 I:java.util.concurrent.locks.Lock) = (r4 I:mil.nga.geopackage.user.UserRowSync) mil.nga.geopackage.user.UserRowSync.lock java.util.concurrent.locks.Lock A[Catch:\{ InterruptedException \-\> 0x0045 \}]\l0x002c: INVOKE  (r1 I:java.util.concurrent.locks.Condition) = (r1 I:java.util.concurrent.locks.Lock) java.util.concurrent.locks.Lock.newCondition():java.util.concurrent.locks.Condition type: INTERFACE A[Catch:\{ InterruptedException \-\> 0x0045 \}]\l0x0030: INVOKE  \l  (r0 I:mil.nga.geopackage.user.UserRowSync$RowCondition)\l  (r1 I:java.util.concurrent.locks.Condition)\l mil.nga.geopackage.user.UserRowSync.RowCondition.access$102(mil.nga.geopackage.user.UserRowSync$RowCondition, java.util.concurrent.locks.Condition):java.util.concurrent.locks.Condition type: STATIC A[Catch:\{ InterruptedException \-\> 0x0045 \}]\l0x0033: IGET  (r1 I:java.util.Map\<java.lang.Long, mil.nga.geopackage.user.UserRowSync\<TColumn, TTable, TRow\>$RowCondition\>) = (r4 I:mil.nga.geopackage.user.UserRowSync) mil.nga.geopackage.user.UserRowSync.rows java.util.Map A[Catch:\{ InterruptedException \-\> 0x0045 \}]\l0x0035: INVOKE  (r2 I:java.lang.Long) = (r5 I:long) java.lang.Long.valueOf(long):java.lang.Long type: STATIC A[Catch:\{ InterruptedException \-\> 0x0045 \}]\l0x0039: INVOKE  \l  (r1 I:java.util.Map)\l  (r2 I:java.lang.Object)\l  (r0 I:java.lang.Object)\l java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE A[Catch:\{ InterruptedException \-\> 0x0045 \}, TRY_LEAVE]\l}"];
Node_8 [shape=record,label="{8\:\ 0x003c|0x003c: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x003d|0x003d: IGET  (r5 I:java.util.concurrent.locks.Lock) = (r4 I:mil.nga.geopackage.user.UserRowSync) mil.nga.geopackage.user.UserRowSync.lock java.util.concurrent.locks.Lock \l0x003f: INVOKE  (r5 I:java.util.concurrent.locks.Lock) java.util.concurrent.locks.Lock.unlock():void type: INTERFACE \l}"];
Node_10 [shape=record,label="{10\:\ 0x0042|0x0042: RETURN  (r1 I:TRow) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0043|ExcHandler: all null\lSplitter:B:14:0x0046\l|0x0043: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  \l}"];
Node_13 [shape=record,label="{13\:\ 0x0045|ExcHandler: InterruptedException null\lSplitter:B:1:0x0005\l|0x0045: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_14 [shape=record,label="{14\:\ 0x0046|SYNTHETIC\lSplitter:B:14:0x0046\l}"];
Node_15 [shape=record,label="{15\:\ ?|Splitter:B:14:0x0046\l|0x0046: NEW_INSTANCE  (r1 I:mil.nga.geopackage.GeoPackageException) =  mil.nga.geopackage.GeoPackageException A[Catch:\{ all \-\> 0x0043 \}, TRY_ENTER]\l0x0048: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ all \-\> 0x0043 \}]\l0x004a: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x0043 \}]\l0x004d: CONST_STR  (r3 I:java.lang.String) =  \"Interruption obtaining cached row or row lock. id: \" A[Catch:\{ all \-\> 0x0043 \}]\l0x004f: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0043 \}]\l0x0052: INVOKE  (r2 I:java.lang.StringBuilder), (r5 I:long) java.lang.StringBuilder.append(long):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0043 \}]\l0x0055: INVOKE  (r5 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x0043 \}]\l0x0059: INVOKE  \l  (r1 I:mil.nga.geopackage.GeoPackageException)\l  (r5 I:java.lang.String)\l  (r0 I:java.lang.Throwable)\l mil.nga.geopackage.GeoPackageException.\<init\>(java.lang.String, java.lang.Throwable):void type: DIRECT A[Catch:\{ all \-\> 0x0043 \}]\l}"];
Node_16 [shape=record,label="{16\:\ 0x005c|0x005c: THROW  (r1 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x0043 \}, TRY_LEAVE]\l}"];
Node_17 [shape=record,label="{17\:\ 0x005d|0x005d: IGET  (r6 I:java.util.concurrent.locks.Lock) = (r4 I:mil.nga.geopackage.user.UserRowSync) mil.nga.geopackage.user.UserRowSync.lock java.util.concurrent.locks.Lock \l0x005f: INVOKE  (r6 I:java.util.concurrent.locks.Lock) java.util.concurrent.locks.Lock.unlock():void type: INTERFACE \l}"];
Node_18 [shape=record,label="{18\:\ 0x0062|0x0062: THROW  (r5 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public TRow mil.nga.geopackage.user.UserRowSync.getRowOrLock((r4 'this' I:mil.nga.geopackage.user.UserRowSync A[IMMUTABLE_TYPE, THIS]), (r5 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(J)TTRow;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_13;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_11 -> Node_17;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_11;
Node_15 -> Node_16;
Node_17 -> Node_18;
}

