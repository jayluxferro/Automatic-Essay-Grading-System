digraph "CFG formil.nga.geopackage.BoundingBox.expandCoordinates(D)Lmil\/nga\/geopackage\/BoundingBox;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:mil.nga.geopackage.BoundingBox) =  mil.nga.geopackage.BoundingBox \l0x0002: INVOKE  \l  (r0 I:mil.nga.geopackage.BoundingBox)\l  (r7 I:mil.nga.geopackage.BoundingBox)\l mil.nga.geopackage.BoundingBox.\<init\>(mil.nga.geopackage.BoundingBox):void type: DIRECT \l0x0005: INVOKE  (r1 I:double) = (r7 I:mil.nga.geopackage.BoundingBox) mil.nga.geopackage.BoundingBox.getMinLongitude():double type: VIRTUAL \l0x0009: INVOKE  (r3 I:double) = (r7 I:mil.nga.geopackage.BoundingBox) mil.nga.geopackage.BoundingBox.getMaxLongitude():double type: VIRTUAL \l0x000d: CMP_L  (r5 I:int) = (r1 I:double), (r3 I:double) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|0x000f: IF  (r5 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:3:0x0023 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0011|0x0011: ARITH  (r1 I:double) = (r1 I:double) \- (r3 I:double) \l0x0012: CONST  (r5 I:?[long, double]) = \l  (4611686018427387904(0x4000000000000000, double:2.0) ?[long, double])\l \l0x0014: ARITH  (r5 I:double) = (r5 I:double) * (r8 I:double) \l0x0016: ARITH  (r1 I:double) = (r1 I:double) \/ (r5 I:double) \l0x0017: CAST  (r1 I:int) = (int) (r1 I:double) \l0x0018: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l0x001a: ARITH  (r1 I:int) = (r1 I:int) * (2 int) \l0x001c: CAST  (r1 I:double) = (double) (r1 I:int) \l0x001d: ARITH  (r1 I:double) = (r1 I:double) * (r8 I:double) \l0x001f: ARITH  (r3 I:double) = (r3 I:double) + (r1 I:double) \l0x0020: INVOKE  (r0 I:mil.nga.geopackage.BoundingBox), (r3 I:double) mil.nga.geopackage.BoundingBox.setMaxLongitude(double):void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0023|0x0023: RETURN  (r0 I:mil.nga.geopackage.BoundingBox) \l}"];
MethodNode[shape=record,label="{public mil.nga.geopackage.BoundingBox mil.nga.geopackage.BoundingBox.expandCoordinates((r7 'this' I:mil.nga.geopackage.BoundingBox A[IMMUTABLE_TYPE, THIS]), (r8 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
}

