digraph "CFG formil.nga.geopackage.factory.GeoPackageCoreImpl.createDataColumnConstraintsTable()Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|verifyWritable()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|SYNTHETIC\lSplitter:B:1:0x0007\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ SQLException \-\> 0x0023 \}\lSplitter:B:1:0x0007\l|r1 = false     \/\/ Catch:\{ SQLException \-\> 0x0023 \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|Catch:\{ SQLException \-\> 0x0023 \}\l|if (getDataColumnConstraintsDao().isTableExists() != false) goto L_0x0022     \/\/ Catch:\{ SQLException \-\> 0x0023 \}\l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|Catch:\{ SQLException \-\> 0x0023 \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|Catch:\{ SQLException \-\> 0x0023 \}\l|if (r4.tableCreator.createDataColumnConstraints() \<= 0) goto L_0x0018     \/\/ Catch:\{ SQLException \-\> 0x0023 \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|Catch:\{ SQLException \-\> 0x0023 \}\l|r1 = true     \/\/ Catch:\{ SQLException \-\> 0x0023 \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|Catch:\{ SQLException \-\> 0x0023 \}\lPHI: r1 \l  PHI: (r1v3 boolean) = (r1v1 boolean), (r1v4 boolean) binds: [B:5:0x0014, B:6:0x0016] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 == false) goto L_0x0022     \/\/ Catch:\{ SQLException \-\> 0x0023 \}\l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|Catch:\{ SQLException \-\> 0x0023 \}\l|new mil.nga.geopackage.extension.SchemaExtension(r4).getOrCreate()     \/\/ Catch:\{ SQLException \-\> 0x0023 \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x0022|RETURN\lPHI: r1 \l  PHI: (r1v2 boolean) = (r1v1 boolean), (r1v3 boolean), (r1v3 boolean) binds: [B:3:0x000c, B:7:0x0018, B:8:0x001a] A[DONT_GENERATE, DONT_INLINE]\l|return r1\l}"];
Node_10 [shape=record,label="{10\:\ 0x0023|ExcHandler: SQLException (r0v1 'e' java.sql.SQLException A[CUSTOM_DECLARE])\lSplitter:B:1:0x0007\l|java.sql.SQLException r0 = move\-exception\l}"];
Node_11 [shape=record,label="{11\:\ 0x0024|java.lang.StringBuilder r2 = new java.lang.StringBuilder()\lr2.append(\"Failed to check if \")\lr2.append(mil.nga.geopackage.schema.constraints.DataColumnConstraints.class.getSimpleName())\lr2.append(\" table exists and create it\")\l}"];
Node_12 [shape=record,label="{12\:\ 0x0045|throw new mil.nga.geopackage.GeoPackageException(r2.toString(), r0)\l}"];
MethodNode[shape=record,label="{public boolean mil.nga.geopackage.factory.GeoPackageCoreImpl.createDataColumnConstraintsTable((r4v0 'this' mil.nga.geopackage.factory.GeoPackageCoreImpl A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12;
}

