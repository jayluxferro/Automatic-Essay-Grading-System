digraph "CFG formil.nga.geopackage.factory.GeoPackageCoreImpl.createDao(Ljava\/lang\/Class;)Lcom\/j256\/ormlite\/dao\/BaseDaoImpl;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: IGET  (r0 I:mil.nga.geopackage.db.GeoPackageCoreConnection) = (r4 I:mil.nga.geopackage.factory.GeoPackageCoreImpl) mil.nga.geopackage.factory.GeoPackageCoreImpl.database mil.nga.geopackage.db.GeoPackageCoreConnection A[Catch:\{ SQLException \-\> 0x000d \}, TRY_ENTER]\l0x0002: INVOKE  (r0 I:com.j256.ormlite.support.ConnectionSource) = (r0 I:mil.nga.geopackage.db.GeoPackageCoreConnection) mil.nga.geopackage.db.GeoPackageCoreConnection.getConnectionSource():com.j256.ormlite.support.ConnectionSource type: VIRTUAL A[Catch:\{ SQLException \-\> 0x000d \}]\l0x0006: INVOKE  (r0 I:com.j256.ormlite.dao.Dao) = \l  (r0 I:com.j256.ormlite.support.ConnectionSource)\l  (r5 I:java.lang.Class)\l com.j256.ormlite.dao.DaoManager.createDao(com.j256.ormlite.support.ConnectionSource, java.lang.Class):com.j256.ormlite.dao.Dao type: STATIC A[Catch:\{ SQLException \-\> 0x000d \}]\l0x000a: CHECK_CAST  (r0 I:com.j256.ormlite.dao.BaseDaoImpl) = (com.j256.ormlite.dao.BaseDaoImpl) (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ SQLException \-\> 0x000d \}, TRY_LEAVE]\l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: RETURN  (r0 I:S) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|ExcHandler: SQLException null\lSplitter:B:0:0x0000\l|0x000d: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: NEW_INSTANCE  (r1 I:mil.nga.geopackage.GeoPackageException) =  mil.nga.geopackage.GeoPackageException \l0x0010: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0012: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0015: CONST_STR  (r3 I:java.lang.String) =  \"Failed to create \" \l0x0017: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x001a: INVOKE  (r5 I:java.lang.String) = (r5 I:java.lang.Class) java.lang.Class.getSimpleName():java.lang.String type: VIRTUAL \l0x001e: INVOKE  (r2 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0021: CONST_STR  (r5 I:java.lang.String) =  \" dao\" \l0x0023: INVOKE  (r2 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0026: INVOKE  (r5 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x002a: INVOKE  \l  (r1 I:mil.nga.geopackage.GeoPackageException)\l  (r5 I:java.lang.String)\l  (r0 I:java.lang.Throwable)\l mil.nga.geopackage.GeoPackageException.\<init\>(java.lang.String, java.lang.Throwable):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x002d|0x002d: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public S mil.nga.geopackage.factory.GeoPackageCoreImpl.createDao((r4 'this' I:mil.nga.geopackage.factory.GeoPackageCoreImpl A[IMMUTABLE_TYPE, THIS]), (r5 I:java.lang.Class\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, S:, Lcom\/j256\/ormlite\/dao\/BaseDaoImpl\<, TT;*\>;\>(, Ljava\/lang\/Class\<, TT;\>;)TS;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

