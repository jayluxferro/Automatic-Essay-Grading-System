digraph "CFG formil.nga.geopackage.factory.GeoPackageCoreImpl.getSrs(J)Lmil\/nga\/geopackage\/core\/srs\/SpatialReferenceSystem;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: INVOKE  (r0 I:mil.nga.geopackage.core.srs.SpatialReferenceSystemDao) = (r3 I:mil.nga.geopackage.factory.GeoPackageCoreImpl) mil.nga.geopackage.factory.GeoPackageCoreImpl.getSpatialReferenceSystemDao():mil.nga.geopackage.core.srs.SpatialReferenceSystemDao type: VIRTUAL A[Catch:\{ SQLException \-\> 0x0026 \}, TRY_ENTER]\l0x0004: INVOKE  (r1 I:java.lang.Long) = (r4 I:long) java.lang.Long.valueOf(long):java.lang.Long type: STATIC A[Catch:\{ SQLException \-\> 0x0026 \}]\l0x0008: INVOKE  (r0 I:mil.nga.geopackage.core.srs.SpatialReferenceSystem) = \l  (r0 I:mil.nga.geopackage.core.srs.SpatialReferenceSystemDao)\l  (r1 I:java.lang.Long)\l mil.nga.geopackage.core.srs.SpatialReferenceSystemDao.queryForId(java.lang.Long):mil.nga.geopackage.core.srs.SpatialReferenceSystem type: VIRTUAL A[Catch:\{ SQLException \-\> 0x0026 \}]\l0x000b: NOP   A[TRY_LEAVE]\l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000f \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: RETURN  (r0 I:mil.nga.geopackage.core.srs.SpatialReferenceSystem) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: NEW_INSTANCE  (r0 I:mil.nga.geopackage.GeoPackageException) =  mil.nga.geopackage.GeoPackageException \l0x0011: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0013: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0016: CONST_STR  (r2 I:java.lang.String) =  \"Spatial Reference System could not be found. SRS ID: \" \l0x0018: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x001b: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:long) java.lang.StringBuilder.append(long):java.lang.StringBuilder type: VIRTUAL \l0x001e: INVOKE  (r4 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0022: INVOKE  \l  (r0 I:mil.nga.geopackage.GeoPackageException)\l  (r4 I:java.lang.String)\l mil.nga.geopackage.GeoPackageException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0025|0x0025: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0026|0x0026: NEW_INSTANCE  (r0 I:mil.nga.geopackage.GeoPackageException) =  mil.nga.geopackage.GeoPackageException \l0x0028: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x002a: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x002d: CONST_STR  (r2 I:java.lang.String) =  \"Failed to retrieve Spatial Reference System. SRS ID: \" \l0x002f: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0032: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:long) java.lang.StringBuilder.append(long):java.lang.StringBuilder type: VIRTUAL \l0x0035: INVOKE  (r4 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0039: INVOKE  \l  (r0 I:mil.nga.geopackage.GeoPackageException)\l  (r4 I:java.lang.String)\l mil.nga.geopackage.GeoPackageException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lExcHandler: SQLException null\lSplitter:B:0:0x0000\l}"];
Node_8 [shape=record,label="{8\:\ 0x003c|0x003c: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private mil.nga.geopackage.core.srs.SpatialReferenceSystem mil.nga.geopackage.factory.GeoPackageCoreImpl.getSrs((r3 'this' I:mil.nga.geopackage.factory.GeoPackageCoreImpl A[IMMUTABLE_TYPE, THIS]), (r4 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_7;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_4 -> Node_5;
Node_6 -> Node_8;
Node_7 -> Node_6;
}

