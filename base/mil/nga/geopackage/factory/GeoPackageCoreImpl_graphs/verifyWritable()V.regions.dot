digraph "CFG formil.nga.geopackage.factory.GeoPackageCoreImpl.verifyWritable()V" {
subgraph cluster_Region_880458488 {
label = "R(1:(1:(4:2|(1:4)(1:5)|6|7))) | DECL_VAR: java.lang.String null\l";
node [shape=record,color=blue];
subgraph cluster_Region_180780946 {
label = "R(1:(4:2|(1:4)(1:5)|6|7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_748121222 {
label = "IF [B:1:0x0002] THEN: R(4:2|(1:4)(1:5)|6|7) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r4.writable == false) goto L_0x0004\l}"];
subgraph cluster_Region_663891439 {
label = "R(4:2|(1:4)(1:5)|6|7)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|java.lang.StringBuilder java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"GeoPackage file is not writable. Name: \")\lr1.append(r4.name)\l}"];
subgraph cluster_IfRegion_717551661 {
label = "IF [B:3:0x0017] THEN: R(1:4) ELSE: R(1:5)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0017|if (r4.path != null) goto L_0x0019\l}"];
subgraph cluster_Region_1584922780 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0019|java.lang.String r2 = \", Path: \" + r4.path\l}"];
}
subgraph cluster_Region_789635727 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x002d|java.lang.String r2 = \"\"\l}"];
}
}
Node_6 [shape=record,label="{6\:\ 0x002f|PHI: r2 \l  PHI: (r2v3 java.lang.String) = (r2v4 java.lang.String), (r2v6 java.lang.String) binds: [B:5:0x002d, B:4:0x0019] A[DONT_GENERATE, DONT_INLINE]\l|r1.append(r2)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0039|throw new mil.nga.geopackage.GeoPackageException(r1.toString())\l}"];
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x003a}"];
MethodNode[shape=record,label="{public void mil.nga.geopackage.factory.GeoPackageCoreImpl.verifyWritable((r4v0 'this' mil.nga.geopackage.factory.GeoPackageCoreImpl A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_8[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_0 -> Node_1;
}

