digraph "CFG formil.nga.geopackage.factory.GeoPackageCoreImpl.getTables()Ljava\/util\/List;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:mil.nga.geopackage.core.contents.ContentsDao) = (r3 I:mil.nga.geopackage.factory.GeoPackageCoreImpl) mil.nga.geopackage.factory.GeoPackageCoreImpl.getContentsDao():mil.nga.geopackage.core.contents.ContentsDao type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|SYNTHETIC\lSplitter:B:1:0x0004\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0004\l|0x0004: INVOKE  (r0 I:java.util.List) = (r0 I:mil.nga.geopackage.core.contents.ContentsDao) mil.nga.geopackage.core.contents.ContentsDao.getTables():java.util.List type: VIRTUAL A[Catch:\{ SQLException \-\> 0x0009 \}, TRY_ENTER]\l0x0007: NOP   A[TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: RETURN  (r0 I:java.util.List\<java.lang.String\>) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|ExcHandler: SQLException null\lSplitter:B:1:0x0004\l|0x0009: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|0x000a: NEW_INSTANCE  (r1 I:mil.nga.geopackage.GeoPackageException) =  mil.nga.geopackage.GeoPackageException \l0x000c: CONST_STR  (r2 I:java.lang.String) =  \"Failed to retrieve tables\" \l0x000e: INVOKE  \l  (r1 I:mil.nga.geopackage.GeoPackageException)\l  (r2 I:java.lang.String)\l  (r0 I:java.lang.Throwable)\l mil.nga.geopackage.GeoPackageException.\<init\>(java.lang.String, java.lang.Throwable):void type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|0x0011: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public java.util.List\<java.lang.String\> mil.nga.geopackage.factory.GeoPackageCoreImpl.getTables((r3 'this' I:mil.nga.geopackage.factory.GeoPackageCoreImpl A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(), Ljava\/util\/List\<, Ljava\/lang\/String;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
}

