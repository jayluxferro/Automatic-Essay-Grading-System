digraph "CFG formil.nga.geopackage.factory.GeoPackageImpl.getAttributesDao(Ljava\/lang\/String;)Lmil\/nga\/geopackage\/attributes\/AttributesDao;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|SYNTHETIC\lSplitter:B:1:0x0004\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ SQLException \-\> 0x0028 \}\lSplitter:B:1:0x0004\l|mil.nga.geopackage.core.contents.Contents r0 = (mil.nga.geopackage.core.contents.Contents) getContentsDao().queryForId(r5)     \/\/ Catch:\{ SQLException \-\> 0x0028 \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|if (r0 == null) goto L_0x0011\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c}"];
Node_5 [shape=record,label="{5\:\ 0x0010|RETURN\l|return getAttributesDao(r0)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"No Contents Table exists for table name: \")\lr1.append(r5)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0027|throw new mil.nga.geopackage.GeoPackageException(r1.toString())\l}"];
Node_8 [shape=record,label="{8\:\ 0x0028|ExcHandler: SQLException (r0v1 'e' java.sql.SQLException A[CUSTOM_DECLARE])\lSplitter:B:1:0x0004\l|java.sql.SQLException r0 = move\-exception\l}"];
Node_9 [shape=record,label="{9\:\ 0x0029|java.lang.StringBuilder r2 = new java.lang.StringBuilder()\lr2.append(\"Failed to retrieve \")\lr2.append(mil.nga.geopackage.core.contents.Contents.class.getSimpleName())\lr2.append(\" for table name: \")\lr2.append(r5)\l}"];
Node_10 [shape=record,label="{10\:\ 0x004d|throw new mil.nga.geopackage.GeoPackageException(r2.toString(), r0)\l}"];
MethodNode[shape=record,label="{public mil.nga.geopackage.attributes.AttributesDao mil.nga.geopackage.factory.GeoPackageImpl.getAttributesDao((r4v0 'this' mil.nga.geopackage.factory.GeoPackageImpl A[IMMUTABLE_TYPE, THIS]), (r5v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_2 -> Node_8;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10;
}

