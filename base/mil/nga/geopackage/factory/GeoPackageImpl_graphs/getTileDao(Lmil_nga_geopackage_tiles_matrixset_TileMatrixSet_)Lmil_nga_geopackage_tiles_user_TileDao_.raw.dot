digraph "CFG formil.nga.geopackage.factory.GeoPackageImpl.getTileDao(Lmil\/nga\/geopackage\/tiles\/matrixset\/TileMatrixSet;)Lmil\/nga\/geopackage\/tiles\/user\/TileDao;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x00a7 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|SYNTHETIC\lSplitter:B:1:0x0002\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0002\l|0x0002: INVOKE  (r0 I:mil.nga.geopackage.tiles.matrix.TileMatrixDao) = (r9 I:mil.nga.geopackage.factory.GeoPackageImpl) mil.nga.geopackage.factory.GeoPackageImpl.getTileMatrixDao():mil.nga.geopackage.tiles.matrix.TileMatrixDao type: VIRTUAL A[Catch:\{ SQLException \-\> 0x006a \}, TRY_ENTER]\l0x0006: INVOKE  (r1 I:com.j256.ormlite.stmt.QueryBuilder) = (r0 I:mil.nga.geopackage.tiles.matrix.TileMatrixDao) mil.nga.geopackage.tiles.matrix.TileMatrixDao.queryBuilder():com.j256.ormlite.stmt.QueryBuilder type: VIRTUAL A[Catch:\{ SQLException \-\> 0x006a \}]\l0x000a: INVOKE  (r2 I:com.j256.ormlite.stmt.Where) = (r1 I:com.j256.ormlite.stmt.QueryBuilder) com.j256.ormlite.stmt.QueryBuilder.where():com.j256.ormlite.stmt.Where type: VIRTUAL A[Catch:\{ SQLException \-\> 0x006a \}]\l0x000e: CONST_STR  (r3 I:java.lang.String) =  \"table_name\" A[Catch:\{ SQLException \-\> 0x006a \}]\l0x0010: INVOKE  (r4 I:java.lang.String) = (r10 I:mil.nga.geopackage.tiles.matrixset.TileMatrixSet) mil.nga.geopackage.tiles.matrixset.TileMatrixSet.getTableName():java.lang.String type: VIRTUAL A[Catch:\{ SQLException \-\> 0x006a \}]\l0x0014: INVOKE  \l  (r2 I:com.j256.ormlite.stmt.Where)\l  (r3 I:java.lang.String)\l  (r4 I:java.lang.Object)\l com.j256.ormlite.stmt.Where.eq(java.lang.String, java.lang.Object):com.j256.ormlite.stmt.Where type: VIRTUAL A[Catch:\{ SQLException \-\> 0x006a \}]\l0x0017: CONST_STR  (r2 I:java.lang.String) =  \"zoom_level\" A[Catch:\{ SQLException \-\> 0x006a \}]\l0x0019: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ SQLException \-\> 0x006a \}]\l0x001a: INVOKE  \l  (r1 I:com.j256.ormlite.stmt.QueryBuilder)\l  (r2 I:java.lang.String)\l  (r3 I:boolean)\l com.j256.ormlite.stmt.QueryBuilder.orderBy(java.lang.String, boolean):com.j256.ormlite.stmt.QueryBuilder type: VIRTUAL A[Catch:\{ SQLException \-\> 0x006a \}]\l0x001d: CONST_STR  (r2 I:java.lang.String) =  \"pixel_x_size\" A[Catch:\{ SQLException \-\> 0x006a \}]\l0x001f: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ SQLException \-\> 0x006a \}]\l0x0020: INVOKE  \l  (r1 I:com.j256.ormlite.stmt.QueryBuilder)\l  (r2 I:java.lang.String)\l  (r3 I:boolean)\l com.j256.ormlite.stmt.QueryBuilder.orderBy(java.lang.String, boolean):com.j256.ormlite.stmt.QueryBuilder type: VIRTUAL A[Catch:\{ SQLException \-\> 0x006a \}]\l0x0023: CONST_STR  (r2 I:java.lang.String) =  \"pixel_y_size\" A[Catch:\{ SQLException \-\> 0x006a \}]\l0x0025: INVOKE  \l  (r1 I:com.j256.ormlite.stmt.QueryBuilder)\l  (r2 I:java.lang.String)\l  (r3 I:boolean)\l com.j256.ormlite.stmt.QueryBuilder.orderBy(java.lang.String, boolean):com.j256.ormlite.stmt.QueryBuilder type: VIRTUAL A[Catch:\{ SQLException \-\> 0x006a \}]\l0x0028: INVOKE  (r1 I:com.j256.ormlite.stmt.PreparedQuery) = (r1 I:com.j256.ormlite.stmt.QueryBuilder) com.j256.ormlite.stmt.QueryBuilder.prepare():com.j256.ormlite.stmt.PreparedQuery type: VIRTUAL A[Catch:\{ SQLException \-\> 0x006a \}]\l0x002c: INVOKE  (r7 I:java.util.List) = \l  (r0 I:mil.nga.geopackage.tiles.matrix.TileMatrixDao)\l  (r1 I:com.j256.ormlite.stmt.PreparedQuery)\l mil.nga.geopackage.tiles.matrix.TileMatrixDao.query(com.j256.ormlite.stmt.PreparedQuery):java.util.List type: VIRTUAL A[Catch:\{ SQLException \-\> 0x006a \}]\l0x002f: NOP   A[TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0030|0x0030: NEW_INSTANCE  (r0 I:mil.nga.geopackage.tiles.user.TileTableReader) =  mil.nga.geopackage.tiles.user.TileTableReader \l0x0032: INVOKE  (r1 I:java.lang.String) = (r10 I:mil.nga.geopackage.tiles.matrixset.TileMatrixSet) mil.nga.geopackage.tiles.matrixset.TileMatrixSet.getTableName():java.lang.String type: VIRTUAL \l0x0036: INVOKE  \l  (r0 I:mil.nga.geopackage.tiles.user.TileTableReader)\l  (r1 I:java.lang.String)\l mil.nga.geopackage.tiles.user.TileTableReader.\<init\>(java.lang.String):void type: DIRECT \l0x0039: NEW_INSTANCE  (r1 I:mil.nga.geopackage.tiles.user.TileWrapperConnection) =  mil.nga.geopackage.tiles.user.TileWrapperConnection \l0x003b: IGET  (r2 I:mil.nga.geopackage.db.GeoPackageConnection) = (r9 I:mil.nga.geopackage.factory.GeoPackageImpl) mil.nga.geopackage.factory.GeoPackageImpl.database mil.nga.geopackage.db.GeoPackageConnection \l0x003d: INVOKE  \l  (r1 I:mil.nga.geopackage.tiles.user.TileWrapperConnection)\l  (r2 I:mil.nga.geopackage.db.GeoPackageConnection)\l mil.nga.geopackage.tiles.user.TileWrapperConnection.\<init\>(mil.nga.geopackage.db.GeoPackageConnection):void type: DIRECT \l0x0040: INVOKE  (r0 I:mil.nga.geopackage.user.UserTable) = \l  (r0 I:mil.nga.geopackage.tiles.user.TileTableReader)\l  (r1 I:mil.nga.geopackage.user.UserCoreConnection)\l mil.nga.geopackage.tiles.user.TileTableReader.readTable(mil.nga.geopackage.user.UserCoreConnection):mil.nga.geopackage.user.UserTable type: VIRTUAL \l0x0044: CHECK_CAST  (r0 I:mil.nga.geopackage.tiles.user.TileTable) = (mil.nga.geopackage.tiles.user.TileTable) (r0 I:?[OBJECT, ARRAY]) \l0x0046: NEW_INSTANCE  (r5 I:mil.nga.geopackage.tiles.user.TileConnection) =  mil.nga.geopackage.tiles.user.TileConnection \l0x0048: IGET  (r1 I:mil.nga.geopackage.db.GeoPackageConnection) = (r9 I:mil.nga.geopackage.factory.GeoPackageImpl) mil.nga.geopackage.factory.GeoPackageImpl.database mil.nga.geopackage.db.GeoPackageConnection \l0x004a: INVOKE  \l  (r5 I:mil.nga.geopackage.tiles.user.TileConnection)\l  (r1 I:mil.nga.geopackage.db.GeoPackageConnection)\l mil.nga.geopackage.tiles.user.TileConnection.\<init\>(mil.nga.geopackage.db.GeoPackageConnection):void type: DIRECT \l0x004d: NEW_INSTANCE  (r1 I:mil.nga.geopackage.tiles.user.TileDao) =  mil.nga.geopackage.tiles.user.TileDao \l0x004f: INVOKE  (r3 I:java.lang.String) = (r9 I:mil.nga.geopackage.factory.GeoPackageImpl) mil.nga.geopackage.factory.GeoPackageImpl.getName():java.lang.String type: VIRTUAL \l0x0053: IGET  (r4 I:mil.nga.geopackage.db.GeoPackageConnection) = (r9 I:mil.nga.geopackage.factory.GeoPackageImpl) mil.nga.geopackage.factory.GeoPackageImpl.database mil.nga.geopackage.db.GeoPackageConnection \l0x0055: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l0x0056: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x0057: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0058: INVOKE  \l  (r2 I:mil.nga.geopackage.tiles.user.TileDao)\l  (r3 I:java.lang.String)\l  (r4 I:mil.nga.geopackage.db.GeoPackageConnection)\l  (r5 I:mil.nga.geopackage.tiles.user.TileConnection)\l  (r6 I:mil.nga.geopackage.tiles.matrixset.TileMatrixSet)\l  (r7 I:java.util.List)\l  (r8 I:mil.nga.geopackage.tiles.user.TileTable)\l mil.nga.geopackage.tiles.user.TileDao.\<init\>(java.lang.String, mil.nga.geopackage.db.GeoPackageConnection, mil.nga.geopackage.tiles.user.TileConnection, mil.nga.geopackage.tiles.matrixset.TileMatrixSet, java.util.List, mil.nga.geopackage.tiles.user.TileTable):void type: DIRECT \l0x005b: IGET  (r2 I:mil.nga.geopackage.factory.GeoPackageCursorFactory) = (r9 I:mil.nga.geopackage.factory.GeoPackageImpl) mil.nga.geopackage.factory.GeoPackageImpl.cursorFactory mil.nga.geopackage.factory.GeoPackageCursorFactory \l0x005d: INVOKE  (r10 I:java.lang.String) = (r10 I:mil.nga.geopackage.tiles.matrixset.TileMatrixSet) mil.nga.geopackage.tiles.matrixset.TileMatrixSet.getTableName():java.lang.String type: VIRTUAL \l0x0061: NEW_INSTANCE  (r3 I:mil.nga.geopackage.factory.GeoPackageImpl$2) =  mil.nga.geopackage.factory.GeoPackageImpl$2 \l0x0063: INVOKE  \l  (r3 I:mil.nga.geopackage.factory.GeoPackageImpl$2)\l  (r9 I:mil.nga.geopackage.factory.GeoPackageImpl)\l  (r0 I:mil.nga.geopackage.tiles.user.TileTable)\l mil.nga.geopackage.factory.GeoPackageImpl.2.\<init\>(mil.nga.geopackage.factory.GeoPackageImpl, mil.nga.geopackage.tiles.user.TileTable):void type: DIRECT \l0x0066: INVOKE  \l  (r2 I:mil.nga.geopackage.factory.GeoPackageCursorFactory)\l  (r10 I:java.lang.String)\l  (r3 I:mil.nga.geopackage.factory.GeoPackageCursorWrapper)\l mil.nga.geopackage.factory.GeoPackageCursorFactory.registerTable(java.lang.String, mil.nga.geopackage.factory.GeoPackageCursorWrapper):void type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0069|0x0069: RETURN  (r1 I:mil.nga.geopackage.tiles.user.TileDao) \l}"];
Node_5 [shape=record,label="{5\:\ 0x006a|ExcHandler: SQLException null\lSplitter:B:1:0x0002\l|0x006a: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_6 [shape=record,label="{6\:\ 0x006b|0x006b: NEW_INSTANCE  (r1 I:mil.nga.geopackage.GeoPackageException) =  mil.nga.geopackage.GeoPackageException \l0x006d: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x006f: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0072: CONST_STR  (r3 I:java.lang.String) =  \"Failed to retrieve \" \l0x0074: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0077: CONST_CLASS  (r3 I:java.lang.Class\<mil.nga.geopackage.tiles.user.TileDao\>) =  mil.nga.geopackage.tiles.user.TileDao.class \l0x0079: INVOKE  (r3 I:java.lang.String) = (r3 I:java.lang.Class) java.lang.Class.getSimpleName():java.lang.String type: VIRTUAL \l0x007d: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0080: CONST_STR  (r3 I:java.lang.String) =  \" for table name: \" \l0x0082: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0085: INVOKE  (r10 I:java.lang.String) = (r10 I:mil.nga.geopackage.tiles.matrixset.TileMatrixSet) mil.nga.geopackage.tiles.matrixset.TileMatrixSet.getTableName():java.lang.String type: VIRTUAL \l0x0089: INVOKE  (r2 I:java.lang.StringBuilder), (r10 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x008c: CONST_STR  (r10 I:java.lang.String) =  \". Exception retrieving \" \l0x008e: INVOKE  (r2 I:java.lang.StringBuilder), (r10 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0091: CONST_CLASS  (r10 I:java.lang.Class\<mil.nga.geopackage.tiles.matrix.TileMatrix\>) =  mil.nga.geopackage.tiles.matrix.TileMatrix.class \l0x0093: INVOKE  (r10 I:java.lang.String) = (r10 I:java.lang.Class) java.lang.Class.getSimpleName():java.lang.String type: VIRTUAL \l0x0097: INVOKE  (r2 I:java.lang.StringBuilder), (r10 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x009a: CONST_STR  (r10 I:java.lang.String) =  \" collection.\" \l0x009c: INVOKE  (r2 I:java.lang.StringBuilder), (r10 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x009f: INVOKE  (r10 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x00a3: INVOKE  \l  (r1 I:mil.nga.geopackage.GeoPackageException)\l  (r10 I:java.lang.String)\l  (r0 I:java.lang.Throwable)\l mil.nga.geopackage.GeoPackageException.\<init\>(java.lang.String, java.lang.Throwable):void type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x00a6|0x00a6: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_8 [shape=record,label="{8\:\ 0x00a7|0x00a7: NEW_INSTANCE  (r10 I:mil.nga.geopackage.GeoPackageException) =  mil.nga.geopackage.GeoPackageException \l0x00a9: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x00ab: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x00ae: CONST_STR  (r1 I:java.lang.String) =  \"Non null \" \l0x00b0: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00b3: CONST_CLASS  (r1 I:java.lang.Class\<mil.nga.geopackage.tiles.matrixset.TileMatrixSet\>) =  mil.nga.geopackage.tiles.matrixset.TileMatrixSet.class \l0x00b5: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.Class) java.lang.Class.getSimpleName():java.lang.String type: VIRTUAL \l0x00b9: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00bc: CONST_STR  (r1 I:java.lang.String) =  \" is required to create \" \l0x00be: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00c1: CONST_CLASS  (r1 I:java.lang.Class\<mil.nga.geopackage.tiles.user.TileDao\>) =  mil.nga.geopackage.tiles.user.TileDao.class \l0x00c3: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.Class) java.lang.Class.getSimpleName():java.lang.String type: VIRTUAL \l0x00c7: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00ca: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x00ce: INVOKE  \l  (r10 I:mil.nga.geopackage.GeoPackageException)\l  (r0 I:java.lang.String)\l mil.nga.geopackage.GeoPackageException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x00d1|0x00d1: THROW  (r10 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public mil.nga.geopackage.tiles.user.TileDao mil.nga.geopackage.factory.GeoPackageImpl.getTileDao((r9 'this' I:mil.nga.geopackage.factory.GeoPackageImpl A[IMMUTABLE_TYPE, THIS]), (r10 I:mil.nga.geopackage.tiles.matrixset.TileMatrixSet A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_8;
Node_1 -> Node_2;
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_8 -> Node_9;
}

