digraph "CFG formil.nga.geopackage.factory.GeoPackageCursorFactory.registerTable(Ljava\/lang\/String;Lmil\/nga\/geopackage\/factory\/GeoPackageCursorWrapper;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|mil.nga.geopackage.factory.GeoPackageCursorWrapper r0 = r5.tableCursors.get(r6)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|if (r0 != null) goto L_0x0038\l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|r5.tableCursors.put(r6, r7)\ljava.lang.String r0 = mil.nga.geopackage.p021db.CoreSQLUtils.quoteWrap(r6)\lr5.tableCursors.put(r0, r7)\lint r2 = r6.indexOf(32)\l}"];
Node_3 [shape=record,label="{3\:\ 0x001e|if (r2 \<= 0) goto L_?\l}"];
Node_4 [shape=record,label="{4\:\ 0x0020|r5.tableCursors.put(r6.substring(0, r2), r7)\lr5.tableCursors.put(r0.substring(0, r0.indexOf(32)), r7)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0038}"];
Node_6 [shape=record,label="{6\:\ 0x0044|if (r0.getClass().equals(r7.getClass()) == false) goto L_0x0047\l}"];
Node_7 [shape=record,label="{7\:\ 0x0047|java.lang.StringBuilder r2 = new java.lang.StringBuilder()\lr2.append(\"Table '\")\lr2.append(r6)\lr2.append(\"' was already registered for cursor wrapper '\")\lr2.append(r0.getClass().getSimpleName())\lr2.append(\"' and can not be registered for '\")\lr2.append(r7.getClass().getSimpleName())\lr2.append(\"'\")\l}"];
Node_8 [shape=record,label="{8\:\ 0x0082|throw new mil.nga.geopackage.GeoPackageException(r2.toString())\l}"];
Node_9 [shape=record,label="{9\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void mil.nga.geopackage.factory.GeoPackageCursorFactory.registerTable((r5v0 'this' mil.nga.geopackage.factory.GeoPackageCursorFactory A[IMMUTABLE_TYPE, THIS]), (r6v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 mil.nga.geopackage.factory.GeoPackageCursorWrapper A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_10;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_11[style=dashed];
Node_7 -> Node_8;
}

