digraph "CFG formil.nga.geopackage.factory.GeoPackageManagerImpl.importGeoPackage(Ljava\/lang\/String;Ljava\/io\/File;Z)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r5 I:java.io.File) mil.nga.geopackage.validate.GeoPackageValidate.validateGeoPackageExtension(java.io.File):void type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0006 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: INVOKE  (r4 I:java.lang.String) = (r5 I:java.io.File) mil.nga.geopackage.io.GeoPackageIOUtils.getFileNameWithoutExtension(java.io.File):java.lang.String type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|SYNTHETIC\lSplitter:B:4:0x000a\l}"];
Node_5 [shape=record,label="{5\:\ ?|Splitter:B:4:0x000a\l|0x000a: NEW_INSTANCE  (r0 I:java.io.FileInputStream) =  java.io.FileInputStream A[Catch:\{ FileNotFoundException \-\> 0x0015 \}, TRY_ENTER]\l0x000c: INVOKE  (r0 I:java.io.FileInputStream), (r5 I:java.io.File) java.io.FileInputStream.\<init\>(java.io.File):void type: DIRECT A[Catch:\{ FileNotFoundException \-\> 0x0015 \}]\l0x000f: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ FileNotFoundException \-\> 0x0015 \}]\l0x0010: INVOKE  (r6 I:boolean) = \l  (r3 I:mil.nga.geopackage.factory.GeoPackageManagerImpl)\l  (r4 I:java.lang.String)\l  (r6 I:boolean)\l  (r0 I:java.io.InputStream)\l  (r1 I:mil.nga.geopackage.io.GeoPackageProgress)\l mil.nga.geopackage.factory.GeoPackageManagerImpl.importGeoPackage(java.lang.String, boolean, java.io.InputStream, mil.nga.geopackage.io.GeoPackageProgress):boolean type: DIRECT A[Catch:\{ FileNotFoundException \-\> 0x0015 \}]\l0x0013: NOP   A[TRY_LEAVE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|0x0014: RETURN  (r6 I:boolean) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|ExcHandler: FileNotFoundException null\lSplitter:B:4:0x000a\l|0x0015: MOVE_EXCEPTION  (r6 I:?[OBJECT]) =  \l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|0x0016: NEW_INSTANCE  (r0 I:mil.nga.geopackage.GeoPackageException) =  mil.nga.geopackage.GeoPackageException \l0x0018: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x001a: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x001d: CONST_STR  (r2 I:java.lang.String) =  \"Failed read or write GeoPackage file '\" \l0x001f: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0022: INVOKE  (r1 I:java.lang.StringBuilder), (r5 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0025: CONST_STR  (r5 I:java.lang.String) =  \"' to database: '\" \l0x0027: INVOKE  (r1 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x002a: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x002d: CONST_STR  (r4 I:java.lang.String) =  \"'\" \l0x002f: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0032: INVOKE  (r4 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0036: INVOKE  \l  (r0 I:mil.nga.geopackage.GeoPackageException)\l  (r4 I:java.lang.String)\l  (r6 I:java.lang.Throwable)\l mil.nga.geopackage.GeoPackageException.\<init\>(java.lang.String, java.lang.Throwable):void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x0039|0x0039: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public boolean mil.nga.geopackage.factory.GeoPackageManagerImpl.importGeoPackage((r3 'this' I:mil.nga.geopackage.factory.GeoPackageManagerImpl A[IMMUTABLE_TYPE, THIS]), (r4 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_3;
Node_1 -> Node_4[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9;
}

