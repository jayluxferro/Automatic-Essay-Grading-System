digraph "CFG formil.nga.geopackage.factory.GeoPackageManagerImpl.validateDatabase(Landroid\/database\/sqlite\/SQLiteDatabase;ZZZZ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r2 == false) goto L_0x0008\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|SYNTHETIC\lSplitter:B:1:0x0002\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ Exception \-\> 0x0006 \}\lSplitter:B:1:0x0002\l|validateDatabaseHeader(r1)     \/\/ Catch:\{ Exception \-\> 0x0006 \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|Catch:\{ Exception \-\> 0x0006 \}\lExcHandler: Exception (r2v1 'e' java.lang.Exception A[CUSTOM_DECLARE, Catch:\{ Exception \-\> 0x0006 \}])\lSplitter:B:1:0x0002\l|java.lang.Exception r2 = move\-exception     \/\/ Catch:\{ Exception \-\> 0x0006 \}\l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|Catch:\{ Exception \-\> 0x0006 \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x0008|Catch:\{ Exception \-\> 0x0006 \}\l|if (r3 == false) goto L_0x0014     \/\/ Catch:\{ Exception \-\> 0x0006 \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x000a|Catch:\{ Exception \-\> 0x0006 \}\l|validateDatabaseIntegrity(r1)     \/\/ Catch:\{ Exception \-\> 0x0006 \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x000e|if (r5 == false) goto L_0x0013\l}"];
Node_8 [shape=record,label="{8\:\ 0x0010|r1.close()\l}"];
Node_9 [shape=record,label="{9\:\ 0x0013|throw r2\l}"];
Node_10 [shape=record,label="{10\:\ 0x0014|if (r4 == false) goto L_?\l}"];
Node_11 [shape=record,label="{11\:\ 0x0016|r1.close()\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private void mil.nga.geopackage.factory.GeoPackageManagerImpl.validateDatabase((r0v0 'this' mil.nga.geopackage.factory.GeoPackageManagerImpl A[IMMUTABLE_TYPE, THIS]), (r1v0 android.database.sqlite.SQLiteDatabase A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_5;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_2 -> Node_5;
Node_3 -> Node_4;
Node_4 -> Node_7;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_10;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
}

