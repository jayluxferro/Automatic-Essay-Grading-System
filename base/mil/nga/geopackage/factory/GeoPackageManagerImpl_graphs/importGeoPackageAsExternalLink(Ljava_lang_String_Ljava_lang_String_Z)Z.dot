digraph "CFG formil.nga.geopackage.factory.GeoPackageManagerImpl.importGeoPackageAsExternalLink(Ljava\/lang\/String;Ljava\/lang\/String;Z)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (exists(r5) == false) goto L_0x003d\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|if (r6 == false) goto L_0x0026\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008}"];
Node_4 [shape=record,label="{4\:\ 0x000c|if (delete(r5) == false) goto L_0x000f\l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|java.lang.StringBuilder r6 = new java.lang.StringBuilder()\lr6.append(\"Failed to delete existing database: \")\lr6.append(r5)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0025|throw new mil.nga.geopackage.GeoPackageException(r6.toString())\l}"];
Node_7 [shape=record,label="{7\:\ 0x0026|java.lang.StringBuilder r6 = new java.lang.StringBuilder()\lr6.append(\"GeoPackage database already exists: \")\lr6.append(r5)\l}"];
Node_8 [shape=record,label="{8\:\ 0x003c|throw new mil.nga.geopackage.GeoPackageException(r6.toString())\l}"];
Node_9 [shape=record,label="{9\:\ 0x003d}"];
Node_10 [shape=record,label="{10\:\ 0x0040|SYNTHETIC\lSplitter:B:10:0x0040\l}"];
Node_11 [shape=record,label="{11\:\ ?|Catch:\{ SQLiteException \-\> 0x00a7 \}\lSplitter:B:10:0x0040\l|validateDatabaseAndClose(android.database.sqlite.SQLiteDatabase.openDatabase(r4, (android.database.sqlite.SQLiteDatabase.CursorFactory) null, 17), r3.importHeaderValidation, r3.importIntegrityValidation)     \/\/ Catch:\{ SQLiteException \-\> 0x00a7 \}\l}"];
Node_12 [shape=record,label="{12\:\ 0x004b|mil.nga.geopackage.db.metadata.GeoPackageMetadataDb r6 = new mil.nga.geopackage.p021db.metadata.GeoPackageMetadataDb(r3.context)\lr6.open()\l}"];
Node_13 [shape=record,label="{13\:\ 0x0055|SYNTHETIC\lSplitter:B:13:0x0055\l}"];
Node_14 [shape=record,label="{14\:\ ?|Catch:\{ RuntimeException \-\> 0x007f, all \-\> 0x007d, all \-\> 0x00a2 \}\lSplitter:B:13:0x0055\l|mil.nga.geopackage.db.metadata.GeoPackageMetadataDataSource r0 = new mil.nga.geopackage.p021db.metadata.GeoPackageMetadataDataSource(r6)     \/\/ Catch:\{ RuntimeException \-\> 0x007f, all \-\> 0x007d, all \-\> 0x00a2 \}\lmil.nga.geopackage.db.metadata.GeoPackageMetadata r1 = new mil.nga.geopackage.p021db.metadata.GeoPackageMetadata()     \/\/ Catch:\{ RuntimeException \-\> 0x007f, all \-\> 0x007d, all \-\> 0x00a2 \}\lr1.setName(r5)     \/\/ Catch:\{ RuntimeException \-\> 0x007f, all \-\> 0x007d, all \-\> 0x00a2 \}\lr1.setExternalPath(r4)     \/\/ Catch:\{ RuntimeException \-\> 0x007f, all \-\> 0x007d, all \-\> 0x00a2 \}\lr0.create(r1)     \/\/ Catch:\{ RuntimeException \-\> 0x007f, all \-\> 0x007d, all \-\> 0x00a2 \}\lmil.nga.geopackage.GeoPackage r4 = open(r5, false)     \/\/ Catch:\{ RuntimeException \-\> 0x007f, all \-\> 0x007d, all \-\> 0x00a2 \}\l}"];
Node_15 [shape=record,label="{15\:\ 0x006d|if (r4 == null) goto L_0x0088\l}"];
Node_16 [shape=record,label="{16\:\ 0x006f|SYNTHETIC\lSplitter:B:16:0x006f\l}"];
Node_17 [shape=record,label="{17\:\ ?|Catch:\{ RuntimeException \-\> 0x007f, all \-\> 0x007d, all \-\> 0x00a2 \}\lSplitter:B:16:0x006f\l|mil.nga.geopackage.validate.GeoPackageValidate.validateMinimumTables(r4)     \/\/ Catch:\{ RuntimeException \-\> 0x007f, all \-\> 0x007d, all \-\> 0x00a2 \}\l}"];
Node_18 [shape=record,label="{18\:\ 0x0072|SYNTHETIC\lSplitter:B:18:0x0072\l}"];
Node_19 [shape=record,label="{19\:\ ?|Catch:\{ RuntimeException \-\> 0x007f, all \-\> 0x007d, all \-\> 0x00a2 \}\lSplitter:B:18:0x0072\l|r4.close()     \/\/ Catch:\{ RuntimeException \-\> 0x007f, all \-\> 0x007d, all \-\> 0x00a2 \}\l}"];
Node_20 [shape=record,label="{20\:\ 0x0075|r6.close()\l}"];
Node_21 [shape=record,label="{21\:\ 0x007c|RETURN\l|return exists(r5)\l}"];
Node_22 [shape=record,label="{22\:\ 0x007d|ExcHandler: all (r5v3 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:24:0x0080\l|java.lang.Throwable r5 = move\-exception\l}"];
Node_23 [shape=record,label="{23\:\ 0x007f|ExcHandler: RuntimeException (r1v4 'e' java.lang.RuntimeException A[CUSTOM_DECLARE])\lSplitter:B:16:0x006f\l|java.lang.RuntimeException r1 = move\-exception\l}"];
Node_24 [shape=record,label="{24\:\ 0x0080|SYNTHETIC\lSplitter:B:24:0x0080\l}"];
Node_25 [shape=record,label="{25\:\ ?|Catch:\{ RuntimeException \-\> 0x007f, all \-\> 0x007d, all \-\> 0x00a2 \}\lSplitter:B:24:0x0080\l|r0.delete(r5)     \/\/ Catch:\{ RuntimeException \-\> 0x007f, all \-\> 0x007d, all \-\> 0x00a2 \}\l}"];
Node_26 [shape=record,label="{26\:\ 0x0083|Catch:\{ RuntimeException \-\> 0x007f, all \-\> 0x007d, all \-\> 0x00a2 \}\l|throw r1     \/\/ Catch:\{ RuntimeException \-\> 0x007f, all \-\> 0x007d, all \-\> 0x00a2 \}\l}"];
Node_27 [shape=record,label="{27\:\ 0x0084|SYNTHETIC\lSplitter:B:27:0x0084\l}"];
Node_28 [shape=record,label="{28\:\ ?|Catch:\{ RuntimeException \-\> 0x007f, all \-\> 0x007d, all \-\> 0x00a2 \}\lSplitter:B:27:0x0084\l|r4.close()     \/\/ Catch:\{ RuntimeException \-\> 0x007f, all \-\> 0x007d, all \-\> 0x00a2 \}\l}"];
Node_29 [shape=record,label="{29\:\ 0x0087|Catch:\{ RuntimeException \-\> 0x007f, all \-\> 0x007d, all \-\> 0x00a2 \}\l|throw r5     \/\/ Catch:\{ RuntimeException \-\> 0x007f, all \-\> 0x007d, all \-\> 0x00a2 \}\l}"];
Node_30 [shape=record,label="{30\:\ 0x0088|Catch:\{ RuntimeException \-\> 0x007f, all \-\> 0x007d, all \-\> 0x00a2 \}\l|r0.delete(r5)     \/\/ Catch:\{ RuntimeException \-\> 0x007f, all \-\> 0x007d, all \-\> 0x00a2 \}\ljava.lang.StringBuilder r0 = new java.lang.StringBuilder()     \/\/ Catch:\{ RuntimeException \-\> 0x007f, all \-\> 0x007d, all \-\> 0x00a2 \}\lr0.append(\"Unable to open GeoPackage database. Database: \")     \/\/ Catch:\{ RuntimeException \-\> 0x007f, all \-\> 0x007d, all \-\> 0x00a2 \}\lr0.append(r5)     \/\/ Catch:\{ RuntimeException \-\> 0x007f, all \-\> 0x007d, all \-\> 0x00a2 \}\l}"];
Node_31 [shape=record,label="{31\:\ 0x00a1|Catch:\{ RuntimeException \-\> 0x007f, all \-\> 0x007d, all \-\> 0x00a2 \}\l|throw new mil.nga.geopackage.GeoPackageException(r0.toString())     \/\/ Catch:\{ RuntimeException \-\> 0x007f, all \-\> 0x007d, all \-\> 0x00a2 \}\l}"];
Node_32 [shape=record,label="{32\:\ 0x00a2|ExcHandler: all (r4v2 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:13:0x0055\l|java.lang.Throwable r4 = move\-exception\l}"];
Node_33 [shape=record,label="{33\:\ 0x00a3|r6.close()\l}"];
Node_34 [shape=record,label="{34\:\ 0x00a6|throw r4\l}"];
Node_35 [shape=record,label="{35\:\ 0x00a7|ExcHandler: SQLiteException (r6v2 'e' android.database.sqlite.SQLiteException A[CUSTOM_DECLARE])\lSplitter:B:10:0x0040\l|android.database.sqlite.SQLiteException r6 = move\-exception\l}"];
Node_36 [shape=record,label="{36\:\ 0x00a8|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Failed to import GeoPackage database as external link: \")\lr1.append(r5)\lr1.append(\", Path: \")\lr1.append(r4)\l}"];
Node_37 [shape=record,label="{37\:\ 0x00c6|throw new mil.nga.geopackage.GeoPackageException(r1.toString(), r6)\l}"];
MethodNode[shape=record,label="{public boolean mil.nga.geopackage.factory.GeoPackageManagerImpl.importGeoPackageAsExternalLink((r3v0 'this' mil.nga.geopackage.factory.GeoPackageManagerImpl A[IMMUTABLE_TYPE, THIS]), (r4v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_9;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_9[style=dashed];
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_35;
Node_11 -> Node_12;
Node_11 -> Node_35;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_32;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_30;
Node_16 -> Node_17;
Node_16 -> Node_23;
Node_17 -> Node_18;
Node_17 -> Node_23;
Node_18 -> Node_19;
Node_18 -> Node_32;
Node_19 -> Node_20;
Node_19 -> Node_32;
Node_20 -> Node_21;
Node_22 -> Node_27;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_24 -> Node_22;
Node_25 -> Node_26;
Node_27 -> Node_28;
Node_27 -> Node_32;
Node_28 -> Node_29;
Node_30 -> Node_31;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_35 -> Node_36;
Node_36 -> Node_37;
}

