digraph "CFG formil.nga.geopackage.factory.GeoPackageManagerImpl.getFile(Ljava\/lang\/String;)Ljava\/io\/File;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:mil.nga.geopackage.db.metadata.GeoPackageMetadata) = \l  (r3 I:mil.nga.geopackage.factory.GeoPackageManagerImpl)\l  (r4 I:java.lang.String)\l mil.nga.geopackage.factory.GeoPackageManagerImpl.getGeoPackageMetadata(java.lang.String):mil.nga.geopackage.db.metadata.GeoPackageMetadata type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0016 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: INVOKE  (r1 I:boolean) = (r0 I:mil.nga.geopackage.db.metadata.GeoPackageMetadata) mil.nga.geopackage.db.metadata.GeoPackageMetadata.isExternal():boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0016 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: NEW_INSTANCE  (r1 I:java.io.File) =  java.io.File \l0x000e: INVOKE  (r0 I:java.lang.String) = (r0 I:mil.nga.geopackage.db.metadata.GeoPackageMetadata) mil.nga.geopackage.db.metadata.GeoPackageMetadata.getExternalPath():java.lang.String type: VIRTUAL \l0x0012: INVOKE  (r1 I:java.io.File), (r0 I:java.lang.String) java.io.File.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|0x0016: IGET  (r0 I:android.content.Context) = (r3 I:mil.nga.geopackage.factory.GeoPackageManagerImpl) mil.nga.geopackage.factory.GeoPackageManagerImpl.context android.content.Context \l0x0018: INVOKE  (r1 I:java.io.File) = (r0 I:android.content.Context), (r4 I:java.lang.String) android.content.Context.getDatabasePath(java.lang.String):java.io.File type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|0x001c: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0025 \l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|0x001e: INVOKE  (r0 I:boolean) = (r1 I:java.io.File) java.io.File.exists():boolean type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0022|0x0022: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0025 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0024|0x0024: RETURN  (r1 I:java.io.File) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0025|0x0025: NEW_INSTANCE  (r0 I:mil.nga.geopackage.GeoPackageException) =  mil.nga.geopackage.GeoPackageException \l0x0027: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0029: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x002c: CONST_STR  (r2 I:java.lang.String) =  \"GeoPackage does not exist: \" \l0x002e: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0031: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0034: INVOKE  (r4 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0038: INVOKE  \l  (r0 I:mil.nga.geopackage.GeoPackageException)\l  (r4 I:java.lang.String)\l mil.nga.geopackage.GeoPackageException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_11 [shape=record,label="{11\:\ 0x003b|0x003b: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public java.io.File mil.nga.geopackage.factory.GeoPackageManagerImpl.getFile((r3 'this' I:mil.nga.geopackage.factory.GeoPackageManagerImpl A[IMMUTABLE_TYPE, THIS]), (r4 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_10 -> Node_11;
}

