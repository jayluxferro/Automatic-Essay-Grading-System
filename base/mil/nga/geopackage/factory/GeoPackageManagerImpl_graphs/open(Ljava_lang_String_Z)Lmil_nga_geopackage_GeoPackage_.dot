digraph "CFG formil.nga.geopackage.factory.GeoPackageManagerImpl.open(Ljava\/lang\/String;Z)Lmil\/nga\/geopackage\/GeoPackage;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r1 = null\l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|if (exists(r10) == false) goto L_0x0077\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|mil.nga.geopackage.factory.GeoPackageCursorFactory r6 = new mil.nga.geopackage.factory.GeoPackageCursorFactory()\lmil.nga.geopackage.db.metadata.GeoPackageMetadata r0 = getGeoPackageMetadata(r10)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|if (r0 == null) goto L_0x0050\l}"];
Node_4 [shape=record,label="{4\:\ 0x0013}"];
Node_5 [shape=record,label="{5\:\ 0x0017|if (r0.isExternal() == false) goto L_0x0050\l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|java.lang.String r0 = r0.getExternalPath()\l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|if (r11 == false) goto L_0x0042\l}"];
Node_8 [shape=record,label="{8\:\ 0x001f}"];
Node_9 [shape=record,label="{9\:\ 0x0021|SYNTHETIC\lSplitter:B:9:0x0021\l}"];
Node_10 [shape=record,label="{10\:\ ?|Catch:\{ Exception \-\> 0x0027 \}\lSplitter:B:9:0x0021\l}"];
Node_11 [shape=record,label="{11\:\ 0x0025|r1 = android.database.sqlite.SQLiteDatabase.openDatabase(r0, r6, 16)     \/\/ Catch:\{ Exception \-\> 0x0027 \}\l}"];
Node_12 [shape=record,label="{12\:\ 0x0027|ExcHandler: Exception (r3v3 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:9:0x0021\l|java.lang.Exception r3 = move\-exception\l}"];
Node_13 [shape=record,label="{13\:\ 0x0028|java.lang.String r4 = mil.nga.geopackage.factory.GeoPackageManagerImpl.class.getSimpleName()\ljava.lang.StringBuilder r5 = new java.lang.StringBuilder()\lr5.append(\"Failed to open database as writable: \")\lr5.append(r10)\landroid.util.Log.e(r4, r5.toString(), r3)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0042|PHI: r1 \l  PHI: (r1v3 android.database.sqlite.SQLiteDatabase) = (r1v0 android.database.sqlite.SQLiteDatabase), (r1v0 android.database.sqlite.SQLiteDatabase), (r1v5 android.database.sqlite.SQLiteDatabase) binds: [B:7:0x001d, B:13:0x0028, B:11:0x0025] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 != null) goto L_0x004d\l}"];
Node_15 [shape=record,label="{15\:\ 0x0044|android.database.sqlite.SQLiteDatabase r1 = android.database.sqlite.SQLiteDatabase.openDatabase(r0, r6, 17)\lr4 = r0\lr8 = false\l}"];
Node_16 [shape=record,label="{16\:\ 0x004d|r8 = r11\lr4 = r0\l}"];
Node_17 [shape=record,label="{17\:\ 0x0050|r8 = r11\lr4 = null\lr1 = r9.context.openOrCreateDatabase(r10, 0, r6)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0059|PHI: r1 r4 r8 \l  PHI: (r1v1 android.database.sqlite.SQLiteDatabase) = (r1v2 android.database.sqlite.SQLiteDatabase), (r1v3 android.database.sqlite.SQLiteDatabase), (r1v4 android.database.sqlite.SQLiteDatabase) binds: [B:17:0x0050, B:16:0x004d, B:15:0x0044] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v0 java.lang.String) = (r4v1 java.lang.String), (r4v2 java.lang.String), (r4v3 java.lang.String) binds: [B:17:0x0050, B:16:0x004d, B:15:0x0044] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v0 boolean) = (r8v1 boolean), (r8v2 boolean), (r8v3 boolean) binds: [B:17:0x0050, B:16:0x004d, B:15:0x0044] A[DONT_GENERATE, DONT_INLINE]\l|validateDatabaseAndCloseOnError(r1, r9.openHeaderValidation, r9.openIntegrityValidation)\lmil.nga.geopackage.db.GeoPackageConnection r5 = new mil.nga.geopackage.p021db.GeoPackageConnection(new mil.nga.geopackage.p021db.GeoPackageDatabase(r1))\lr3 = r10\l}"];
Node_19 [shape=record,label="{19\:\ 0x0077}"];
Node_20 [shape=record,label="{20\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return null\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|return new mil.nga.geopackage.factory.GeoPackageImpl(r3, r4, r5, r6, new mil.nga.geopackage.p021db.GeoPackageTableCreator(r5), r8)\l}"];
MethodNode[shape=record,label="{public mil.nga.geopackage.GeoPackage mil.nga.geopackage.factory.GeoPackageManagerImpl.open((r9v0 'this' mil.nga.geopackage.factory.GeoPackageManagerImpl A[IMMUTABLE_TYPE, THIS]), (r10v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_19;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_17;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_17;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_14;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_18;
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_21;
Node_19 -> Node_20;
}

