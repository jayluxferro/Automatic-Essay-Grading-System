digraph "CFG formil.nga.geopackage.factory.GeoPackageManagerImpl.createFile(Ljava\/lang\/String;Ljava\/io\/File;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (exists(r4) != false) goto L_0x0085\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006}"];
Node_3 [shape=record,label="{3\:\ 0x000a|if (mil.nga.geopackage.validate.GeoPackageValidate.hasGeoPackageExtension(r5) != false) goto L_0x0052\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c}"];
Node_5 [shape=record,label="{5\:\ 0x0010|if (mil.nga.geopackage.p022io.GeoPackageIOUtils.getFileExtension(r5) != null) goto L_0x0037\l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|java.io.File r1 = r5.getParentFile()\ljava.lang.StringBuilder r2 = new java.lang.StringBuilder()\lr2.append(r5.getName())\lr2.append(mil.nga.geopackage.property.PropertyConstants.PROPERTY_DIVIDER)\lr2.append(\"gpkg\")\lr5 = new java.io.File(r1, r2.toString())\l}"];
Node_7 [shape=record,label="{7\:\ 0x0037|java.lang.StringBuilder r0 = new java.lang.StringBuilder()\lr0.append(\"File can not have a non GeoPackage extension. Invalid File: \")\lr0.append(r5.getAbsolutePath())\l}"];
Node_8 [shape=record,label="{8\:\ 0x0051|throw new mil.nga.geopackage.GeoPackageException(r0.toString())\l}"];
Node_9 [shape=record,label="{9\:\ 0x0052|PHI: r5 \l  PHI: (r5v2 java.io.File) = (r5v0 java.io.File), (r5v11 java.io.File) binds: [B:3:0x000a, B:6:0x0012] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0056|if (r5.exists() != false) goto L_0x006a\l}"];
Node_11 [shape=record,label="{11\:\ 0x0058|createAndCloseGeoPackage(new mil.nga.geopackage.p021db.GeoPackageDatabase(android.database.sqlite.SQLiteDatabase.openOrCreateDatabase(r5, (android.database.sqlite.SQLiteDatabase.CursorFactory) null)))\l}"];
Node_12 [shape=record,label="{12\:\ 0x0069|RETURN\l|return importGeoPackageAsExternalLink(r5, r4)\l}"];
Node_13 [shape=record,label="{13\:\ 0x006a|java.lang.StringBuilder r0 = new java.lang.StringBuilder()\lr0.append(\"GeoPackage file already exists: \")\lr0.append(r5.getAbsolutePath())\l}"];
Node_14 [shape=record,label="{14\:\ 0x0084|throw new mil.nga.geopackage.GeoPackageException(r0.toString())\l}"];
Node_15 [shape=record,label="{15\:\ 0x0085|java.lang.StringBuilder r0 = new java.lang.StringBuilder()\lr0.append(\"GeoPackage already exists: \")\lr0.append(r4)\l}"];
Node_16 [shape=record,label="{16\:\ 0x009b|throw new mil.nga.geopackage.GeoPackageException(r0.toString())\l}"];
MethodNode[shape=record,label="{public boolean mil.nga.geopackage.factory.GeoPackageManagerImpl.createFile((r3v0 'this' mil.nga.geopackage.factory.GeoPackageManagerImpl A[IMMUTABLE_TYPE, THIS]), (r4v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_15;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_15 -> Node_16;
}

