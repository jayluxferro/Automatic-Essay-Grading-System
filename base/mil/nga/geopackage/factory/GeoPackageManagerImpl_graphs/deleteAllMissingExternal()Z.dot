digraph "CFG formil.nga.geopackage.factory.GeoPackageManagerImpl.deleteAllMissingExternal()Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.Iterator r0 = getExternalGeoPackages().iterator()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|LOOP_START\lLOOP:0: B:1:0x0009\-\>B:13:0x0009\l|r2 = false\l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|LOOP_START\lPHI: r2 \l  PHI: (r2v1 boolean) = (r2v0 boolean), (r2v2 boolean) binds: [B:1:0x0009, B:12:0x000a] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:2:0x000a\-\>B:12:0x000a\l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|if (r0.hasNext() == false) goto L_0x0033\l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|mil.nga.geopackage.db.metadata.GeoPackageMetadata r3 = r0.next()\l}"];
Node_5 [shape=record,label="{5\:\ 0x0023|if (new java.io.File(r3.getExternalPath()).exists() != false) goto L_0x000a\l}"];
Node_6 [shape=record,label="{6\:\ 0x0025}"];
Node_7 [shape=record,label="{7\:\ 0x002d|if (delete(r3.getName()) != false) goto L_0x0031\l}"];
Node_8 [shape=record,label="{8\:\ 0x002f|if (r2 == false) goto L_0x0009\l}"];
Node_9 [shape=record,label="{9\:\ 0x0031|r2 = true\l}"];
Node_10 [shape=record,label="{10\:\ 0x0033|RETURN\l|return r2\l}"];
Node_11 [shape=record,label="{11\:\ 0x0033|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ 0x000a|LOOP_END\lSYNTHETIC\lPHI: r2 \l  PHI: (r2v2 boolean) = (r2v1 boolean), (r2v3 boolean) binds: [B:14:0x000a, B:15:0x000a] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:2:0x000a\-\>B:12:0x000a\l}"];
Node_13 [shape=record,label="{13\:\ 0x0009|LOOP_END\lSYNTHETIC\lLOOP:0: B:1:0x0009\-\>B:13:0x0009\l}"];
Node_14 [shape=record,label="{14\:\ 0x000a|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x000a|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public boolean mil.nga.geopackage.factory.GeoPackageManagerImpl.deleteAllMissingExternal((r6v0 'this' mil.nga.geopackage.factory.GeoPackageManagerImpl A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_11;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_14;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_13;
Node_9 -> Node_15;
Node_11 -> Node_10;
Node_12 -> Node_2;
Node_13 -> Node_1;
Node_14 -> Node_12;
Node_15 -> Node_12;
}

