digraph "CFG formil.nga.geopackage.factory.GeoPackageManagerImpl.importGeoPackage(Ljava\/lang\/String;Ljava\/io\/InputStream;ZLmil\/nga\/geopackage\/io\/GeoPackageProgress;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0027 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|SYNTHETIC\lSplitter:B:1:0x0002\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0002\l|0x0002: INVOKE  (r0 I:int) = (r6 I:java.io.InputStream) java.io.InputStream.available():int type: VIRTUAL A[Catch:\{ IOException \-\> 0x000c \}, TRY_ENTER]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:8:0x0027 A[Catch:\{ IOException \-\> 0x000c \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: INVOKE  (r8 I:mil.nga.geopackage.io.GeoPackageProgress), (r0 I:int) mil.nga.geopackage.io.GeoPackageProgress.setMax(int):void type: INTERFACE A[Catch:\{ IOException \-\> 0x000c \}, TRY_LEAVE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|ExcHandler: IOException null\lSplitter:B:1:0x0002\l|0x000c: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_7 [shape=record,label="{7\:\ 0x000d|0x000d: CONST_CLASS  (r1 I:java.lang.Class\<mil.nga.geopackage.factory.GeoPackageManagerImpl\>) =  mil.nga.geopackage.factory.GeoPackageManagerImpl.class \l0x000f: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.Class) java.lang.Class.getSimpleName():java.lang.String type: VIRTUAL \l0x0013: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0015: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0018: CONST_STR  (r3 I:java.lang.String) =  \"Could not determine stream available size. Database: \" \l0x001a: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x001d: INVOKE  (r2 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0020: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0024: INVOKE  \l  (r1 I:java.lang.String)\l  (r2 I:java.lang.String)\l  (r0 I:java.lang.Throwable)\l android.util.Log.w(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC \l}"];
Node_8 [shape=record,label="{8\:\ 0x0027|0x0027: INVOKE  (r5 I:boolean) = \l  (r4 I:mil.nga.geopackage.factory.GeoPackageManagerImpl)\l  (r5 I:java.lang.String)\l  (r7 I:boolean)\l  (r6 I:java.io.InputStream)\l  (r8 I:mil.nga.geopackage.io.GeoPackageProgress)\l mil.nga.geopackage.factory.GeoPackageManagerImpl.importGeoPackage(java.lang.String, boolean, java.io.InputStream, mil.nga.geopackage.io.GeoPackageProgress):boolean type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x002b|0x002b: RETURN  (r5 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean mil.nga.geopackage.factory.GeoPackageManagerImpl.importGeoPackage((r4 'this' I:mil.nga.geopackage.factory.GeoPackageManagerImpl A[IMMUTABLE_TYPE, THIS]), (r5 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.io.InputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:mil.nga.geopackage.io.GeoPackageProgress A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_8;
Node_1 -> Node_2;
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_8;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9;
}

