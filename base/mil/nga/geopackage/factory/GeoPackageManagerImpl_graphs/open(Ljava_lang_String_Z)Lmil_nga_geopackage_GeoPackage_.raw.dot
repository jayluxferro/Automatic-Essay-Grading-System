digraph "CFG formil.nga.geopackage.factory.GeoPackageManagerImpl.open(Ljava\/lang\/String;Z)Lmil\/nga\/geopackage\/GeoPackage;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:boolean) = \l  (r9 I:mil.nga.geopackage.factory.GeoPackageManagerImpl)\l  (r10 I:java.lang.String)\l mil.nga.geopackage.factory.GeoPackageManagerImpl.exists(java.lang.String):boolean type: VIRTUAL \l0x0004: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0077 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: NEW_INSTANCE  (r6 I:mil.nga.geopackage.factory.GeoPackageCursorFactory) =  mil.nga.geopackage.factory.GeoPackageCursorFactory \l0x0009: INVOKE  (r6 I:mil.nga.geopackage.factory.GeoPackageCursorFactory) mil.nga.geopackage.factory.GeoPackageCursorFactory.\<init\>():void type: DIRECT \l0x000c: INVOKE  (r0 I:mil.nga.geopackage.db.metadata.GeoPackageMetadata) = \l  (r9 I:mil.nga.geopackage.factory.GeoPackageManagerImpl)\l  (r10 I:java.lang.String)\l mil.nga.geopackage.factory.GeoPackageManagerImpl.getGeoPackageMetadata(java.lang.String):mil.nga.geopackage.db.metadata.GeoPackageMetadata type: DIRECT \l0x0010: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|0x0011: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0050 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|0x0013: INVOKE  (r3 I:boolean) = (r0 I:mil.nga.geopackage.db.metadata.GeoPackageMetadata) mil.nga.geopackage.db.metadata.GeoPackageMetadata.isExternal():boolean type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|0x0017: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0050 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|0x0019: INVOKE  (r0 I:java.lang.String) = (r0 I:mil.nga.geopackage.db.metadata.GeoPackageMetadata) mil.nga.geopackage.db.metadata.GeoPackageMetadata.getExternalPath():java.lang.String type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|0x001d: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0042 \l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|0x001f: CONST  (r3 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0021|SYNTHETIC\lSplitter:B:9:0x0021\l}"];
Node_10 [shape=record,label="{10\:\ ?|Splitter:B:9:0x0021\l|0x0021: INVOKE  (r3 I:android.database.sqlite.SQLiteDatabase) = \l  (r0 I:java.lang.String)\l  (r6 I:android.database.sqlite.SQLiteDatabase$CursorFactory)\l  (r3 I:int)\l android.database.sqlite.SQLiteDatabase.openDatabase(java.lang.String, android.database.sqlite.SQLiteDatabase$CursorFactory, int):android.database.sqlite.SQLiteDatabase type: STATIC A[Catch:\{ Exception \-\> 0x0027 \}, TRY_ENTER]\l0x0024: NOP   A[TRY_LEAVE]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0025|0x0025: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0027|ExcHandler: Exception null\lSplitter:B:9:0x0021\l|0x0027: MOVE_EXCEPTION  (r3 I:?[OBJECT]) =  \l}"];
Node_13 [shape=record,label="{13\:\ 0x0028|0x0028: CONST_CLASS  (r4 I:java.lang.Class\<mil.nga.geopackage.factory.GeoPackageManagerImpl\>) =  mil.nga.geopackage.factory.GeoPackageManagerImpl.class \l0x002a: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.Class) java.lang.Class.getSimpleName():java.lang.String type: VIRTUAL \l0x002e: NEW_INSTANCE  (r5 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0030: INVOKE  (r5 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0033: CONST_STR  (r7 I:java.lang.String) =  \"Failed to open database as writable: \" \l0x0035: INVOKE  (r5 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0038: INVOKE  (r5 I:java.lang.StringBuilder), (r10 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x003b: INVOKE  (r5 I:java.lang.String) = (r5 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x003f: INVOKE  \l  (r4 I:java.lang.String)\l  (r5 I:java.lang.String)\l  (r3 I:java.lang.Throwable)\l android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC \l}"];
Node_14 [shape=record,label="{14\:\ 0x0042|0x0042: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x004d \l}"];
Node_15 [shape=record,label="{15\:\ 0x0044|0x0044: CONST  (r11 I:?[int, float, short, byte, char]) = (17 ?[int, float, short, byte, char]) \l0x0046: INVOKE  (r1 I:android.database.sqlite.SQLiteDatabase) = \l  (r0 I:java.lang.String)\l  (r6 I:android.database.sqlite.SQLiteDatabase$CursorFactory)\l  (r11 I:int)\l android.database.sqlite.SQLiteDatabase.openDatabase(java.lang.String, android.database.sqlite.SQLiteDatabase$CursorFactory, int):android.database.sqlite.SQLiteDatabase type: STATIC \l0x004a: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x004b: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_16 [shape=record,label="{16\:\ 0x004d|0x004d: MOVE  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x004e: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0050|0x0050: IGET  (r0 I:android.content.Context) = (r9 I:mil.nga.geopackage.factory.GeoPackageManagerImpl) mil.nga.geopackage.factory.GeoPackageManagerImpl.context android.content.Context \l0x0052: INVOKE  (r0 I:android.database.sqlite.SQLiteDatabase) = \l  (r0 I:android.content.Context)\l  (r10 I:java.lang.String)\l  (r2 I:int)\l  (r6 I:android.database.sqlite.SQLiteDatabase$CursorFactory)\l android.content.Context.openOrCreateDatabase(java.lang.String, int, android.database.sqlite.SQLiteDatabase$CursorFactory):android.database.sqlite.SQLiteDatabase type: VIRTUAL \l0x0056: MOVE  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0057: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l0x0058: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0059|0x0059: IGET  (r11 I:boolean) = (r9 I:mil.nga.geopackage.factory.GeoPackageManagerImpl) mil.nga.geopackage.factory.GeoPackageManagerImpl.openHeaderValidation boolean \l0x005b: IGET  (r0 I:boolean) = (r9 I:mil.nga.geopackage.factory.GeoPackageManagerImpl) mil.nga.geopackage.factory.GeoPackageManagerImpl.openIntegrityValidation boolean \l0x005d: INVOKE  \l  (r9 I:mil.nga.geopackage.factory.GeoPackageManagerImpl)\l  (r1 I:android.database.sqlite.SQLiteDatabase)\l  (r11 I:boolean)\l  (r0 I:boolean)\l mil.nga.geopackage.factory.GeoPackageManagerImpl.validateDatabaseAndCloseOnError(android.database.sqlite.SQLiteDatabase, boolean, boolean):void type: DIRECT \l0x0060: NEW_INSTANCE  (r5 I:mil.nga.geopackage.db.GeoPackageConnection) =  mil.nga.geopackage.db.GeoPackageConnection \l0x0062: NEW_INSTANCE  (r11 I:mil.nga.geopackage.db.GeoPackageDatabase) =  mil.nga.geopackage.db.GeoPackageDatabase \l0x0064: INVOKE  \l  (r11 I:mil.nga.geopackage.db.GeoPackageDatabase)\l  (r1 I:android.database.sqlite.SQLiteDatabase)\l mil.nga.geopackage.db.GeoPackageDatabase.\<init\>(android.database.sqlite.SQLiteDatabase):void type: DIRECT \l0x0067: INVOKE  \l  (r5 I:mil.nga.geopackage.db.GeoPackageConnection)\l  (r11 I:mil.nga.geopackage.db.GeoPackageDatabase)\l mil.nga.geopackage.db.GeoPackageConnection.\<init\>(mil.nga.geopackage.db.GeoPackageDatabase):void type: DIRECT \l0x006a: NEW_INSTANCE  (r7 I:mil.nga.geopackage.db.GeoPackageTableCreator) =  mil.nga.geopackage.db.GeoPackageTableCreator \l0x006c: INVOKE  \l  (r7 I:mil.nga.geopackage.db.GeoPackageTableCreator)\l  (r5 I:mil.nga.geopackage.db.GeoPackageCoreConnection)\l mil.nga.geopackage.db.GeoPackageTableCreator.\<init\>(mil.nga.geopackage.db.GeoPackageCoreConnection):void type: DIRECT \l0x006f: NEW_INSTANCE  (r11 I:mil.nga.geopackage.factory.GeoPackageImpl) =  mil.nga.geopackage.factory.GeoPackageImpl \l0x0071: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) \l0x0072: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x0073: INVOKE  \l  (r2 I:mil.nga.geopackage.factory.GeoPackageImpl)\l  (r3 I:java.lang.String)\l  (r4 I:java.lang.String)\l  (r5 I:mil.nga.geopackage.db.GeoPackageConnection)\l  (r6 I:mil.nga.geopackage.factory.GeoPackageCursorFactory)\l  (r7 I:mil.nga.geopackage.db.GeoPackageTableCreator)\l  (r8 I:boolean)\l mil.nga.geopackage.factory.GeoPackageImpl.\<init\>(java.lang.String, java.lang.String, mil.nga.geopackage.db.GeoPackageConnection, mil.nga.geopackage.factory.GeoPackageCursorFactory, mil.nga.geopackage.db.GeoPackageTableCreator, boolean):void type: DIRECT \l}"];
Node_19 [shape=record,label="{19\:\ 0x0077|0x0077: MOVE  (r11 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0078|0x0078: RETURN  (r11 I:mil.nga.geopackage.GeoPackage) \l}"];
MethodNode[shape=record,label="{public mil.nga.geopackage.GeoPackage mil.nga.geopackage.factory.GeoPackageManagerImpl.open((r9 'this' I:mil.nga.geopackage.factory.GeoPackageManagerImpl A[IMMUTABLE_TYPE, THIS]), (r10 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_19;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_17;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_17;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_14;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_18;
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_20;
Node_19 -> Node_20;
}

