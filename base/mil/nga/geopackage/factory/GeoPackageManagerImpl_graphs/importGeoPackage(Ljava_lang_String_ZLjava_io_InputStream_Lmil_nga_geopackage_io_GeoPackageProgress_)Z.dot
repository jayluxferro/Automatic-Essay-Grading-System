digraph "CFG formil.nga.geopackage.factory.GeoPackageManagerImpl.importGeoPackage(Ljava\/lang\/String;ZLjava\/io\/InputStream;Lmil\/nga\/geopackage\/io\/GeoPackageProgress;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (exists(r4) == false) goto L_0x003d\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|if (r5 == false) goto L_0x0026\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008}"];
Node_4 [shape=record,label="{4\:\ 0x000c|if (delete(r4) == false) goto L_0x000f\l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|java.lang.StringBuilder r6 = new java.lang.StringBuilder()\lr6.append(\"Failed to delete existing database: \")\lr6.append(r4)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0025|throw new mil.nga.geopackage.GeoPackageException(r6.toString())\l}"];
Node_7 [shape=record,label="{7\:\ 0x0026|java.lang.StringBuilder r6 = new java.lang.StringBuilder()\lr6.append(\"GeoPackage database already exists: \")\lr6.append(r4)\l}"];
Node_8 [shape=record,label="{8\:\ 0x003c|throw new mil.nga.geopackage.GeoPackageException(r6.toString())\l}"];
Node_9 [shape=record,label="{9\:\ 0x003d|java.io.File r5 = r3.context.getDatabasePath(r4)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0043|SYNTHETIC\lSplitter:B:10:0x0043\l}"];
Node_11 [shape=record,label="{11\:\ ?|Catch:\{ IOException \-\> 0x010f \}\lSplitter:B:10:0x0043\l|r3.context.openOrCreateDatabase(r4, 0, (android.database.sqlite.SQLiteDatabase.CursorFactory) null).close()     \/\/ Catch:\{ IOException \-\> 0x010f \}\lmil.nga.geopackage.p022io.GeoPackageIOUtils.copyStream(r6, r5, r7)     \/\/ Catch:\{ IOException \-\> 0x010f \}\l}"];
Node_12 [shape=record,label="{12\:\ 0x0051|if (r7 == null) goto L_0x0059\l}"];
Node_13 [shape=record,label="{13\:\ 0x0053}"];
Node_14 [shape=record,label="{14\:\ 0x0057|if (r7.isActive() == false) goto L_0x00a5\l}"];
Node_15 [shape=record,label="{15\:\ 0x0059|SYNTHETIC\lSplitter:B:15:0x0059\l}"];
Node_16 [shape=record,label="{16\:\ ?|Catch:\{ all \-\> 0x00fe, Exception \-\> 0x0103 \}\lSplitter:B:15:0x0059\l|validateDatabaseAndClose(r3.context.openOrCreateDatabase(r4, 0, (android.database.sqlite.SQLiteDatabase.CursorFactory) null, new mil.nga.geopackage.factory.GeoPackageManagerImpl.C13441(r3)), r3.importHeaderValidation, r3.importIntegrityValidation)     \/\/ Catch:\{ all \-\> 0x00fe, Exception \-\> 0x0103 \}\lmil.nga.geopackage.db.metadata.GeoPackageMetadataDb r5 = new mil.nga.geopackage.p021db.metadata.GeoPackageMetadataDb(r3.context)     \/\/ Catch:\{ all \-\> 0x00fe, Exception \-\> 0x0103 \}\lr5.open()     \/\/ Catch:\{ all \-\> 0x00fe, Exception \-\> 0x0103 \}\l}"];
Node_17 [shape=record,label="{17\:\ 0x0075|SYNTHETIC\lSplitter:B:17:0x0075\l}"];
Node_18 [shape=record,label="{18\:\ ?|Catch:\{ all \-\> 0x00fe, Exception \-\> 0x0103 \}\lSplitter:B:17:0x0075\l|mil.nga.geopackage.db.metadata.GeoPackageMetadataDataSource r6 = new mil.nga.geopackage.p021db.metadata.GeoPackageMetadataDataSource(r5)     \/\/ Catch:\{ all \-\> 0x00fe, Exception \-\> 0x0103 \}\lmil.nga.geopackage.db.metadata.GeoPackageMetadata r7 = new mil.nga.geopackage.p021db.metadata.GeoPackageMetadata()     \/\/ Catch:\{ all \-\> 0x00fe, Exception \-\> 0x0103 \}\lr7.setName(r4)     \/\/ Catch:\{ all \-\> 0x00fe, Exception \-\> 0x0103 \}\lr6.create(r7)     \/\/ Catch:\{ all \-\> 0x00fe, Exception \-\> 0x0103 \}\l}"];
Node_19 [shape=record,label="{19\:\ 0x0085|SYNTHETIC\lSplitter:B:19:0x0085\l}"];
Node_20 [shape=record,label="{20\:\ ?|Catch:\{ all \-\> 0x00fe, Exception \-\> 0x0103 \}\lSplitter:B:19:0x0085\l|r5.close()     \/\/ Catch:\{ all \-\> 0x00fe, Exception \-\> 0x0103 \}\l}"];
Node_21 [shape=record,label="{21\:\ 0x0088|mil.nga.geopackage.GeoPackage r5 = open(r4, false)\l}"];
Node_22 [shape=record,label="{22\:\ 0x008c|if (r5 == null) goto L_0x00e4\l}"];
Node_23 [shape=record,label="{23\:\ 0x008e|SYNTHETIC\lSplitter:B:23:0x008e\l}"];
Node_24 [shape=record,label="{24\:\ ?|Catch:\{ SQLException \-\> 0x00c6 \}\lSplitter:B:23:0x008e\l}"];
Node_25 [shape=record,label="{25\:\ 0x0096|Catch:\{ SQLException \-\> 0x00c6 \}\l|if (r5.getSpatialReferenceSystemDao().isTableExists() == false) goto L_0x00aa     \/\/ Catch:\{ SQLException \-\> 0x00c6 \}\l}"];
Node_26 [shape=record,label="{26\:\ 0x0098|Catch:\{ SQLException \-\> 0x00c6 \}\l}"];
Node_27 [shape=record,label="{27\:\ 0x00a0|if (r5.getContentsDao().isTableExists() == false) goto L_0x00aa\l}"];
Node_28 [shape=record,label="{28\:\ 0x00a2|r5.close()\l}"];
Node_29 [shape=record,label="{29\:\ 0x00a5}"];
Node_30 [shape=record,label="{30\:\ 0x00a9|RETURN\l|return exists(r4)\l}"];
Node_31 [shape=record,label="{31\:\ 0x00aa|SYNTHETIC\lSplitter:B:31:0x00aa\l}"];
Node_32 [shape=record,label="{32\:\ ?|Catch:\{ SQLException \-\> 0x00c6 \}\lSplitter:B:31:0x00aa\l|delete(r4)     \/\/ Catch:\{ SQLException \-\> 0x00c6 \}\ljava.lang.StringBuilder r7 = new java.lang.StringBuilder()     \/\/ Catch:\{ SQLException \-\> 0x00c6 \}\lr7.append(\"Invalid GeoPackage database file. Does not contain required tables: gpkg_spatial_ref_sys & gpkg_contents, Database: \")     \/\/ Catch:\{ SQLException \-\> 0x00c6 \}\lr7.append(r4)     \/\/ Catch:\{ SQLException \-\> 0x00c6 \}\l}"];
Node_33 [shape=record,label="{33\:\ 0x00c3|Catch:\{ SQLException \-\> 0x00c6 \}\l|throw new mil.nga.geopackage.GeoPackageException(r7.toString())     \/\/ Catch:\{ SQLException \-\> 0x00c6 \}\l}"];
Node_34 [shape=record,label="{34\:\ 0x00c4|ExcHandler: all (r4v6 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:35:0x00c6\l|java.lang.Throwable r4 = move\-exception\l}"];
Node_35 [shape=record,label="{35\:\ 0x00c6|SYNTHETIC\lSplitter:B:35:0x00c6\l}"];
Node_36 [shape=record,label="{36\:\ ?|Catch:\{ all \-\> 0x00c4 \}\lSplitter:B:35:0x00c6\l|delete(r4)     \/\/ Catch:\{ all \-\> 0x00c4 \}\ljava.lang.StringBuilder r7 = new java.lang.StringBuilder()     \/\/ Catch:\{ all \-\> 0x00c4 \}\lr7.append(\"Invalid GeoPackage database file. Could not verify existence of required tables: gpkg_spatial_ref_sys & gpkg_contents, Database: \")     \/\/ Catch:\{ all \-\> 0x00c4 \}\lr7.append(r4)     \/\/ Catch:\{ all \-\> 0x00c4 \}\l}"];
Node_37 [shape=record,label="{37\:\ 0x00df|Catch:\{ all \-\> 0x00c4 \}\l|throw new mil.nga.geopackage.GeoPackageException(r7.toString())     \/\/ Catch:\{ all \-\> 0x00c4 \}\l}"];
Node_38 [shape=record,label="{38\:\ 0x00e0|r5.close()\l}"];
Node_39 [shape=record,label="{39\:\ 0x00e3|throw r4\l}"];
Node_40 [shape=record,label="{40\:\ 0x00e4|delete(r4)\ljava.lang.StringBuilder r6 = new java.lang.StringBuilder()\lr6.append(\"Unable to open GeoPackage database. Database: \")\lr6.append(r4)\l}"];
Node_41 [shape=record,label="{41\:\ 0x00fd|throw new mil.nga.geopackage.GeoPackageException(r6.toString())\l}"];
Node_42 [shape=record,label="{42\:\ 0x00fe|ExcHandler: all (r6v6 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:17:0x0075\l|java.lang.Throwable r6 = move\-exception\l}"];
Node_43 [shape=record,label="{43\:\ 0x00ff|SYNTHETIC\lSplitter:B:43:0x00ff\l}"];
Node_44 [shape=record,label="{44\:\ ?|Catch:\{ all \-\> 0x00fe, Exception \-\> 0x0103 \}\lSplitter:B:43:0x00ff\l|r5.close()     \/\/ Catch:\{ all \-\> 0x00fe, Exception \-\> 0x0103 \}\l}"];
Node_45 [shape=record,label="{45\:\ 0x0102|Catch:\{ all \-\> 0x00fe, Exception \-\> 0x0103 \}\l|throw r6     \/\/ Catch:\{ all \-\> 0x00fe, Exception \-\> 0x0103 \}\l}"];
Node_46 [shape=record,label="{46\:\ 0x0103|ExcHandler: Exception (r5v4 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:15:0x0059\l|java.lang.Exception r5 = move\-exception\l}"];
Node_47 [shape=record,label="{47\:\ 0x0104|delete(r4)\l}"];
Node_48 [shape=record,label="{48\:\ 0x010e|throw new mil.nga.geopackage.GeoPackageException(\"Invalid GeoPackage database file\", r5)\l}"];
Node_49 [shape=record,label="{49\:\ 0x010f|ExcHandler: IOException (r5v3 'e' java.io.IOException A[CUSTOM_DECLARE])\lSplitter:B:10:0x0043\l|java.io.IOException r5 = move\-exception\l}"];
Node_50 [shape=record,label="{50\:\ 0x0110|java.lang.StringBuilder r7 = new java.lang.StringBuilder()\lr7.append(\"Failed to import GeoPackage database: \")\lr7.append(r4)\l}"];
Node_51 [shape=record,label="{51\:\ 0x0126|throw new mil.nga.geopackage.GeoPackageException(r7.toString(), r5)\l}"];
MethodNode[shape=record,label="{private boolean mil.nga.geopackage.factory.GeoPackageManagerImpl.importGeoPackage((r3v0 'this' mil.nga.geopackage.factory.GeoPackageManagerImpl A[IMMUTABLE_TYPE, THIS]), (r4v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 java.io.InputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 mil.nga.geopackage.io.GeoPackageProgress A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_9;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_9[style=dashed];
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_49;
Node_11 -> Node_12;
Node_11 -> Node_49;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_15;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_29;
Node_15 -> Node_16;
Node_15 -> Node_46;
Node_16 -> Node_17;
Node_16 -> Node_46;
Node_17 -> Node_18;
Node_17 -> Node_42;
Node_18 -> Node_19;
Node_18 -> Node_42;
Node_19 -> Node_20;
Node_19 -> Node_46;
Node_20 -> Node_21;
Node_20 -> Node_46;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_40;
Node_23 -> Node_24;
Node_23 -> Node_35;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_31;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_31;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_31 -> Node_32;
Node_31 -> Node_35;
Node_32 -> Node_33;
Node_34 -> Node_38;
Node_35 -> Node_36;
Node_35 -> Node_34;
Node_36 -> Node_37;
Node_38 -> Node_39;
Node_40 -> Node_41;
Node_42 -> Node_43;
Node_43 -> Node_44;
Node_43 -> Node_46;
Node_44 -> Node_45;
Node_46 -> Node_47;
Node_47 -> Node_48;
Node_49 -> Node_50;
Node_50 -> Node_51;
}

