digraph "CFG formil.nga.geopackage.factory.GeoPackageManagerImpl.isValid(Ljava\/lang\/String;ZZ)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r1 = false\l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|if (exists(r5) == false) goto L_0x0064\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|mil.nga.geopackage.factory.GeoPackageCursorFactory r0 = new mil.nga.geopackage.factory.GeoPackageCursorFactory()\lmil.nga.geopackage.db.metadata.GeoPackageMetadata r2 = getGeoPackageMetadata(r5)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|if (r2 == null) goto L_0x002a\l}"];
Node_4 [shape=record,label="{4\:\ 0x0012}"];
Node_5 [shape=record,label="{5\:\ 0x0016|if (r2.isExternal() == false) goto L_0x002a\l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|java.lang.String r5 = r2.getExternalPath()\l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|SYNTHETIC\lSplitter:B:7:0x001e\l}"];
Node_8 [shape=record,label="{8\:\ ?|Catch:\{ Exception \-\> 0x0023 \}\lSplitter:B:7:0x001e\l|android.database.sqlite.SQLiteDatabase r2 = android.database.sqlite.SQLiteDatabase.openDatabase(r5, r0, 16)     \/\/ Catch:\{ Exception \-\> 0x0023 \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x0023|android.database.sqlite.SQLiteDatabase r2 = android.database.sqlite.SQLiteDatabase.openDatabase(r5, r0, 17)\l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lExcHandler: Exception (unused java.lang.Exception)\lSplitter:B:7:0x001e\l}"];
Node_11 [shape=record,label="{11\:\ 0x002a|r4.context.getDatabasePath(r5).getAbsolutePath()\landroid.database.sqlite.SQLiteDatabase r2 = r4.context.openOrCreateDatabase(r5, 0, r0)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0039|PHI: r2 \l  PHI: (r2v1 android.database.sqlite.SQLiteDatabase) = (r2v5 android.database.sqlite.SQLiteDatabase), (r2v8 android.database.sqlite.SQLiteDatabase), (r2v9 android.database.sqlite.SQLiteDatabase) binds: [B:11:0x002a, B:9:0x0023, B:8:?] A[DONT_GENERATE, DONT_INLINE]\l|if (r6 == false) goto L_0x0046\l}"];
Node_13 [shape=record,label="{13\:\ 0x003b|SYNTHETIC\lSplitter:B:13:0x003b\l}"];
Node_14 [shape=record,label="{14\:\ ?|Catch:\{ Exception \-\> 0x0044, all \-\> 0x0042 \}\lSplitter:B:13:0x003b\l}"];
Node_15 [shape=record,label="{15\:\ 0x003f|Catch:\{ Exception \-\> 0x0044, all \-\> 0x0042 \}\l|if (isDatabaseHeaderValid(r2) == false) goto L_0x0061     \/\/ Catch:\{ Exception \-\> 0x0044, all \-\> 0x0042 \}\l}"];
Node_16 [shape=record,label="{16\:\ 0x0041|Catch:\{ Exception \-\> 0x0044, all \-\> 0x0042 \}\l}"];
Node_17 [shape=record,label="{17\:\ 0x0042|Catch:\{ Exception \-\> 0x0044, all \-\> 0x0042 \}\lExcHandler: all (r5v4 'th' java.lang.Throwable A[CUSTOM_DECLARE, Catch:\{ Exception \-\> 0x0044, all \-\> 0x0042 \}])\lSplitter:B:25:0x0051\l|java.lang.Throwable r5 = move\-exception     \/\/ Catch:\{ Exception \-\> 0x0044, all \-\> 0x0042 \}\l}"];
Node_18 [shape=record,label="{18\:\ 0x0043|Catch:\{ Exception \-\> 0x0044, all \-\> 0x0042 \}\l}"];
Node_19 [shape=record,label="{19\:\ 0x0044|Catch:\{ Exception \-\> 0x0044, all \-\> 0x0042 \}\lExcHandler: Exception (r5v3 'e' java.lang.Exception A[CUSTOM_DECLARE, Catch:\{ Exception \-\> 0x0044, all \-\> 0x0042 \}])\lSplitter:B:13:0x003b\l|java.lang.Exception r5 = move\-exception     \/\/ Catch:\{ Exception \-\> 0x0044, all \-\> 0x0042 \}\l}"];
Node_20 [shape=record,label="{20\:\ 0x0045|Catch:\{ Exception \-\> 0x0044, all \-\> 0x0042 \}\l}"];
Node_21 [shape=record,label="{21\:\ 0x0046|Catch:\{ Exception \-\> 0x0044, all \-\> 0x0042 \}\l|if (r7 == false) goto L_0x005f     \/\/ Catch:\{ Exception \-\> 0x0044, all \-\> 0x0042 \}\l}"];
Node_22 [shape=record,label="{22\:\ 0x0048|Catch:\{ Exception \-\> 0x0044, all \-\> 0x0042 \}\l}"];
Node_23 [shape=record,label="{23\:\ 0x004c|if (r2.isDatabaseIntegrityOk() == false) goto L_0x0061\l}"];
Node_24 [shape=record,label="{24\:\ 0x004f}"];
Node_25 [shape=record,label="{25\:\ 0x0051|SYNTHETIC\lSplitter:B:25:0x0051\l}"];
Node_26 [shape=record,label="{26\:\ ?|Catch:\{ Exception \-\> 0x0044, all \-\> 0x0042 \}\lSplitter:B:25:0x0051\l|android.util.Log.e(mil.nga.geopackage.factory.GeoPackageManagerImpl.class.getSimpleName(), \"Failed to validate database\", r5)     \/\/ Catch:\{ Exception \-\> 0x0044, all \-\> 0x0042 \}\l}"];
Node_27 [shape=record,label="{27\:\ 0x005b|r2.close()\l}"];
Node_28 [shape=record,label="{28\:\ 0x005e|throw r5\l}"];
Node_29 [shape=record,label="{29\:\ 0x005f|r1 = true\l}"];
Node_30 [shape=record,label="{30\:\ 0x0061|PHI: r1 \l  PHI: (r1v2 boolean) = (r1v3 boolean), (r1v0 boolean), (r1v0 boolean), (r1v0 boolean) binds: [B:29:0x005f, B:23:0x004c, B:26:?, B:15:0x003f] A[DONT_GENERATE, DONT_INLINE]\l|r2.close()\l}"];
Node_31 [shape=record,label="{31\:\ 0x0064|RETURN\lPHI: r1 \l  PHI: (r1v1 boolean) = (r1v0 boolean), (r1v2 boolean) binds: [B:1:0x0005, B:30:0x0061] A[DONT_GENERATE, DONT_INLINE]\l|return r1\l}"];
MethodNode[shape=record,label="{private boolean mil.nga.geopackage.factory.GeoPackageManagerImpl.isValid((r4v0 'this' mil.nga.geopackage.factory.GeoPackageManagerImpl A[IMMUTABLE_TYPE, THIS]), (r5v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_31;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_11;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_10;
Node_8 -> Node_12;
Node_9 -> Node_12;
Node_10 -> Node_9;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_21;
Node_13 -> Node_14;
Node_13 -> Node_19;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_30;
Node_16 -> Node_21;
Node_17 -> Node_18;
Node_18 -> Node_27;
Node_19 -> Node_20;
Node_20 -> Node_24;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_29;
Node_22 -> Node_23;
Node_23 -> Node_30;
Node_23 -> Node_29[style=dashed];
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_25 -> Node_17;
Node_26 -> Node_17;
Node_26 -> Node_30;
Node_27 -> Node_28;
Node_29 -> Node_30;
Node_30 -> Node_31;
}

