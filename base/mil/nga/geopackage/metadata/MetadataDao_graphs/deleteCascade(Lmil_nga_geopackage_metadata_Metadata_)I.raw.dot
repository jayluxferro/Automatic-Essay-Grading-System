digraph "CFG formil.nga.geopackage.metadata.MetadataDao.deleteCascade(Lmil\/nga\/geopackage\/metadata\/Metadata;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0019 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: INVOKE  (r0 I:mil.nga.geopackage.metadata.reference.MetadataReferenceDao) = (r3 I:mil.nga.geopackage.metadata.MetadataDao) mil.nga.geopackage.metadata.MetadataDao.getMetadataReferenceDao():mil.nga.geopackage.metadata.reference.MetadataReferenceDao type: DIRECT \l0x0006: INVOKE  (r1 I:long) = (r4 I:mil.nga.geopackage.metadata.Metadata) mil.nga.geopackage.metadata.Metadata.getId():long type: VIRTUAL \l0x000a: INVOKE  \l  (r0 I:mil.nga.geopackage.metadata.reference.MetadataReferenceDao)\l  (r1 I:long)\l mil.nga.geopackage.metadata.reference.MetadataReferenceDao.deleteByMetadata(long):int type: VIRTUAL \l0x000d: INVOKE  (r1 I:long) = (r4 I:mil.nga.geopackage.metadata.Metadata) mil.nga.geopackage.metadata.Metadata.getId():long type: VIRTUAL \l0x0011: INVOKE  \l  (r0 I:mil.nga.geopackage.metadata.reference.MetadataReferenceDao)\l  (r1 I:long)\l mil.nga.geopackage.metadata.reference.MetadataReferenceDao.removeMetadataParent(long):int type: VIRTUAL \l0x0014: INVOKE  (r4 I:int) = \l  (r3 I:mil.nga.geopackage.metadata.MetadataDao)\l  (r4 I:java.lang.Object)\l mil.nga.geopackage.metadata.MetadataDao.delete(java.lang.Object):int type: VIRTUAL \l}"];
Node_2 [shape=record,label="{2\:\ 0x0019|0x0019: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x001a|0x001a: RETURN  (r4 I:int) \l}"];
MethodNode[shape=record,label="{public int mil.nga.geopackage.metadata.MetadataDao.deleteCascade((r3 'this' I:mil.nga.geopackage.metadata.MetadataDao A[IMMUTABLE_TYPE, THIS]), (r4 I:mil.nga.geopackage.metadata.Metadata A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_2;
Node_1 -> Node_3;
Node_2 -> Node_3;
}

