digraph "CFG formil.nga.geopackage.metadata.MetadataScopeType.\<clinit\>()V" {
subgraph cluster_Region_197045462 {
label = "R(1:0)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|UNDEFINED = new mil.nga.geopackage.metadata.MetadataScopeType(\"UNDEFINED\", 0, \"undefined\", \"NA\", \"Metadata information scope is undefined\")\lFIELD_SESSION = new mil.nga.geopackage.metadata.MetadataScopeType(\"FIELD_SESSION\", 1, \"fieldSession\", \"012\", \"Information applies to the field session\")\lCOLLECTION_SESSION = new mil.nga.geopackage.metadata.MetadataScopeType(\"COLLECTION_SESSION\", 2, \"collectionSession\", \"004\", \"Information applies to the collection session\")\lSERIES = new mil.nga.geopackage.metadata.MetadataScopeType(\"SERIES\", 3, \"series\", \"006\", \"Information applies to the (dataset) series\")\lDATASET = new mil.nga.geopackage.metadata.MetadataScopeType(\"DATASET\", 4, \"dataset\", \"005\", \"Information applies to the (geographic feature) dataset\")\lFEATURE_TYPE = new mil.nga.geopackage.metadata.MetadataScopeType(\"FEATURE_TYPE\", 5, \"featureType\", \"010\", \"Information applies to a feature type (class)\")\lFEATURE = new mil.nga.geopackage.metadata.MetadataScopeType(\"FEATURE\", 6, \"feature\", \"009\", \"Information applies to a feature (instance)\")\lATTRIBUTE_TYPE = new mil.nga.geopackage.metadata.MetadataScopeType(\"ATTRIBUTE_TYPE\", 7, \"attributeType\", \"002\", \"Information applies to the attribute class\")\lATTRIBUTE = new mil.nga.geopackage.metadata.MetadataScopeType(\"ATTRIBUTE\", 8, \"attribute\", \"001\", \"Information applies to the characteristic of a feature (instance)\")\lTILE = new mil.nga.geopackage.metadata.MetadataScopeType(\"TILE\", 9, org.osmdroid.tileprovider.modules.DatabaseFileArchive.COLUMN_TILE, \"016\", \"Information applies to a tile, a spatial subset of geographic data\")\lMODEL = new mil.nga.geopackage.metadata.MetadataScopeType(\"MODEL\", 10, \"model\", \"015\", \"Information applies to a copy or imitation of an existing or hypothetical object\")\lCATALOG = new mil.nga.geopackage.metadata.MetadataScopeType(\"CATALOG\", 11, \"catalog\", \"NA\", \"Metadata applies to a feature catalog\")\lSCHEMA = new mil.nga.geopackage.metadata.MetadataScopeType(\"SCHEMA\", 12, mil.nga.geopackage.extension.SchemaExtension.NAME, \"NA\", \"Metadata applies to an application schema\")\lTAXONOMY = new mil.nga.geopackage.metadata.MetadataScopeType(\"TAXONOMY\", 13, \"taxonomy\", \"NA\", \"Metadata applies to a taxonomy or knowledge system\")\lSOFTWARE = new mil.nga.geopackage.metadata.MetadataScopeType(\"SOFTWARE\", 14, \"software\", \"013\", \"Information applies to a computer program or routine\")\lSERVICE = new mil.nga.geopackage.metadata.MetadataScopeType(\"SERVICE\", 15, android.support.p000v4.app.NotificationCompat.CATEGORY_SERVICE, \"014\", \"Information applies to a capability which a service provider entity makes available to a service user entity through a set of interfaces that define a behaviour, such as a use case\")\lCOLLECTION_HARDWARE = new mil.nga.geopackage.metadata.MetadataScopeType(\"COLLECTION_HARDWARE\", 16, \"collectionHardware\", \"003\", \"Information applies to the collection hardware class\")\lNON_GEOGRAPHIC_DATASET = new mil.nga.geopackage.metadata.MetadataScopeType(\"NON_GEOGRAPHIC_DATASET\", 17, \"nonGeographicDataset\", \"007\", \"Information applies to non\-geographic data\")\lDIMENSION_GROUP = new mil.nga.geopackage.metadata.MetadataScopeType(\"DIMENSION_GROUP\", 18, \"dimensionGroup\", \"008\", \"Information applies to a dimension group\")\l$VALUES = new mil.nga.geopackage.metadata.MetadataScopeType[]\{UNDEFINED, FIELD_SESSION, COLLECTION_SESSION, SERIES, DATASET, FEATURE_TYPE, FEATURE, ATTRIBUTE_TYPE, ATTRIBUTE, TILE, MODEL, CATALOG, SCHEMA, TAXONOMY, SOFTWARE, SERVICE, COLLECTION_HARDWARE, NON_GEOGRAPHIC_DATASET, DIMENSION_GROUP\}\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x01be}"];
MethodNode[shape=record,label="{static void mil.nga.geopackage.metadata.MetadataScopeType.\<clinit\>()  | DONT_GENERATE\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

