digraph "CFG formil.nga.geopackage.db.CoreSQLUtils.quoteWrap([Ljava\/lang\/String;)[Ljava\/lang\/String;" {
subgraph cluster_Region_946108063 {
label = "R(1:(2:(1:5)|(3:1|(1:4)|7)))";
node [shape=record,color=blue];
subgraph cluster_Region_1786498325 {
label = "R(2:(1:5)|(3:1|(1:4)|7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_385820913 {
label = "IF [B:0:0x0000] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r3 == null) goto L_0x0014\l}"];
subgraph cluster_Region_549066362 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0014|SYNTHETIC\lRETURN\lORIG_RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_1728576759 {
label = "R(3:1|(1:4)|7)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|java.lang.String[] java.lang.String[] r0 = new java.lang.String[r3.length]\lint r1 = 0\l}"];
subgraph cluster_LoopRegion_126805838 {
label = "LOOP:0: (1:4)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0007|if (r1 \< r3.length) goto L_0x0009\l}"];
subgraph cluster_Region_554359481 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0009|LOOP_END\lLOOP:0: B:2:0x0006\-\>B:4:0x0009\l|r0[r1] = quoteWrap(r3[r1])\lr1++\l}"];
}
}
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lRETURN\l|return r0\l}"];
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0006|LOOP_START\lPHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:1:0x0002, B:4:0x0009] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:2:0x0006\-\>B:4:0x0009\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0015|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static java.lang.String[] mil.nga.geopackage.db.CoreSQLUtils.quoteWrap((r3v0 java.lang.String[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_5;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_3 -> Node_6[style=dashed];
Node_4 -> Node_2;
Node_2 -> Node_3;
Node_6 -> Node_7;
}

