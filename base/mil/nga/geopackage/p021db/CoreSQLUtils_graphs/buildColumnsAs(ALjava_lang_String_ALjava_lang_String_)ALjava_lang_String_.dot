digraph "CFG formil.nga.geopackage.db.CoreSQLUtils.buildColumnsAs([Ljava\/lang\/String;[Ljava\/lang\/String;)[Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r6 == null) goto L_?\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|java.lang.String[] r0 = new java.lang.String[r5.length]\lr1 = 0\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|LOOP_START\lPHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:1:0x0002, B:7:0x0023] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:2:0x0006\-\>B:7:0x0023\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|if (r1 \>= r5.length) goto L_0x0028\l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|r2 = r5[r1]\lr3 = r6[r1]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|if (r3 == null) goto L_0x0023\l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|java.lang.StringBuilder r4 = new java.lang.StringBuilder()\lr4.append(r3)\lr4.append(\" AS \")\lr4.append(r2)\ljava.lang.String r2 = r4.toString()\l}"];
Node_7 [shape=record,label="{7\:\ 0x0023|LOOP_END\lPHI: r2 \l  PHI: (r2v2 java.lang.String) = (r2v1 java.lang.String), (r2v3 java.lang.String) binds: [B:11:0x0023, B:10:0x0023] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:2:0x0006\-\>B:7:0x0023\l|r0[r1] = r2\lint r1 = r1 + 1\l}"];
Node_8 [shape=record,label="{8\:\ 0x0028}"];
Node_9 [shape=record,label="{9\:\ 0x0028|SYNTHETIC\l}"];
Node_10 [shape=record,label="{10\:\ 0x0023|SYNTHETIC\l}"];
Node_11 [shape=record,label="{11\:\ 0x0023|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return r0\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|return r5\l}"];
MethodNode[shape=record,label="{public static java.lang.String[] mil.nga.geopackage.db.CoreSQLUtils.buildColumnsAs((r5v0 java.lang.String[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 java.lang.String[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_13;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_10;
Node_7 -> Node_2;
Node_8 -> Node_12;
Node_9 -> Node_8;
Node_10 -> Node_7;
Node_11 -> Node_7;
}

