digraph "CFG formil.nga.geopackage.db.GeoPackageTableCreator.createTable(Lmil\/nga\/geopackage\/user\/UserTable;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:mil.nga.geopackage.db.GeoPackageCoreConnection) = (r7 I:mil.nga.geopackage.db.GeoPackageTableCreator) mil.nga.geopackage.db.GeoPackageTableCreator.db mil.nga.geopackage.db.GeoPackageCoreConnection \l0x0002: INVOKE  (r1 I:java.lang.String) = (r8 I:mil.nga.geopackage.user.UserTable) mil.nga.geopackage.user.UserTable.getTableName():java.lang.String type: VIRTUAL \l0x0006: INVOKE  (r0 I:boolean) = \l  (r0 I:mil.nga.geopackage.db.GeoPackageCoreConnection)\l  (r1 I:java.lang.String)\l mil.nga.geopackage.db.GeoPackageCoreConnection.tableExists(java.lang.String):boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x00da \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x000e: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0011: CONST_STR  (r1 I:java.lang.String) =  \"CREATE TABLE \" \l0x0013: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0016: INVOKE  (r1 I:java.lang.String) = (r8 I:mil.nga.geopackage.user.UserTable) mil.nga.geopackage.user.UserTable.getTableName():java.lang.String type: VIRTUAL \l0x001a: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.String) mil.nga.geopackage.db.CoreSQLUtils.quoteWrap(java.lang.String):java.lang.String type: STATIC \l0x001e: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0021: CONST_STR  (r1 I:java.lang.String) =  \" (\" \l0x0023: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0026: INVOKE  (r1 I:java.util.List) = (r8 I:mil.nga.geopackage.user.UserTable) mil.nga.geopackage.user.UserTable.getColumns():java.util.List type: VIRTUAL \l0x002a: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x002b: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x002c|0x002c: INVOKE  (r4 I:int) = (r1 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x0030|0x0030: IF  (r3 I:?[int, byte, short, char]) \>= (r4 I:?[int, byte, short, char])  \-\> B:18:0x008b \l}"];
Node_5 [shape=record,label="{5\:\ 0x0032|0x0032: INVOKE  (r4 I:java.lang.Object) = (r1 I:java.util.List), (r3 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0036: CHECK_CAST  (r4 I:mil.nga.geopackage.user.UserColumn) = (mil.nga.geopackage.user.UserColumn) (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0038|0x0038: IF  (r3 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:8:0x003f \l}"];
Node_7 [shape=record,label="{7\:\ 0x003a|0x003a: CONST_STR  (r5 I:java.lang.String) =  \",\" \l0x003c: INVOKE  (r0 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x003f|0x003f: CONST_STR  (r5 I:java.lang.String) =  \"\l  \" \l0x0041: INVOKE  (r0 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0044: INVOKE  (r5 I:java.lang.String) = (r4 I:mil.nga.geopackage.user.UserColumn) mil.nga.geopackage.user.UserColumn.getName():java.lang.String type: VIRTUAL \l0x0048: INVOKE  (r5 I:java.lang.String) = (r5 I:java.lang.String) mil.nga.geopackage.db.CoreSQLUtils.quoteWrap(java.lang.String):java.lang.String type: STATIC \l0x004c: INVOKE  (r0 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x004f: CONST_STR  (r5 I:java.lang.String) =  \" \" \l0x0051: INVOKE  (r0 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0054: INVOKE  (r5 I:java.lang.String) = (r4 I:mil.nga.geopackage.user.UserColumn) mil.nga.geopackage.user.UserColumn.getTypeName():java.lang.String type: VIRTUAL \l0x0058: INVOKE  (r0 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x005b: INVOKE  (r5 I:java.lang.Long) = (r4 I:mil.nga.geopackage.user.UserColumn) mil.nga.geopackage.user.UserColumn.getMax():java.lang.Long type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x005f|0x005f: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0072 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0061|0x0061: CONST_STR  (r5 I:java.lang.String) =  \"(\" \l0x0063: INVOKE  (r0 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0066: INVOKE  (r5 I:java.lang.Long) = (r4 I:mil.nga.geopackage.user.UserColumn) mil.nga.geopackage.user.UserColumn.getMax():java.lang.Long type: VIRTUAL \l0x006a: INVOKE  (r0 I:java.lang.StringBuilder), (r5 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x006d: CONST_STR  (r5 I:java.lang.String) =  \")\" \l0x006f: INVOKE  (r0 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0072|0x0072: INVOKE  (r5 I:boolean) = (r4 I:mil.nga.geopackage.user.UserColumn) mil.nga.geopackage.user.UserColumn.isNotNull():boolean type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0076|0x0076: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x007d \l}"];
Node_13 [shape=record,label="{13\:\ 0x0078|0x0078: CONST_STR  (r5 I:java.lang.String) =  \" NOT NULL\" \l0x007a: INVOKE  (r0 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x007d|0x007d: INVOKE  (r4 I:boolean) = (r4 I:mil.nga.geopackage.user.UserColumn) mil.nga.geopackage.user.UserColumn.isPrimaryKey():boolean type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x0081|0x0081: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0088 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0083|0x0083: CONST_STR  (r4 I:java.lang.String) =  \" PRIMARY KEY AUTOINCREMENT\" \l0x0085: INVOKE  (r0 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_17 [shape=record,label="{17\:\ 0x0088|0x0088: ARITH  (r3 I:int) = (r3 I:int) + (1 int) \l}"];
Node_18 [shape=record,label="{18\:\ 0x008b|0x008b: INVOKE  (r8 I:java.util.List) = (r8 I:mil.nga.geopackage.user.UserTable) mil.nga.geopackage.user.UserTable.getUniqueConstraints():java.util.List type: VIRTUAL \l0x008f: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_19 [shape=record,label="{19\:\ 0x0090|0x0090: INVOKE  (r3 I:int) = (r8 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_20 [shape=record,label="{20\:\ 0x0094|0x0094: IF  (r1 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char])  \-\> B:29:0x00cb \l}"];
Node_21 [shape=record,label="{21\:\ 0x0096|0x0096: INVOKE  (r3 I:java.lang.Object) = (r8 I:java.util.List), (r1 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x009a: CHECK_CAST  (r3 I:mil.nga.geopackage.user.UserUniqueConstraint) = (mil.nga.geopackage.user.UserUniqueConstraint) (r3 I:?[OBJECT, ARRAY]) \l0x009c: CONST_STR  (r4 I:java.lang.String) =  \",\l  UNIQUE (\" \l0x009e: INVOKE  (r0 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00a1: INVOKE  (r3 I:java.util.List) = (r3 I:mil.nga.geopackage.user.UserUniqueConstraint) mil.nga.geopackage.user.UserUniqueConstraint.getColumns():java.util.List type: VIRTUAL \l0x00a5: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_22 [shape=record,label="{22\:\ 0x00a6|0x00a6: INVOKE  (r5 I:int) = (r3 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_23 [shape=record,label="{23\:\ 0x00aa|0x00aa: IF  (r4 I:?[int, byte, short, char]) \>= (r5 I:?[int, byte, short, char])  \-\> B:28:0x00c3 \l}"];
Node_24 [shape=record,label="{24\:\ 0x00ac|0x00ac: INVOKE  (r5 I:java.lang.Object) = (r3 I:java.util.List), (r4 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x00b0: CHECK_CAST  (r5 I:mil.nga.geopackage.user.UserColumn) = (mil.nga.geopackage.user.UserColumn) (r5 I:?[OBJECT, ARRAY]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x00b2|0x00b2: IF  (r4 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:27:0x00b9 \l}"];
Node_26 [shape=record,label="{26\:\ 0x00b4|0x00b4: CONST_STR  (r6 I:java.lang.String) =  \", \" \l0x00b6: INVOKE  (r0 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_27 [shape=record,label="{27\:\ 0x00b9|0x00b9: INVOKE  (r5 I:java.lang.String) = (r5 I:mil.nga.geopackage.user.UserColumn) mil.nga.geopackage.user.UserColumn.getName():java.lang.String type: VIRTUAL \l0x00bd: INVOKE  (r0 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00c0: ARITH  (r4 I:int) = (r4 I:int) + (1 int) \l}"];
Node_28 [shape=record,label="{28\:\ 0x00c3|0x00c3: CONST_STR  (r3 I:java.lang.String) =  \")\" \l0x00c5: INVOKE  (r0 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00c8: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_29 [shape=record,label="{29\:\ 0x00cb|0x00cb: CONST_STR  (r8 I:java.lang.String) =  \"\l);\" \l0x00cd: INVOKE  (r0 I:java.lang.StringBuilder), (r8 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00d0: IGET  (r8 I:mil.nga.geopackage.db.GeoPackageCoreConnection) = (r7 I:mil.nga.geopackage.db.GeoPackageTableCreator) mil.nga.geopackage.db.GeoPackageTableCreator.db mil.nga.geopackage.db.GeoPackageCoreConnection \l0x00d2: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x00d6: INVOKE  \l  (r8 I:mil.nga.geopackage.db.GeoPackageCoreConnection)\l  (r0 I:java.lang.String)\l mil.nga.geopackage.db.GeoPackageCoreConnection.execSQL(java.lang.String):void type: VIRTUAL \l}"];
Node_30 [shape=record,label="{30\:\ 0x00d9|0x00d9: RETURN   \l}"];
Node_31 [shape=record,label="{31\:\ 0x00da|0x00da: NEW_INSTANCE  (r0 I:mil.nga.geopackage.GeoPackageException) =  mil.nga.geopackage.GeoPackageException \l0x00dc: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x00de: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x00e1: CONST_STR  (r2 I:java.lang.String) =  \"Table already exists and can not be created: \" \l0x00e3: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00e6: INVOKE  (r8 I:java.lang.String) = (r8 I:mil.nga.geopackage.user.UserTable) mil.nga.geopackage.user.UserTable.getTableName():java.lang.String type: VIRTUAL \l0x00ea: INVOKE  (r1 I:java.lang.StringBuilder), (r8 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00ed: INVOKE  (r8 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x00f1: INVOKE  \l  (r0 I:mil.nga.geopackage.GeoPackageException)\l  (r8 I:java.lang.String)\l mil.nga.geopackage.GeoPackageException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_32 [shape=record,label="{32\:\ 0x00f4|0x00f4: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void mil.nga.geopackage.db.GeoPackageTableCreator.createTable((r7 'this' I:mil.nga.geopackage.db.GeoPackageTableCreator A[IMMUTABLE_TYPE, THIS]), (r8 I:mil.nga.geopackage.user.UserTable\<TColumn\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<TColumn:, Lmil\/nga\/geopackage\/user\/UserColumn;, \>(, Lmil\/nga\/geopackage\/user\/UserTable\<, TTColumn;\>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_31;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_18;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_3;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_29;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_28;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_27;
Node_27 -> Node_22;
Node_28 -> Node_19;
Node_29 -> Node_30;
Node_31 -> Node_32;
}

