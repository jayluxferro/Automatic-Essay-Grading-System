digraph "CFG formil.nga.geopackage.db.SQLUtils.quoteWrap(Landroid\/content\/ContentValues;)Landroid\/content\/ContentValues;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0044 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: NEW_INSTANCE  (r0 I:java.util.HashMap) =  java.util.HashMap \l0x0004: INVOKE  (r0 I:java.util.HashMap) java.util.HashMap.\<init\>():void type: DIRECT \l0x0007: INVOKE  (r3 I:java.util.Set) = (r3 I:android.content.ContentValues) android.content.ContentValues.valueSet():java.util.Set type: VIRTUAL \l0x000b: INVOKE  (r3 I:java.util.Iterator) = (r3 I:java.util.Set) java.util.Set.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x000f|0x000f: INVOKE  (r1 I:boolean) = (r3 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|0x0013: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x002d \l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|0x0015: INVOKE  (r1 I:java.lang.Object) = (r3 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0019: CHECK_CAST  (r1 I:java.util.Map$Entry) = (java.util.Map$Entry) (r1 I:?[OBJECT, ARRAY]) \l0x001b: INVOKE  (r2 I:java.lang.Object) = (r1 I:java.util.Map$Entry) java.util.Map.Entry.getKey():java.lang.Object type: INTERFACE \l0x001f: CHECK_CAST  (r2 I:java.lang.String) = (java.lang.String) (r2 I:?[OBJECT, ARRAY]) \l0x0021: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.String) mil.nga.geopackage.db.CoreSQLUtils.quoteWrap(java.lang.String):java.lang.String type: STATIC \l0x0025: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.util.Map$Entry) java.util.Map.Entry.getValue():java.lang.Object type: INTERFACE \l0x0029: INVOKE  \l  (r0 I:java.util.Map)\l  (r2 I:java.lang.Object)\l  (r1 I:java.lang.Object)\l java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE \l}"];
Node_5 [shape=record,label="{5\:\ 0x002d|0x002d: INVOKE  (r3 I:android.os.Parcel) =  android.os.Parcel.obtain():android.os.Parcel type: STATIC \l0x0031: INVOKE  (r3 I:android.os.Parcel), (r0 I:java.util.Map) android.os.Parcel.writeMap(java.util.Map):void type: VIRTUAL \l0x0034: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0035: INVOKE  (r3 I:android.os.Parcel), (r0 I:int) android.os.Parcel.setDataPosition(int):void type: VIRTUAL \l0x0038: SGET  (r0 I:android.os.Parcelable$Creator) =  android.content.ContentValues.CREATOR android.os.Parcelable$Creator \l0x003a: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:android.os.Parcelable$Creator)\l  (r3 I:android.os.Parcel)\l android.os.Parcelable.Creator.createFromParcel(android.os.Parcel):java.lang.Object type: INTERFACE \l0x003e: CHECK_CAST  (r0 I:android.content.ContentValues) = (android.content.ContentValues) (r0 I:?[OBJECT, ARRAY]) \l0x0040: INVOKE  (r3 I:android.os.Parcel) android.os.Parcel.recycle():void type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0044|0x0044: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0045|0x0045: RETURN  (r0 I:android.content.ContentValues) \l}"];
MethodNode[shape=record,label="{public static android.content.ContentValues mil.nga.geopackage.db.SQLUtils.quoteWrap((r3 I:android.content.ContentValues A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_6;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_2;
Node_5 -> Node_7;
Node_6 -> Node_7;
}

