digraph "CFG formil.nga.geopackage.db.metadata.GeometryMetadataDataSource.createGeometryMetadata(Landroid\/database\/Cursor;)Lmil\/nga\/geopackage\/db\/metadata\/GeometryMetadata;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|mil.nga.geopackage.db.metadata.GeometryMetadata r0 = new mil.nga.geopackage.p021db.metadata.GeometryMetadata()\lr0.setGeoPackageId(r3.getLong(0))\lr0.setTableName(r3.getString(1))\lr0.setId(r3.getLong(2))\lr0.setMinX(r3.getDouble(3))\lr0.setMaxX(r3.getDouble(4))\lr0.setMinY(r3.getDouble(5))\lr0.setMaxY(r3.getDouble(6))\l}"];
Node_1 [shape=record,label="{1\:\ 0x0042|if (r3.isNull(7) != false) goto L_0x004f\l}"];
Node_2 [shape=record,label="{2\:\ 0x0044|r0.setMinZ(java.lang.Double.valueOf(r3.getDouble(7)))\l}"];
Node_3 [shape=record,label="{3\:\ 0x004f}"];
Node_4 [shape=record,label="{4\:\ 0x0055|if (r3.isNull(8) != false) goto L_0x0062\l}"];
Node_5 [shape=record,label="{5\:\ 0x0057|r0.setMaxZ(java.lang.Double.valueOf(r3.getDouble(8)))\l}"];
Node_6 [shape=record,label="{6\:\ 0x0062}"];
Node_7 [shape=record,label="{7\:\ 0x0068|if (r3.isNull(9) != false) goto L_0x0075\l}"];
Node_8 [shape=record,label="{8\:\ 0x006a|r0.setMinM(java.lang.Double.valueOf(r3.getDouble(9)))\l}"];
Node_9 [shape=record,label="{9\:\ 0x0075}"];
Node_10 [shape=record,label="{10\:\ 0x007b|if (r3.isNull(10) != false) goto L_0x0088\l}"];
Node_11 [shape=record,label="{11\:\ 0x007d|r0.setMaxM(java.lang.Double.valueOf(r3.getDouble(10)))\l}"];
Node_12 [shape=record,label="{12\:\ 0x0088|RETURN\l|return r0\l}"];
MethodNode[shape=record,label="{public static mil.nga.geopackage.db.metadata.GeometryMetadata mil.nga.geopackage.db.metadata.GeometryMetadataDataSource.createGeometryMetadata((r3v0 android.database.Cursor A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
}

