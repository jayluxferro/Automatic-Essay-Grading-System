digraph "CFG formil.nga.geopackage.db.metadata.GeometryMetadataDataSource.getGeoPackageId(Ljava\/lang\/String;)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:mil.nga.geopackage.db.metadata.GeoPackageMetadataDataSource) =  mil.nga.geopackage.db.metadata.GeoPackageMetadataDataSource \l0x0002: IGET  (r1 I:mil.nga.geopackage.db.GeoPackageDatabase) = \l  (r2 I:mil.nga.geopackage.db.metadata.GeometryMetadataDataSource)\l mil.nga.geopackage.db.metadata.GeometryMetadataDataSource.db mil.nga.geopackage.db.GeoPackageDatabase \l0x0004: INVOKE  \l  (r0 I:mil.nga.geopackage.db.metadata.GeoPackageMetadataDataSource)\l  (r1 I:mil.nga.geopackage.db.GeoPackageDatabase)\l mil.nga.geopackage.db.metadata.GeoPackageMetadataDataSource.\<init\>(mil.nga.geopackage.db.GeoPackageDatabase):void type: DIRECT \l0x0007: INVOKE  (r3 I:mil.nga.geopackage.db.metadata.GeoPackageMetadata) = \l  (r0 I:mil.nga.geopackage.db.metadata.GeoPackageMetadataDataSource)\l  (r3 I:java.lang.String)\l mil.nga.geopackage.db.metadata.GeoPackageMetadataDataSource.get(java.lang.String):mil.nga.geopackage.db.metadata.GeoPackageMetadata type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0012 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|0x000d: INVOKE  (r0 I:long) = (r3 I:mil.nga.geopackage.db.metadata.GeoPackageMetadata) mil.nga.geopackage.db.metadata.GeoPackageMetadata.getId():long type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|0x0012: CONST  (r0 I:?[long, double]) = (\-1 ?[long, double]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|0x0014: RETURN  (r0 I:long) \l}"];
MethodNode[shape=record,label="{public long mil.nga.geopackage.db.metadata.GeometryMetadataDataSource.getGeoPackageId((r2 'this' I:mil.nga.geopackage.db.metadata.GeometryMetadataDataSource A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
}

