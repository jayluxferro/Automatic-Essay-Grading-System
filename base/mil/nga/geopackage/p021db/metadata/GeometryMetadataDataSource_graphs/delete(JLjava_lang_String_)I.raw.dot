digraph "CFG formil.nga.geopackage.db.metadata.GeometryMetadataDataSource.delete(JLjava\/lang\/String;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"geopackage_id = ? AND table_name = ?\" \l0x0002: CONST  (r1 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0003: NEW_ARRAY  (r1 I:java.lang.String[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.String[] \l0x0005: INVOKE  (r3 I:java.lang.String) = (r3 I:long) java.lang.String.valueOf(long):java.lang.String type: STATIC \l0x0009: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000a: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r4 I:?[int, short, byte, char])\l  (r3 I:?[OBJECT, ARRAY])\l \l0x000c: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000d: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r5 I:?[OBJECT, ARRAY])\l \l0x000f: IGET  (r3 I:mil.nga.geopackage.db.GeoPackageDatabase) = \l  (r2 I:mil.nga.geopackage.db.metadata.GeometryMetadataDataSource)\l mil.nga.geopackage.db.metadata.GeometryMetadataDataSource.db mil.nga.geopackage.db.GeoPackageDatabase \l0x0011: CONST_STR  (r4 I:java.lang.String) =  \"geom_metadata\" \l0x0013: INVOKE  (r3 I:int) = \l  (r3 I:mil.nga.geopackage.db.GeoPackageDatabase)\l  (r4 I:java.lang.String)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.String[])\l mil.nga.geopackage.db.GeoPackageDatabase.delete(java.lang.String, java.lang.String, java.lang.String[]):int type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0017|0x0017: RETURN  (r3 I:int) \l}"];
MethodNode[shape=record,label="{public int mil.nga.geopackage.db.metadata.GeometryMetadataDataSource.delete((r2 'this' I:mil.nga.geopackage.db.metadata.GeometryMetadataDataSource A[IMMUTABLE_TYPE, THIS]), (r3 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

