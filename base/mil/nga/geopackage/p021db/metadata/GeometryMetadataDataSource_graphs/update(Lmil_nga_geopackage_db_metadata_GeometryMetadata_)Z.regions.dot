digraph "CFG formil.nga.geopackage.db.metadata.GeometryMetadataDataSource.update(Lmil\/nga\/geopackage\/db\/metadata\/GeometryMetadata;)Z" {
subgraph cluster_Region_403500278 {
label = "R(2:0|(2:(1:2)|(1:3)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.String[] java.lang.String[] r1 = \{java.lang.String.valueOf(r9.getGeoPackageId()), r9.getTableName(), java.lang.String.valueOf(r9.getId())\}\landroid.content.ContentValues android.content.ContentValues r2 = new android.content.ContentValues()\lr2.put(\"min_x\", java.lang.Double.valueOf(r9.getMinX()))\lr2.put(\"max_x\", java.lang.Double.valueOf(r9.getMaxX()))\lr2.put(\"min_y\", java.lang.Double.valueOf(r9.getMinY()))\lr2.put(\"max_y\", java.lang.Double.valueOf(r9.getMaxY()))\lr2.put(\"min_z\", r9.getMinZ())\lr2.put(\"max_z\", r9.getMaxZ())\lr2.put(\"min_m\", r9.getMinM())\lr2.put(\"max_m\", r9.getMaxM())\l}"];
subgraph cluster_Region_1308228730 {
label = "R(2:(1:2)|(1:3))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1834915431 {
label = "IF [B:1:0x0087] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0087|if (r8.f237db.update(mil.nga.geopackage.p021db.metadata.GeometryMetadata.TABLE_NAME, r2, \"geopackage_id = ? AND table_name = ? AND geom_id = ?\", r1) \> 0) goto L_0x0089\l}"];
subgraph cluster_Region_1631401287 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0089|SYNTHETIC\lRETURN\lORIG_RETURN\l|return true\l}"];
}
}
subgraph cluster_Region_449186629 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
}
}
}
MethodNode[shape=record,label="{public boolean mil.nga.geopackage.db.metadata.GeometryMetadataDataSource.update((r8v0 'this' mil.nga.geopackage.db.metadata.GeometryMetadataDataSource A[IMMUTABLE_TYPE, THIS]), (r9v0 mil.nga.geopackage.db.metadata.GeometryMetadata A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
}

