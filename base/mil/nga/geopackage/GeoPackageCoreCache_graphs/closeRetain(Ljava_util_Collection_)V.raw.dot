digraph "CFG formil.nga.geopackage.GeoPackageCoreCache.closeRetain(Ljava\/util\/Collection;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.util.HashSet) =  java.util.HashSet \l0x0002: IGET  (r1 I:java.util.Map\<java.lang.String, T\>) = (r2 I:mil.nga.geopackage.GeoPackageCoreCache) mil.nga.geopackage.GeoPackageCoreCache.cache java.util.Map \l0x0004: INVOKE  (r1 I:java.util.Set) = (r1 I:java.util.Map) java.util.Map.keySet():java.util.Set type: INTERFACE \l0x0008: INVOKE  (r0 I:java.util.HashSet), (r1 I:java.util.Collection) java.util.HashSet.\<init\>(java.util.Collection):void type: DIRECT \l0x000b: INVOKE  (r0 I:java.util.Set), (r3 I:java.util.Collection) java.util.Set.removeAll(java.util.Collection):boolean type: INTERFACE \l0x000e: INVOKE  (r3 I:java.util.Iterator) = (r0 I:java.util.Set) java.util.Set.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0012|0x0012: INVOKE  (r0 I:boolean) = (r3 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x0016|0x0016: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0022 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0018|0x0018: INVOKE  (r0 I:java.lang.Object) = (r3 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x001c: CHECK_CAST  (r0 I:java.lang.String) = (java.lang.String) (r0 I:?[OBJECT, ARRAY]) \l0x001e: INVOKE  \l  (r2 I:mil.nga.geopackage.GeoPackageCoreCache)\l  (r0 I:java.lang.String)\l mil.nga.geopackage.GeoPackageCoreCache.close(java.lang.String):boolean type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0022|0x0022: RETURN   \l}"];
MethodNode[shape=record,label="{public void mil.nga.geopackage.GeoPackageCoreCache.closeRetain((r2 'this' I:mil.nga.geopackage.GeoPackageCoreCache A[IMMUTABLE_TYPE, THIS]), (r3 I:java.util.Collection\<java.lang.String\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/Collection\<, Ljava\/lang\/String;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
}

