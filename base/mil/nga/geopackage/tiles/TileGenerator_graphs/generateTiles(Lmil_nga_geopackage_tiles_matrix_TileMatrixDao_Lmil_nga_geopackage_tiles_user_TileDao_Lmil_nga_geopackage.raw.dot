digraph "CFG formil.nga.geopackage.tiles.TileGenerator.generateTiles(Lmil\/nga\/geopackage\/tiles\/matrix\/TileMatrixDao;Lmil\/nga\/geopackage\/tiles\/user\/TileDao;Lmil\/nga\/geopackage\/core\/contents\/Contents;ILmil\/nga\/geopackage\/tiles\/TileGrid;Lmil\/nga\/geopackage\/tiles\/TileGrid;JJZ)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r38 I:?[OBJECT, ARRAY]) \l0x0002: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r39 I:?[OBJECT, ARRAY]) \l0x0004: MOVE  (r15 I:?[OBJECT, ARRAY]) = (r40 I:?[OBJECT, ARRAY]) \l0x0006: MOVE  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r42 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0008: MOVE  (r11 I:?[long, double]) = (r45 I:?[long, double]) \l0x000a: MOVE  (r9 I:?[long, double]) = (r47 I:?[long, double]) \l0x000c: INVOKE  (r0 I:long) = (r43 I:mil.nga.geopackage.tiles.TileGrid) mil.nga.geopackage.tiles.TileGrid.getMinX():long type: VIRTUAL \l0x0010: CONST  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0012: CONST  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0014: MOVE  (r18 I:?[long, double]) = (r0 I:?[long, double]) \l0x0016: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) \l0x0018: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0019: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x001a|0x001a: INVOKE  (r3 I:long) = (r43 I:mil.nga.geopackage.tiles.TileGrid) mil.nga.geopackage.tiles.TileGrid.getMaxX():long type: VIRTUAL \l0x001e: CONST  (r14 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x001f: CMP_L  (r3 I:int) = (r18 I:long), (r3 I:long) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0021|0x0021: IF  (r3 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:55:0x011b \l}"];
Node_3 [shape=record,label="{3\:\ 0x0023|0x0023: IGET  (r3 I:mil.nga.geopackage.io.GeoPackageProgress) = (r6 I:mil.nga.geopackage.tiles.TileGenerator) mil.nga.geopackage.tiles.TileGenerator.progress mil.nga.geopackage.io.GeoPackageProgress \l}"];
Node_4 [shape=record,label="{4\:\ 0x0025|0x0025: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0031 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0027|0x0027: IGET  (r3 I:mil.nga.geopackage.io.GeoPackageProgress) = (r6 I:mil.nga.geopackage.tiles.TileGenerator) mil.nga.geopackage.tiles.TileGenerator.progress mil.nga.geopackage.io.GeoPackageProgress \l0x0029: INVOKE  (r3 I:boolean) = (r3 I:mil.nga.geopackage.io.GeoPackageProgress) mil.nga.geopackage.io.GeoPackageProgress.isActive():boolean type: INTERFACE \l}"];
Node_6 [shape=record,label="{6\:\ 0x002d|0x002d: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0031 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0031|0x0031: INVOKE  (r3 I:long) = (r43 I:mil.nga.geopackage.tiles.TileGrid) mil.nga.geopackage.tiles.TileGrid.getMinY():long type: VIRTUAL \l0x0035: MOVE  (r22 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0037: MOVE  (r23 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l0x0039: MOVE  (r24 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x003b: MOVE  (r20 I:?[long, double]) = (r3 I:?[long, double]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x003d|0x003d: INVOKE  (r0 I:long) = (r43 I:mil.nga.geopackage.tiles.TileGrid) mil.nga.geopackage.tiles.TileGrid.getMaxY():long type: VIRTUAL \l0x0041: CONST  (r25 I:?[long, double]) = (1 ?[long, double]) \l0x0043: CMP_L  (r0 I:int) = (r20 I:long), (r0 I:long) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0045|0x0045: IF  (r0 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:54:0x0108 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0047|0x0047: IGET  (r0 I:mil.nga.geopackage.io.GeoPackageProgress) = (r6 I:mil.nga.geopackage.tiles.TileGenerator) mil.nga.geopackage.tiles.TileGenerator.progress mil.nga.geopackage.io.GeoPackageProgress \l}"];
Node_12 [shape=record,label="{12\:\ 0x0049|0x0049: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0055 \l}"];
Node_13 [shape=record,label="{13\:\ 0x004b|0x004b: IGET  (r0 I:mil.nga.geopackage.io.GeoPackageProgress) = (r6 I:mil.nga.geopackage.tiles.TileGenerator) mil.nga.geopackage.tiles.TileGenerator.progress mil.nga.geopackage.io.GeoPackageProgress \l0x004d: INVOKE  (r0 I:boolean) = (r0 I:mil.nga.geopackage.io.GeoPackageProgress) mil.nga.geopackage.io.GeoPackageProgress.isActive():boolean type: INTERFACE \l}"];
Node_14 [shape=record,label="{14\:\ 0x0051|0x0051: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0055 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0055|0x0055: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r38 I:?[OBJECT, ARRAY]) \l0x0057: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r42 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0059: MOVE  (r2 I:?[long, double]) = (r18 I:?[long, double]) \l0x005b: MOVE  (r4 I:?[long, double]) = (r20 I:?[long, double]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x005d|SYNTHETIC\lSplitter:B:17:0x005d\l}"];
Node_18 [shape=record,label="{18\:\ ?|Splitter:B:17:0x005d\l|0x005d: INVOKE  (r0 I:byte[]) = \l  (r0 I:mil.nga.geopackage.tiles.TileGenerator)\l  (r1 I:int)\l  (r2 I:long)\l  (r4 I:long)\l mil.nga.geopackage.tiles.TileGenerator.createTile(int, long, long):byte[] type: VIRTUAL A[Catch:\{ Exception \-\> 0x00f0 \}, TRY_ENTER]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0061|0x0061: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:0x00f0 A[Catch:\{ Exception \-\> 0x00f0 \}]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0063|0x0063: IGET  (r1 I:android.graphics.Bitmap$CompressFormat) = (r6 I:mil.nga.geopackage.tiles.TileGenerator) mil.nga.geopackage.tiles.TileGenerator.compressFormat android.graphics.Bitmap$CompressFormat A[Catch:\{ Exception \-\> 0x00f0 \}]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0065|0x0065: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0078 A[Catch:\{ Exception \-\> 0x00f0 \}]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0067|0x0067: IGET  (r1 I:android.graphics.BitmapFactory$Options) = (r6 I:mil.nga.geopackage.tiles.TileGenerator) mil.nga.geopackage.tiles.TileGenerator.options android.graphics.BitmapFactory$Options A[Catch:\{ Exception \-\> 0x00f0 \}]\l0x0069: INVOKE  (r1 I:android.graphics.Bitmap) = \l  (r0 I:byte[])\l  (r1 I:android.graphics.BitmapFactory$Options)\l mil.nga.geopackage.io.BitmapConverter.toBitmap(byte[], android.graphics.BitmapFactory$Options):android.graphics.Bitmap type: STATIC A[Catch:\{ Exception \-\> 0x00f0 \}]\l}"];
Node_23 [shape=record,label="{23\:\ 0x006d|0x006d: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x007a A[Catch:\{ Exception \-\> 0x00f0 \}]\l}"];
Node_24 [shape=record,label="{24\:\ 0x006f|0x006f: IGET  (r0 I:android.graphics.Bitmap$CompressFormat) = (r6 I:mil.nga.geopackage.tiles.TileGenerator) mil.nga.geopackage.tiles.TileGenerator.compressFormat android.graphics.Bitmap$CompressFormat A[Catch:\{ Exception \-\> 0x00f0 \}]\l0x0071: IGET  (r2 I:int) = (r6 I:mil.nga.geopackage.tiles.TileGenerator) mil.nga.geopackage.tiles.TileGenerator.compressQuality int A[Catch:\{ Exception \-\> 0x00f0 \}]\l0x0073: INVOKE  (r0 I:byte[]) = \l  (r1 I:android.graphics.Bitmap)\l  (r0 I:android.graphics.Bitmap$CompressFormat)\l  (r2 I:int)\l mil.nga.geopackage.io.BitmapConverter.toBytes(android.graphics.Bitmap, android.graphics.Bitmap$CompressFormat, int):byte[] type: STATIC A[Catch:\{ Exception \-\> 0x00f0 \}]\l0x0077: GOTO  \-\> 0x007a A[Catch:\{ Exception \-\> 0x00f0 \}]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0078|0x0078: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) A[Catch:\{ Exception \-\> 0x00f0 \}]\l}"];
Node_26 [shape=record,label="{26\:\ 0x007a|0x007a: INVOKE  (r2 I:mil.nga.geopackage.tiles.user.TileRow) = (r40 I:mil.nga.geopackage.tiles.user.TileDao) mil.nga.geopackage.tiles.user.TileDao.newRow():mil.nga.geopackage.tiles.user.TileRow type: VIRTUAL A[Catch:\{ Exception \-\> 0x00f0 \}]\l0x007e: CAST  (r3 I:long) = (long) (r13 I:int) A[Catch:\{ Exception \-\> 0x00f0 \}]\l0x007f: INVOKE  (r2 I:mil.nga.geopackage.tiles.user.TileRow), (r3 I:long) mil.nga.geopackage.tiles.user.TileRow.setZoomLevel(long):void type: VIRTUAL A[Catch:\{ Exception \-\> 0x00f0 \}]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0082|0x0082: IF  (r44 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x00a5 A[Catch:\{ Exception \-\> 0x00f0 \}]\l}"];
Node_28 [shape=record,label="{28\:\ 0x0084|0x0084: INVOKE  (r27 I:long) = (r43 I:mil.nga.geopackage.tiles.TileGrid) mil.nga.geopackage.tiles.TileGrid.getMinX():long type: VIRTUAL A[Catch:\{ Exception \-\> 0x00f0 \}]\l0x0088: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ Exception \-\> 0x00f0 \}]\l0x0089: ARITH  (r27 I:long) = (r18 I:long) \- (r27 I:long) A[Catch:\{ Exception \-\> 0x00f0 \}]\l0x008b: INVOKE  (r29 I:long) = (r44 I:mil.nga.geopackage.tiles.TileGrid) mil.nga.geopackage.tiles.TileGrid.getMinX():long type: VIRTUAL A[Catch:\{ Exception \-\> 0x00f0 \}]\l0x008f: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ Exception \-\> 0x00f0 \}]\l0x0090: ARITH  (r27 I:long) = (r27 I:long) + (r29 I:long) A[Catch:\{ Exception \-\> 0x00f0 \}]\l0x0092: INVOKE  (r29 I:long) = (r43 I:mil.nga.geopackage.tiles.TileGrid) mil.nga.geopackage.tiles.TileGrid.getMinY():long type: VIRTUAL A[Catch:\{ Exception \-\> 0x00f0 \}]\l0x0096: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ Exception \-\> 0x00f0 \}]\l0x0097: ARITH  (r29 I:long) = (r20 I:long) \- (r29 I:long) A[Catch:\{ Exception \-\> 0x00f0 \}]\l0x0099: INVOKE  (r31 I:long) = (r44 I:mil.nga.geopackage.tiles.TileGrid) mil.nga.geopackage.tiles.TileGrid.getMinY():long type: VIRTUAL A[Catch:\{ Exception \-\> 0x00f0 \}]\l0x009c: NOP   A[TRY_LEAVE]\l}"];
Node_29 [shape=record,label="{29\:\ 0x009d|0x009d: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x009e: ARITH  (r29 I:long) = (r29 I:long) + (r31 I:long) \l0x00a0: MOVE  (r33 I:?[long, double]) = (r27 I:?[long, double]) \l0x00a2: MOVE  (r35 I:?[long, double]) = (r29 I:?[long, double]) \l}"];
Node_30 [shape=record,label="{30\:\ 0x00a5|0x00a5: MOVE  (r33 I:?[long, double]) = (r18 I:?[long, double]) \l0x00a7: MOVE  (r35 I:?[long, double]) = (r20 I:?[long, double]) \l}"];
Node_31 [shape=record,label="{31\:\ 0x00a9|0x00a9: IF  (r49 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x00b8 \l}"];
Node_32 [shape=record,label="{32\:\ 0x00ab|0x00ab: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r40 I:?[OBJECT, ARRAY]) \l0x00ad: MOVE  (r9 I:?[long, double]) = (r33 I:?[long, double]) \l0x00af: MOVE  (r11 I:?[long, double]) = (r35 I:?[long, double]) \l0x00b1: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00b2: CONST  (r7 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x00b3: MOVE  (r13 I:?[long, double]) = (r3 I:?[long, double]) \l}"];
Node_33 [shape=record,label="{33\:\ 0x00b4|SYNTHETIC\lSplitter:B:33:0x00b4\l}"];
Node_34 [shape=record,label="{34\:\ ?|Splitter:B:33:0x00b4\l|0x00b4: INVOKE  \l  (r8 I:mil.nga.geopackage.tiles.user.TileDao)\l  (r9 I:long)\l  (r11 I:long)\l  (r13 I:long)\l mil.nga.geopackage.tiles.user.TileDao.deleteTile(long, long, long):int type: VIRTUAL A[Catch:\{ Exception \-\> 0x00f2 \}, TRY_ENTER]\l0x00b7: GOTO  \-\> 0x00ba A[Catch:\{ Exception \-\> 0x00f2 \}]\l}"];
Node_35 [shape=record,label="{35\:\ 0x00b8|0x00b8: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ Exception \-\> 0x00f2 \}]\l0x00b9: CONST  (r7 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ Exception \-\> 0x00f2 \}]\l}"];
Node_36 [shape=record,label="{36\:\ 0x00ba|0x00ba: MOVE  (r3 I:?[long, double]) = (r33 I:?[long, double]) A[Catch:\{ Exception \-\> 0x00f2 \}]\l0x00bc: INVOKE  (r2 I:mil.nga.geopackage.tiles.user.TileRow), (r3 I:long) mil.nga.geopackage.tiles.user.TileRow.setTileColumn(long):void type: VIRTUAL A[Catch:\{ Exception \-\> 0x00f2 \}]\l0x00bf: MOVE  (r3 I:?[long, double]) = (r35 I:?[long, double]) A[Catch:\{ Exception \-\> 0x00f2 \}]\l0x00c1: INVOKE  (r2 I:mil.nga.geopackage.tiles.user.TileRow), (r3 I:long) mil.nga.geopackage.tiles.user.TileRow.setTileRow(long):void type: VIRTUAL A[Catch:\{ Exception \-\> 0x00f2 \}]\l0x00c4: INVOKE  (r2 I:mil.nga.geopackage.tiles.user.TileRow), (r0 I:byte[]) mil.nga.geopackage.tiles.user.TileRow.setTileData(byte[]):void type: VIRTUAL A[Catch:\{ Exception \-\> 0x00f2 \}]\l0x00c7: INVOKE  \l  (r15 I:mil.nga.geopackage.tiles.user.TileDao)\l  (r2 I:mil.nga.geopackage.user.UserCoreRow)\l mil.nga.geopackage.tiles.user.TileDao.create(mil.nga.geopackage.user.UserCoreRow):long type: VIRTUAL A[Catch:\{ Exception \-\> 0x00f2 \}]\l0x00ca: ARITH  (r24 I:int) = (r24 I:int) + (1 int) A[Catch:\{ Exception \-\> 0x00f2 \}]\l}"];
Node_37 [shape=record,label="{37\:\ 0x00cc|0x00cc: IF  (r22 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:49:0x00f2 A[Catch:\{ Exception \-\> 0x00f2 \}]\l}"];
Node_38 [shape=record,label="{38\:\ 0x00ce|0x00ce: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x00d6 A[Catch:\{ Exception \-\> 0x00f2 \}]\l}"];
Node_39 [shape=record,label="{39\:\ 0x00d0|0x00d0: IGET  (r1 I:android.graphics.BitmapFactory$Options) = (r6 I:mil.nga.geopackage.tiles.TileGenerator) mil.nga.geopackage.tiles.TileGenerator.options android.graphics.BitmapFactory$Options A[Catch:\{ Exception \-\> 0x00f2 \}]\l0x00d2: INVOKE  (r1 I:android.graphics.Bitmap) = \l  (r0 I:byte[])\l  (r1 I:android.graphics.BitmapFactory$Options)\l mil.nga.geopackage.io.BitmapConverter.toBitmap(byte[], android.graphics.BitmapFactory$Options):android.graphics.Bitmap type: STATIC A[Catch:\{ Exception \-\> 0x00f2 \}]\l}"];
Node_40 [shape=record,label="{40\:\ 0x00d6|0x00d6: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:49:0x00f2 A[Catch:\{ Exception \-\> 0x00f2 \}]\l}"];
Node_41 [shape=record,label="{41\:\ 0x00d8|0x00d8: INVOKE  (r0 I:int) = (r1 I:android.graphics.Bitmap) android.graphics.Bitmap.getWidth():int type: VIRTUAL A[Catch:\{ Exception \-\> 0x00f2 \}]\l0x00dc: INVOKE  (r0 I:java.lang.Integer) = (r0 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC A[Catch:\{ Exception \-\> 0x00f2 \}]\l0x00df: NOP   A[TRY_LEAVE]\l}"];
Node_42 [shape=record,label="{42\:\ 0x00e0|SYNTHETIC\lSplitter:B:42:0x00e0\l}"];
Node_43 [shape=record,label="{43\:\ ?|Splitter:B:42:0x00e0\l|0x00e0: INVOKE  (r1 I:int) = (r1 I:android.graphics.Bitmap) android.graphics.Bitmap.getHeight():int type: VIRTUAL A[Catch:\{ Exception \-\> 0x00ed \}, TRY_ENTER]\l0x00e4: INVOKE  (r1 I:java.lang.Integer) = (r1 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC A[Catch:\{ Exception \-\> 0x00ed \}]\l0x00e7: NOP   A[TRY_LEAVE]\l}"];
Node_44 [shape=record,label="{44\:\ 0x00e8|0x00e8: MOVE  (r22 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x00ea: MOVE  (r23 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_45 [shape=record,label="{45\:\ 0x00ed|0x00ed: MOVE  (r22 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_46 [shape=record,label="{46\:\ ?|SYNTHETIC\lExcHandler: Exception null\lSplitter:B:42:0x00e0\l}"];
Node_47 [shape=record,label="{47\:\ 0x00f0|0x00f0: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00f1: CONST  (r7 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_48 [shape=record,label="{48\:\ ?|SYNTHETIC\lExcHandler: Exception null\lSplitter:B:17:0x005d\l}"];
Node_49 [shape=record,label="{49\:\ 0x00f2|0x00f2: IGET  (r0 I:mil.nga.geopackage.io.GeoPackageProgress) = (r6 I:mil.nga.geopackage.tiles.TileGenerator) mil.nga.geopackage.tiles.TileGenerator.progress mil.nga.geopackage.io.GeoPackageProgress \l}"];
Node_50 [shape=record,label="{50\:\ ?|SYNTHETIC\lExcHandler: Exception null\lSplitter:B:33:0x00b4\l}"];
Node_51 [shape=record,label="{51\:\ 0x00f4|0x00f4: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:53:0x00fb \l}"];
Node_52 [shape=record,label="{52\:\ 0x00f6|0x00f6: IGET  (r0 I:mil.nga.geopackage.io.GeoPackageProgress) = (r6 I:mil.nga.geopackage.tiles.TileGenerator) mil.nga.geopackage.tiles.TileGenerator.progress mil.nga.geopackage.io.GeoPackageProgress \l0x00f8: INVOKE  (r0 I:mil.nga.geopackage.io.GeoPackageProgress), (r7 I:int) mil.nga.geopackage.io.GeoPackageProgress.addProgress(int):void type: INTERFACE \l}"];
Node_53 [shape=record,label="{53\:\ 0x00fb|0x00fb: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00fc: ARITH  (r20 I:long) = (r20 I:long) + (r25 I:long) \l0x00fe: MOVE  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00ff: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r39 I:?[OBJECT, ARRAY]) \l0x0101: MOVE  (r9 I:?[long, double]) = (r47 I:?[long, double]) \l0x0103: MOVE  (r11 I:?[long, double]) = (r45 I:?[long, double]) \l0x0105: CONST  (r14 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_54 [shape=record,label="{54\:\ 0x0108|0x0108: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0109: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x010a: ARITH  (r18 I:long) = (r18 I:long) + (r25 I:long) \l0x010c: MOVE  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x010d: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r22 I:?[OBJECT, ARRAY]) \l0x010f: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x0111: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r24 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0113: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r39 I:?[OBJECT, ARRAY]) \l0x0115: MOVE  (r9 I:?[long, double]) = (r47 I:?[long, double]) \l0x0117: MOVE  (r11 I:?[long, double]) = (r45 I:?[long, double]) \l}"];
Node_55 [shape=record,label="{55\:\ 0x011b|0x011b: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x011c: CONST  (r7 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_56 [shape=record,label="{56\:\ 0x011d|0x011d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:65:0x019e \l}"];
Node_57 [shape=record,label="{57\:\ 0x011f|0x011f: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:59:0x0123 \l}"];
Node_59 [shape=record,label="{59\:\ 0x0123|0x0123: IF  (r49 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:61:0x0137 \l}"];
Node_60 [shape=record,label="{60\:\ 0x0125|0x0125: NEW_INSTANCE  (r3 I:mil.nga.geopackage.tiles.matrix.TileMatrixKey) =  mil.nga.geopackage.tiles.matrix.TileMatrixKey \l0x0127: IGET  (r4 I:java.lang.String) = (r6 I:mil.nga.geopackage.tiles.TileGenerator) mil.nga.geopackage.tiles.TileGenerator.tableName java.lang.String \l0x0129: CAST  (r8 I:long) = (long) (r5 I:int) \l0x012a: INVOKE  \l  (r3 I:mil.nga.geopackage.tiles.matrix.TileMatrixKey)\l  (r4 I:java.lang.String)\l  (r8 I:long)\l mil.nga.geopackage.tiles.matrix.TileMatrixKey.\<init\>(java.lang.String, long):void type: DIRECT \l0x012d: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r39 I:?[OBJECT, ARRAY]) \l0x012f: INVOKE  (r3 I:boolean) = \l  (r4 I:mil.nga.geopackage.tiles.matrix.TileMatrixDao)\l  (r3 I:mil.nga.geopackage.tiles.matrix.TileMatrixKey)\l mil.nga.geopackage.tiles.matrix.TileMatrixDao.idExists(mil.nga.geopackage.tiles.matrix.TileMatrixKey):boolean type: VIRTUAL \l0x0133: ARITH  (r14 I:?[int, boolean, short, byte, char]) = (r3 I:?[int, boolean, short, byte, char]) ^ (1 ?[boolean, int, float, short, byte, char]) \l0x0135: MOVE  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_61 [shape=record,label="{61\:\ 0x0137|0x0137: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r39 I:?[OBJECT, ARRAY]) \l}"];
Node_62 [shape=record,label="{62\:\ 0x0139|0x0139: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:64:0x019a \l}"];
Node_63 [shape=record,label="{63\:\ 0x013b|0x013b: IGET  (r3 I:mil.nga.geopackage.BoundingBox) = (r6 I:mil.nga.geopackage.tiles.TileGenerator) mil.nga.geopackage.tiles.TileGenerator.tileGridBoundingBox mil.nga.geopackage.BoundingBox \l0x013d: INVOKE  (r7 I:double) = (r3 I:mil.nga.geopackage.BoundingBox) mil.nga.geopackage.BoundingBox.getMaxLongitude():double type: VIRTUAL \l0x0141: IGET  (r3 I:mil.nga.geopackage.BoundingBox) = (r6 I:mil.nga.geopackage.tiles.TileGenerator) mil.nga.geopackage.tiles.TileGenerator.tileGridBoundingBox mil.nga.geopackage.BoundingBox \l0x0143: INVOKE  (r9 I:double) = (r3 I:mil.nga.geopackage.BoundingBox) mil.nga.geopackage.BoundingBox.getMinLongitude():double type: VIRTUAL \l0x0147: ARITH  (r7 I:double) = (r7 I:double) \- (r9 I:double) \l0x0148: MOVE  (r9 I:?[long, double]) = (r45 I:?[long, double]) \l0x014a: CAST  (r11 I:double) = (double) (r9 I:long) \l0x014b: ARITH  (r7 I:double) = (r7 I:double) \/ (r11 I:double) \l0x014c: INVOKE  (r3 I:int) = (r0 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l0x0150: CAST  (r11 I:double) = (double) (r3 I:int) \l0x0151: ARITH  (r7 I:double) = (r7 I:double) \/ (r11 I:double) \l0x0152: IGET  (r3 I:mil.nga.geopackage.BoundingBox) = (r6 I:mil.nga.geopackage.tiles.TileGenerator) mil.nga.geopackage.tiles.TileGenerator.tileGridBoundingBox mil.nga.geopackage.BoundingBox \l0x0154: INVOKE  (r11 I:double) = (r3 I:mil.nga.geopackage.BoundingBox) mil.nga.geopackage.BoundingBox.getMaxLatitude():double type: VIRTUAL \l0x0158: IGET  (r3 I:mil.nga.geopackage.BoundingBox) = (r6 I:mil.nga.geopackage.tiles.TileGenerator) mil.nga.geopackage.tiles.TileGenerator.tileGridBoundingBox mil.nga.geopackage.BoundingBox \l0x015a: INVOKE  (r13 I:double) = (r3 I:mil.nga.geopackage.BoundingBox) mil.nga.geopackage.BoundingBox.getMinLatitude():double type: VIRTUAL \l0x015e: ARITH  (r11 I:double) = (r11 I:double) \- (r13 I:double) \l0x015f: MOVE  (r37 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0161: MOVE  (r13 I:?[long, double]) = (r47 I:?[long, double]) \l0x0163: CAST  (r2 I:double) = (double) (r13 I:long) \l0x0164: ARITH  (r11 I:double) = (r11 I:double) \/ (r2 I:double) \l0x0165: INVOKE  (r2 I:int) = (r1 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l0x0169: CAST  (r2 I:double) = (double) (r2 I:int) \l0x016a: ARITH  (r11 I:double) = (r11 I:double) \/ (r2 I:double) \l0x016b: NEW_INSTANCE  (r2 I:mil.nga.geopackage.tiles.matrix.TileMatrix) =  mil.nga.geopackage.tiles.matrix.TileMatrix \l0x016d: INVOKE  (r2 I:mil.nga.geopackage.tiles.matrix.TileMatrix) mil.nga.geopackage.tiles.matrix.TileMatrix.\<init\>():void type: DIRECT \l0x0170: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r41 I:?[OBJECT, ARRAY]) \l0x0172: INVOKE  \l  (r2 I:mil.nga.geopackage.tiles.matrix.TileMatrix)\l  (r3 I:mil.nga.geopackage.core.contents.Contents)\l mil.nga.geopackage.tiles.matrix.TileMatrix.setContents(mil.nga.geopackage.core.contents.Contents):void type: VIRTUAL \l0x0175: CAST  (r5 I:long) = (long) (r5 I:int) \l0x0176: INVOKE  \l  (r2 I:mil.nga.geopackage.tiles.matrix.TileMatrix)\l  (r5 I:long)\l mil.nga.geopackage.tiles.matrix.TileMatrix.setZoomLevel(long):void type: VIRTUAL \l0x0179: INVOKE  \l  (r2 I:mil.nga.geopackage.tiles.matrix.TileMatrix)\l  (r9 I:long)\l mil.nga.geopackage.tiles.matrix.TileMatrix.setMatrixWidth(long):void type: VIRTUAL \l0x017c: INVOKE  \l  (r2 I:mil.nga.geopackage.tiles.matrix.TileMatrix)\l  (r13 I:long)\l mil.nga.geopackage.tiles.matrix.TileMatrix.setMatrixHeight(long):void type: VIRTUAL \l0x017f: INVOKE  (r0 I:int) = (r0 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l0x0183: CAST  (r5 I:long) = (long) (r0 I:int) \l0x0184: INVOKE  \l  (r2 I:mil.nga.geopackage.tiles.matrix.TileMatrix)\l  (r5 I:long)\l mil.nga.geopackage.tiles.matrix.TileMatrix.setTileWidth(long):void type: VIRTUAL \l0x0187: INVOKE  (r0 I:int) = (r1 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l0x018b: CAST  (r0 I:long) = (long) (r0 I:int) \l0x018c: INVOKE  \l  (r2 I:mil.nga.geopackage.tiles.matrix.TileMatrix)\l  (r0 I:long)\l mil.nga.geopackage.tiles.matrix.TileMatrix.setTileHeight(long):void type: VIRTUAL \l0x018f: INVOKE  \l  (r2 I:mil.nga.geopackage.tiles.matrix.TileMatrix)\l  (r7 I:double)\l mil.nga.geopackage.tiles.matrix.TileMatrix.setPixelXSize(double):void type: VIRTUAL \l0x0192: INVOKE  \l  (r2 I:mil.nga.geopackage.tiles.matrix.TileMatrix)\l  (r11 I:double)\l mil.nga.geopackage.tiles.matrix.TileMatrix.setPixelYSize(double):void type: VIRTUAL \l0x0195: INVOKE  \l  (r4 I:mil.nga.geopackage.tiles.matrix.TileMatrixDao)\l  (r2 I:java.lang.Object)\l mil.nga.geopackage.tiles.matrix.TileMatrixDao.create(java.lang.Object):int type: VIRTUAL \l}"];
Node_64 [shape=record,label="{64\:\ 0x019a|0x019a: MOVE  (r37 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_65 [shape=record,label="{65\:\ 0x019e|0x019e: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x01a0: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x01a3: CONST_STR  (r1 I:java.lang.String) =  \"zoom_level\" \l0x01a5: INVOKE  (r2 I:java.lang.Integer) = (r42 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x01a9: INVOKE  (r1 I:java.lang.String) = \l  (r15 I:mil.nga.geopackage.tiles.user.TileDao)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.Object)\l mil.nga.geopackage.tiles.user.TileDao.buildWhere(java.lang.String, java.lang.Object):java.lang.String type: VIRTUAL \l0x01ad: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x01b0: CONST_STR  (r1 I:java.lang.String) =  \" AND \" \l0x01b2: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x01b5: CONST_STR  (r1 I:java.lang.String) =  \"tile_column\" \l0x01b7: INVOKE  (r2 I:long) = (r43 I:mil.nga.geopackage.tiles.TileGrid) mil.nga.geopackage.tiles.TileGrid.getMinX():long type: VIRTUAL \l0x01bb: INVOKE  (r2 I:java.lang.Long) = (r2 I:long) java.lang.Long.valueOf(long):java.lang.Long type: STATIC \l0x01bf: CONST_STR  (r3 I:java.lang.String) =  \"\>=\" \l0x01c1: INVOKE  (r1 I:java.lang.String) = \l  (r15 I:mil.nga.geopackage.tiles.user.TileDao)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.Object)\l  (r3 I:java.lang.String)\l mil.nga.geopackage.tiles.user.TileDao.buildWhere(java.lang.String, java.lang.Object, java.lang.String):java.lang.String type: VIRTUAL \l0x01c5: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x01c8: CONST_STR  (r1 I:java.lang.String) =  \" AND \" \l0x01ca: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x01cd: CONST_STR  (r1 I:java.lang.String) =  \"tile_column\" \l0x01cf: INVOKE  (r2 I:long) = (r43 I:mil.nga.geopackage.tiles.TileGrid) mil.nga.geopackage.tiles.TileGrid.getMaxX():long type: VIRTUAL \l0x01d3: INVOKE  (r2 I:java.lang.Long) = (r2 I:long) java.lang.Long.valueOf(long):java.lang.Long type: STATIC \l0x01d7: CONST_STR  (r3 I:java.lang.String) =  \"\<=\" \l0x01d9: INVOKE  (r1 I:java.lang.String) = \l  (r15 I:mil.nga.geopackage.tiles.user.TileDao)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.Object)\l  (r3 I:java.lang.String)\l mil.nga.geopackage.tiles.user.TileDao.buildWhere(java.lang.String, java.lang.Object, java.lang.String):java.lang.String type: VIRTUAL \l0x01dd: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x01e0: CONST_STR  (r1 I:java.lang.String) =  \" AND \" \l0x01e2: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x01e5: CONST_STR  (r1 I:java.lang.String) =  \"tile_row\" \l0x01e7: INVOKE  (r2 I:long) = (r43 I:mil.nga.geopackage.tiles.TileGrid) mil.nga.geopackage.tiles.TileGrid.getMinY():long type: VIRTUAL \l0x01eb: INVOKE  (r2 I:java.lang.Long) = (r2 I:long) java.lang.Long.valueOf(long):java.lang.Long type: STATIC \l0x01ef: CONST_STR  (r3 I:java.lang.String) =  \"\>=\" \l0x01f1: INVOKE  (r1 I:java.lang.String) = \l  (r15 I:mil.nga.geopackage.tiles.user.TileDao)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.Object)\l  (r3 I:java.lang.String)\l mil.nga.geopackage.tiles.user.TileDao.buildWhere(java.lang.String, java.lang.Object, java.lang.String):java.lang.String type: VIRTUAL \l0x01f5: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x01f8: CONST_STR  (r1 I:java.lang.String) =  \" AND \" \l0x01fa: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x01fd: CONST_STR  (r1 I:java.lang.String) =  \"tile_row\" \l0x01ff: INVOKE  (r2 I:long) = (r43 I:mil.nga.geopackage.tiles.TileGrid) mil.nga.geopackage.tiles.TileGrid.getMaxY():long type: VIRTUAL \l0x0203: INVOKE  (r2 I:java.lang.Long) = (r2 I:long) java.lang.Long.valueOf(long):java.lang.Long type: STATIC \l0x0207: CONST_STR  (r3 I:java.lang.String) =  \"\<=\" \l0x0209: INVOKE  (r1 I:java.lang.String) = \l  (r15 I:mil.nga.geopackage.tiles.user.TileDao)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.Object)\l  (r3 I:java.lang.String)\l mil.nga.geopackage.tiles.user.TileDao.buildWhere(java.lang.String, java.lang.Object, java.lang.String):java.lang.String type: VIRTUAL \l0x020d: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0210: CONST  (r1 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l0x0211: NEW_ARRAY  (r1 I:java.lang.Object[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x0213: INVOKE  (r2 I:java.lang.Integer) = (r42 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0217: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r17 I:?[int, short, byte, char])\l  (r2 I:?[OBJECT, ARRAY])\l \l0x0219: INVOKE  (r2 I:long) = (r43 I:mil.nga.geopackage.tiles.TileGrid) mil.nga.geopackage.tiles.TileGrid.getMinX():long type: VIRTUAL \l0x021d: INVOKE  (r2 I:java.lang.Long) = (r2 I:long) java.lang.Long.valueOf(long):java.lang.Long type: STATIC \l0x0221: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r7 I:?[int, short, byte, char])\l  (r2 I:?[OBJECT, ARRAY])\l \l0x0223: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0224: INVOKE  (r3 I:long) = (r43 I:mil.nga.geopackage.tiles.TileGrid) mil.nga.geopackage.tiles.TileGrid.getMaxX():long type: VIRTUAL \l0x0228: INVOKE  (r3 I:java.lang.Long) = (r3 I:long) java.lang.Long.valueOf(long):java.lang.Long type: STATIC \l0x022c: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r3 I:?[OBJECT, ARRAY])\l \l0x022e: CONST  (r2 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x022f: INVOKE  (r3 I:long) = (r43 I:mil.nga.geopackage.tiles.TileGrid) mil.nga.geopackage.tiles.TileGrid.getMinY():long type: VIRTUAL \l0x0233: INVOKE  (r3 I:java.lang.Long) = (r3 I:long) java.lang.Long.valueOf(long):java.lang.Long type: STATIC \l0x0237: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r3 I:?[OBJECT, ARRAY])\l \l0x0239: CONST  (r2 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x023a: INVOKE  (r3 I:long) = (r43 I:mil.nga.geopackage.tiles.TileGrid) mil.nga.geopackage.tiles.TileGrid.getMaxY():long type: VIRTUAL \l0x023e: INVOKE  (r3 I:java.lang.Long) = (r3 I:long) java.lang.Long.valueOf(long):java.lang.Long type: STATIC \l0x0242: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r3 I:?[OBJECT, ARRAY])\l \l0x0244: INVOKE  (r1 I:java.lang.String[]) = \l  (r15 I:mil.nga.geopackage.tiles.user.TileDao)\l  (r1 I:java.lang.Object[])\l mil.nga.geopackage.tiles.user.TileDao.buildWhereArgs(java.lang.Object[]):java.lang.String[] type: VIRTUAL \l0x0248: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x024c: INVOKE  \l  (r15 I:mil.nga.geopackage.tiles.user.TileDao)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.String[])\l mil.nga.geopackage.tiles.user.TileDao.delete(java.lang.String, java.lang.String[]):int type: VIRTUAL \l0x024f: CONST  (r37 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_66 [shape=record,label="{66\:\ 0x0251|0x0251: RETURN  (r37 I:int) \l}"];
MethodNode[shape=record,label="{private int mil.nga.geopackage.tiles.TileGenerator.generateTiles((r38 'this' I:mil.nga.geopackage.tiles.TileGenerator A[IMMUTABLE_TYPE, THIS]), (r39 I:mil.nga.geopackage.tiles.matrix.TileMatrixDao A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r40 I:mil.nga.geopackage.tiles.user.TileDao A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r41 I:mil.nga.geopackage.core.contents.Contents A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r42 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r43 I:mil.nga.geopackage.tiles.TileGrid A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r44 I:mil.nga.geopackage.tiles.TileGrid A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r45 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r47 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r49 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException, java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_55;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_8;
Node_6 -> Node_55[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_54;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_16;
Node_13 -> Node_14;
Node_14 -> Node_16;
Node_14 -> Node_54[style=dashed];
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_17 -> Node_48;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_47;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_25;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_26;
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_30;
Node_28 -> Node_29;
Node_29 -> Node_31;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_35;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_33 -> Node_50;
Node_34 -> Node_36;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_49;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_40;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_49;
Node_41 -> Node_42;
Node_42 -> Node_43;
Node_42 -> Node_46;
Node_43 -> Node_44;
Node_44 -> Node_49;
Node_45 -> Node_49;
Node_46 -> Node_45;
Node_47 -> Node_49;
Node_48 -> Node_47;
Node_49 -> Node_51;
Node_50 -> Node_49;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_53;
Node_52 -> Node_53;
Node_53 -> Node_9;
Node_54 -> Node_1;
Node_55 -> Node_56;
Node_56 -> Node_57[style=dashed];
Node_56 -> Node_65;
Node_57 -> Node_59;
Node_57 -> Node_65[style=dashed];
Node_59 -> Node_60[style=dashed];
Node_59 -> Node_61;
Node_60 -> Node_62;
Node_61 -> Node_62;
Node_62 -> Node_63[style=dashed];
Node_62 -> Node_64;
Node_63 -> Node_66;
Node_64 -> Node_66;
Node_65 -> Node_66;
}

