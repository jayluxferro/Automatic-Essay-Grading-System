digraph "CFG formil.nga.geopackage.tiles.TileGenerator.updateTileBounds(Lmil\/nga\/geopackage\/tiles\/matrixset\/TileMatrixSet;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r28 I:?[OBJECT, ARRAY]) \l0x0002: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r29 I:?[OBJECT, ARRAY]) \l0x0004: IGET  (r2 I:mil.nga.geopackage.GeoPackage) = (r1 I:mil.nga.geopackage.tiles.TileGenerator) mil.nga.geopackage.tiles.TileGenerator.geoPackage mil.nga.geopackage.GeoPackage \l0x0006: INVOKE  (r2 I:mil.nga.geopackage.tiles.user.TileDao) = \l  (r2 I:mil.nga.geopackage.GeoPackage)\l  (r0 I:mil.nga.geopackage.tiles.matrixset.TileMatrixSet)\l mil.nga.geopackage.GeoPackage.getTileDao(mil.nga.geopackage.tiles.matrixset.TileMatrixSet):mil.nga.geopackage.tiles.user.TileDao type: INTERFACE \l0x000a: INVOKE  (r3 I:boolean) = (r2 I:mil.nga.geopackage.tiles.user.TileDao) mil.nga.geopackage.tiles.user.TileDao.isGoogleTiles():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|0x000e: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x001b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0010|0x0010: IGET  (r3 I:boolean) = (r1 I:mil.nga.geopackage.tiles.TileGenerator) mil.nga.geopackage.tiles.TileGenerator.googleTiles boolean \l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|0x0012: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x001f \l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|0x0014: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0015: IPUT  \l  (r3 I:boolean)\l  (r1 I:mil.nga.geopackage.tiles.TileGenerator)\l mil.nga.geopackage.tiles.TileGenerator.googleTiles boolean \l0x0017: INVOKE  (r28 I:mil.nga.geopackage.tiles.TileGenerator) mil.nga.geopackage.tiles.TileGenerator.adjustGoogleBounds():void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|0x001b: IGET  (r3 I:boolean) = (r1 I:mil.nga.geopackage.tiles.TileGenerator) mil.nga.geopackage.tiles.TileGenerator.googleTiles boolean \l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|0x001d: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x01e2 \l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|0x001f: INVOKE  (r3 I:mil.nga.geopackage.core.srs.SpatialReferenceSystem) = (r29 I:mil.nga.geopackage.tiles.matrixset.TileMatrixSet) mil.nga.geopackage.tiles.matrixset.TileMatrixSet.getSrs():mil.nga.geopackage.core.srs.SpatialReferenceSystem type: VIRTUAL \l0x0023: INVOKE  (r3 I:mil.nga.geopackage.projection.Projection) = (r3 I:mil.nga.geopackage.core.srs.SpatialReferenceSystem) mil.nga.geopackage.projection.ProjectionFactory.getProjection(mil.nga.geopackage.core.srs.SpatialReferenceSystem):mil.nga.geopackage.projection.Projection type: STATIC \l0x0027: IGET  (r4 I:mil.nga.geopackage.projection.Projection) = (r1 I:mil.nga.geopackage.tiles.TileGenerator) mil.nga.geopackage.tiles.TileGenerator.projection mil.nga.geopackage.projection.Projection \l0x0029: INVOKE  (r4 I:boolean) = \l  (r3 I:mil.nga.geopackage.projection.Projection)\l  (r4 I:java.lang.Object)\l mil.nga.geopackage.projection.Projection.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x002d|0x002d: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x01b9 \l}"];
Node_9 [shape=record,label="{9\:\ 0x002f|0x002f: INVOKE  (r4 I:mil.nga.geopackage.core.contents.Contents) = (r29 I:mil.nga.geopackage.tiles.matrixset.TileMatrixSet) mil.nga.geopackage.tiles.matrixset.TileMatrixSet.getContents():mil.nga.geopackage.core.contents.Contents type: VIRTUAL \l0x0033: INVOKE  (r5 I:mil.nga.geopackage.BoundingBox) = (r4 I:mil.nga.geopackage.core.contents.Contents) mil.nga.geopackage.core.contents.Contents.getBoundingBox():mil.nga.geopackage.BoundingBox type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0037|0x0037: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0063 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0039|0x0039: IGET  (r6 I:mil.nga.geopackage.projection.Projection) = (r1 I:mil.nga.geopackage.tiles.TileGenerator) mil.nga.geopackage.tiles.TileGenerator.projection mil.nga.geopackage.projection.Projection \l0x003b: INVOKE  (r7 I:mil.nga.geopackage.core.srs.SpatialReferenceSystem) = (r4 I:mil.nga.geopackage.core.contents.Contents) mil.nga.geopackage.core.contents.Contents.getSrs():mil.nga.geopackage.core.srs.SpatialReferenceSystem type: VIRTUAL \l0x003f: INVOKE  (r7 I:mil.nga.geopackage.projection.Projection) = (r7 I:mil.nga.geopackage.core.srs.SpatialReferenceSystem) mil.nga.geopackage.projection.ProjectionFactory.getProjection(mil.nga.geopackage.core.srs.SpatialReferenceSystem):mil.nga.geopackage.projection.Projection type: STATIC \l0x0043: INVOKE  (r6 I:mil.nga.geopackage.projection.ProjectionTransform) = \l  (r6 I:mil.nga.geopackage.projection.Projection)\l  (r7 I:mil.nga.geopackage.projection.Projection)\l mil.nga.geopackage.projection.Projection.getTransformation(mil.nga.geopackage.projection.Projection):mil.nga.geopackage.projection.ProjectionTransform type: VIRTUAL \l0x0047: IGET  (r7 I:mil.nga.geopackage.BoundingBox) = (r1 I:mil.nga.geopackage.tiles.TileGenerator) mil.nga.geopackage.tiles.TileGenerator.boundingBox mil.nga.geopackage.BoundingBox \l0x0049: INVOKE  (r6 I:mil.nga.geopackage.BoundingBox) = \l  (r6 I:mil.nga.geopackage.projection.ProjectionTransform)\l  (r7 I:mil.nga.geopackage.BoundingBox)\l mil.nga.geopackage.projection.ProjectionTransform.transform(mil.nga.geopackage.BoundingBox):mil.nga.geopackage.BoundingBox type: VIRTUAL \l0x004d: INVOKE  (r6 I:mil.nga.geopackage.BoundingBox) = \l  (r6 I:mil.nga.geopackage.BoundingBox)\l  (r5 I:mil.nga.geopackage.BoundingBox)\l mil.nga.geopackage.tiles.TileBoundingBoxUtils.union(mil.nga.geopackage.BoundingBox, mil.nga.geopackage.BoundingBox):mil.nga.geopackage.BoundingBox type: STATIC \l0x0051: INVOKE  (r5 I:boolean) = \l  (r6 I:mil.nga.geopackage.BoundingBox)\l  (r5 I:java.lang.Object)\l mil.nga.geopackage.BoundingBox.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0055|0x0055: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0063 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0057|0x0057: INVOKE  \l  (r4 I:mil.nga.geopackage.core.contents.Contents)\l  (r6 I:mil.nga.geopackage.BoundingBox)\l mil.nga.geopackage.core.contents.Contents.setBoundingBox(mil.nga.geopackage.BoundingBox):void type: VIRTUAL \l0x005a: IGET  (r5 I:mil.nga.geopackage.GeoPackage) = (r1 I:mil.nga.geopackage.tiles.TileGenerator) mil.nga.geopackage.tiles.TileGenerator.geoPackage mil.nga.geopackage.GeoPackage \l0x005c: INVOKE  (r5 I:mil.nga.geopackage.core.contents.ContentsDao) = (r5 I:mil.nga.geopackage.GeoPackage) mil.nga.geopackage.GeoPackage.getContentsDao():mil.nga.geopackage.core.contents.ContentsDao type: INTERFACE \l0x0060: INVOKE  \l  (r5 I:mil.nga.geopackage.core.contents.ContentsDao)\l  (r4 I:java.lang.Object)\l mil.nga.geopackage.core.contents.ContentsDao.update(java.lang.Object):int type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x0063|0x0063: IGET  (r4 I:boolean) = (r1 I:mil.nga.geopackage.tiles.TileGenerator) mil.nga.geopackage.tiles.TileGenerator.googleTiles boolean \l}"];
Node_15 [shape=record,label="{15\:\ 0x0065|0x0065: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x01b8 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0067|0x0067: INVOKE  (r4 I:mil.nga.geopackage.BoundingBox) = (r29 I:mil.nga.geopackage.tiles.matrixset.TileMatrixSet) mil.nga.geopackage.tiles.matrixset.TileMatrixSet.getBoundingBox():mil.nga.geopackage.BoundingBox type: VIRTUAL \l0x006b: IGET  (r5 I:mil.nga.geopackage.projection.Projection) = (r1 I:mil.nga.geopackage.tiles.TileGenerator) mil.nga.geopackage.tiles.TileGenerator.projection mil.nga.geopackage.projection.Projection \l0x006d: INVOKE  (r3 I:mil.nga.geopackage.projection.ProjectionTransform) = \l  (r5 I:mil.nga.geopackage.projection.Projection)\l  (r3 I:mil.nga.geopackage.projection.Projection)\l mil.nga.geopackage.projection.Projection.getTransformation(mil.nga.geopackage.projection.Projection):mil.nga.geopackage.projection.ProjectionTransform type: VIRTUAL \l0x0071: IGET  (r5 I:mil.nga.geopackage.BoundingBox) = (r1 I:mil.nga.geopackage.tiles.TileGenerator) mil.nga.geopackage.tiles.TileGenerator.boundingBox mil.nga.geopackage.BoundingBox \l0x0073: INVOKE  (r5 I:mil.nga.geopackage.BoundingBox) = \l  (r3 I:mil.nga.geopackage.projection.ProjectionTransform)\l  (r5 I:mil.nga.geopackage.BoundingBox)\l mil.nga.geopackage.projection.ProjectionTransform.transform(mil.nga.geopackage.BoundingBox):mil.nga.geopackage.BoundingBox type: VIRTUAL \l0x0077: IGET  (r6 I:int) = (r1 I:mil.nga.geopackage.tiles.TileGenerator) mil.nga.geopackage.tiles.TileGenerator.minZoom int \l0x0079: INVOKE  (r7 I:long) = (r2 I:mil.nga.geopackage.tiles.user.TileDao) mil.nga.geopackage.tiles.user.TileDao.getMinZoom():long type: VIRTUAL \l0x007d: CAST  (r7 I:int) = (int) (r7 I:long) \l0x007e: INVOKE  (r11 I:int) = (r6 I:int), (r7 I:int) java.lang.Math.min(int, int):int type: STATIC \l0x0082: INVOKE  \l  (r1 I:mil.nga.geopackage.tiles.TileGenerator)\l  (r5 I:mil.nga.geopackage.BoundingBox)\l  (r11 I:int)\l mil.nga.geopackage.tiles.TileGenerator.adjustBounds(mil.nga.geopackage.BoundingBox, int):void type: DIRECT \l0x0085: IGET  (r5 I:mil.nga.geopackage.BoundingBox) = (r1 I:mil.nga.geopackage.tiles.TileGenerator) mil.nga.geopackage.tiles.TileGenerator.tileGridBoundingBox mil.nga.geopackage.BoundingBox \l0x0087: INVOKE  (r3 I:mil.nga.geopackage.BoundingBox) = \l  (r3 I:mil.nga.geopackage.projection.ProjectionTransform)\l  (r5 I:mil.nga.geopackage.BoundingBox)\l mil.nga.geopackage.projection.ProjectionTransform.transform(mil.nga.geopackage.BoundingBox):mil.nga.geopackage.BoundingBox type: VIRTUAL \l0x008b: INVOKE  (r5 I:boolean) = \l  (r4 I:mil.nga.geopackage.BoundingBox)\l  (r3 I:java.lang.Object)\l mil.nga.geopackage.BoundingBox.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_17 [shape=record,label="{17\:\ 0x008f|0x008f: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x00a4 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0091|0x0091: INVOKE  (r3 I:mil.nga.geopackage.BoundingBox) = \l  (r3 I:mil.nga.geopackage.BoundingBox)\l  (r4 I:mil.nga.geopackage.BoundingBox)\l mil.nga.geopackage.tiles.TileBoundingBoxUtils.union(mil.nga.geopackage.BoundingBox, mil.nga.geopackage.BoundingBox):mil.nga.geopackage.BoundingBox type: STATIC \l0x0095: INVOKE  \l  (r0 I:mil.nga.geopackage.tiles.matrixset.TileMatrixSet)\l  (r3 I:mil.nga.geopackage.BoundingBox)\l mil.nga.geopackage.tiles.matrixset.TileMatrixSet.setBoundingBox(mil.nga.geopackage.BoundingBox):void type: VIRTUAL \l0x0098: IGET  (r5 I:mil.nga.geopackage.GeoPackage) = (r1 I:mil.nga.geopackage.tiles.TileGenerator) mil.nga.geopackage.tiles.TileGenerator.geoPackage mil.nga.geopackage.GeoPackage \l0x009a: INVOKE  (r5 I:mil.nga.geopackage.tiles.matrixset.TileMatrixSetDao) = (r5 I:mil.nga.geopackage.GeoPackage) mil.nga.geopackage.GeoPackage.getTileMatrixSetDao():mil.nga.geopackage.tiles.matrixset.TileMatrixSetDao type: INTERFACE \l0x009e: INVOKE  \l  (r5 I:mil.nga.geopackage.tiles.matrixset.TileMatrixSetDao)\l  (r0 I:java.lang.Object)\l mil.nga.geopackage.tiles.matrixset.TileMatrixSetDao.update(java.lang.Object):int type: VIRTUAL \l0x00a1: INVOKE  \l  (r1 I:mil.nga.geopackage.tiles.TileGenerator)\l  (r3 I:mil.nga.geopackage.BoundingBox)\l  (r11 I:int)\l mil.nga.geopackage.tiles.TileGenerator.adjustBounds(mil.nga.geopackage.BoundingBox, int):void type: DIRECT \l}"];
Node_19 [shape=record,label="{19\:\ 0x00a4|0x00a4: IGET  (r0 I:mil.nga.geopackage.GeoPackage) = (r1 I:mil.nga.geopackage.tiles.TileGenerator) mil.nga.geopackage.tiles.TileGenerator.geoPackage mil.nga.geopackage.GeoPackage \l0x00a6: INVOKE  (r0 I:mil.nga.geopackage.tiles.matrix.TileMatrixDao) = (r0 I:mil.nga.geopackage.GeoPackage) mil.nga.geopackage.GeoPackage.getTileMatrixDao():mil.nga.geopackage.tiles.matrix.TileMatrixDao type: INTERFACE \l0x00aa: INVOKE  (r5 I:long) = (r2 I:mil.nga.geopackage.tiles.user.TileDao) mil.nga.geopackage.tiles.user.TileDao.getMinZoom():long type: VIRTUAL \l0x00ae: MOVE  (r12 I:?[long, double]) = (r5 I:?[long, double]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x00af|0x00af: INVOKE  (r5 I:long) = (r2 I:mil.nga.geopackage.tiles.user.TileDao) mil.nga.geopackage.tiles.user.TileDao.getMaxZoom():long type: VIRTUAL \l0x00b3: CONST  (r14 I:?[long, double]) = \l  (4611686018427387904(0x4000000000000000, double:2.0) ?[long, double])\l \l0x00b5: CMP_L  (r3 I:int) = (r12 I:long), (r5 I:long) \l}"];
Node_21 [shape=record,label="{21\:\ 0x00b7|0x00b7: IF  (r3 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:36:0x0199 \l}"];
Node_22 [shape=record,label="{22\:\ 0x00b9|0x00b9: INVOKE  (r3 I:mil.nga.geopackage.tiles.matrix.TileMatrix) = (r2 I:mil.nga.geopackage.tiles.user.TileDao), (r12 I:long) mil.nga.geopackage.tiles.user.TileDao.getTileMatrix(long):mil.nga.geopackage.tiles.matrix.TileMatrix type: VIRTUAL \l}"];
Node_23 [shape=record,label="{23\:\ 0x00bd|0x00bd: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x018a \l}"];
Node_24 [shape=record,label="{24\:\ 0x00bf|0x00bf: CAST  (r5 I:long) = (long) (r11 I:int) \l0x00c0: ARITH  (r5 I:long) = (r12 I:long) \- (r5 I:long) \l0x00c2: CAST  (r5 I:double) = (double) (r5 I:long) \l0x00c3: INVOKE  (r5 I:double) = (r14 I:double), (r5 I:double) java.lang.Math.pow(double, double):double type: STATIC \l0x00c7: CAST  (r5 I:long) = (long) (r5 I:double) \l0x00c8: IGET  (r7 I:long) = (r1 I:mil.nga.geopackage.tiles.TileGenerator) mil.nga.geopackage.tiles.TileGenerator.matrixWidth long \l0x00ca: ARITH  (r9 I:long) = (r7 I:long) * (r5 I:long) \l0x00cc: IGET  (r7 I:long) = (r1 I:mil.nga.geopackage.tiles.TileGenerator) mil.nga.geopackage.tiles.TileGenerator.matrixHeight long \l0x00ce: ARITH  (r7 I:long) = (r7 I:long) * (r5 I:long) \l0x00d0: INVOKE  (r16 I:mil.nga.geopackage.tiles.user.TileCursor) = (r2 I:mil.nga.geopackage.tiles.user.TileDao), (r12 I:long) mil.nga.geopackage.tiles.user.TileDao.queryForTileDescending(long):mil.nga.geopackage.tiles.user.TileCursor type: VIRTUAL \l}"];
Node_25 [shape=record,label="{25\:\ 0x00d4|SYNTHETIC\lSplitter:B:25:0x00d4\l}"];
Node_26 [shape=record,label="{26\:\ ?|Splitter:B:25:0x00d4\l|0x00d4: INVOKE  (r5 I:boolean) = (r16 I:mil.nga.geopackage.tiles.user.TileCursor) mil.nga.geopackage.tiles.user.TileCursor.moveToNext():boolean type: VIRTUAL A[Catch:\{ all \-\> 0x0185 \}, TRY_ENTER]\l}"];
Node_27 [shape=record,label="{27\:\ 0x00d8|0x00d8: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x0141 A[Catch:\{ all \-\> 0x0185 \}]\l}"];
Node_28 [shape=record,label="{28\:\ 0x00da|0x00da: INVOKE  (r5 I:mil.nga.geopackage.user.UserRow) = (r16 I:mil.nga.geopackage.tiles.user.TileCursor) mil.nga.geopackage.tiles.user.TileCursor.getRow():mil.nga.geopackage.user.UserRow type: VIRTUAL A[Catch:\{ all \-\> 0x0185 \}]\l0x00de: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r5 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0185 \}]\l0x00df: CHECK_CAST  (r6 I:mil.nga.geopackage.tiles.user.TileRow) = (mil.nga.geopackage.tiles.user.TileRow) (r6 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0185 \}]\l0x00e1: INVOKE  (r17 I:long) = (r6 I:mil.nga.geopackage.tiles.user.TileRow) mil.nga.geopackage.tiles.user.TileRow.getTileColumn():long type: VIRTUAL A[Catch:\{ all \-\> 0x0185 \}]\l0x00e5: INVOKE  (r19 I:long) = (r6 I:mil.nga.geopackage.tiles.user.TileRow) mil.nga.geopackage.tiles.user.TileRow.getTileRow():long type: VIRTUAL A[Catch:\{ all \-\> 0x0185 \}]\l0x00e9: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0185 \}]\l0x00ea: MOVE  (r21 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0185 \}]\l0x00ec: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0185 \}]\l0x00ed: MOVE  (r22 I:?[long, double]) = (r7 I:?[long, double]) A[Catch:\{ all \-\> 0x0185 \}]\l0x00ef: MOVE  (r7 I:?[long, double]) = (r17 I:?[long, double]) A[Catch:\{ all \-\> 0x0185 \}]\l0x00f1: MOVE  (r24 I:?[long, double]) = (r9 I:?[long, double]) A[Catch:\{ all \-\> 0x0185 \}]\l0x00f3: MOVE  (r9 I:?[long, double]) = (r19 I:?[long, double]) A[Catch:\{ all \-\> 0x0185 \}]\l0x00f5: INVOKE  (r5 I:mil.nga.geopackage.BoundingBox) = \l  (r5 I:mil.nga.geopackage.BoundingBox)\l  (r6 I:mil.nga.geopackage.tiles.matrix.TileMatrix)\l  (r7 I:long)\l  (r9 I:long)\l mil.nga.geopackage.tiles.TileBoundingBoxUtils.getBoundingBox(mil.nga.geopackage.BoundingBox, mil.nga.geopackage.tiles.matrix.TileMatrix, long, long):mil.nga.geopackage.BoundingBox type: STATIC A[Catch:\{ all \-\> 0x0185 \}]\l0x00f9: INVOKE  (r6 I:double) = (r5 I:mil.nga.geopackage.BoundingBox) mil.nga.geopackage.BoundingBox.getMinLatitude():double type: VIRTUAL A[Catch:\{ all \-\> 0x0185 \}]\l0x00fd: INVOKE  (r8 I:double) = (r5 I:mil.nga.geopackage.BoundingBox) mil.nga.geopackage.BoundingBox.getMaxLatitude():double type: VIRTUAL A[Catch:\{ all \-\> 0x0185 \}]\l0x0101: INVOKE  (r17 I:double) = (r5 I:mil.nga.geopackage.BoundingBox) mil.nga.geopackage.BoundingBox.getMinLatitude():double type: VIRTUAL A[Catch:\{ all \-\> 0x0185 \}]\l0x0105: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0185 \}]\l0x0106: ARITH  (r8 I:double) = (r8 I:double) \- (r17 I:double) A[Catch:\{ all \-\> 0x0185 \}]\l0x0108: ARITH  (r8 I:double) = (r8 I:double) \/ (r14 I:double) A[Catch:\{ all \-\> 0x0185 \}]\l0x0109: ARITH  (r6 I:double) = (r6 I:double) + (r8 I:double) A[Catch:\{ all \-\> 0x0185 \}]\l0x010a: INVOKE  (r8 I:double) = (r5 I:mil.nga.geopackage.BoundingBox) mil.nga.geopackage.BoundingBox.getMinLongitude():double type: VIRTUAL A[Catch:\{ all \-\> 0x0185 \}]\l0x010e: INVOKE  (r17 I:double) = (r5 I:mil.nga.geopackage.BoundingBox) mil.nga.geopackage.BoundingBox.getMaxLongitude():double type: VIRTUAL A[Catch:\{ all \-\> 0x0185 \}]\l0x0112: INVOKE  (r19 I:double) = (r5 I:mil.nga.geopackage.BoundingBox) mil.nga.geopackage.BoundingBox.getMinLongitude():double type: VIRTUAL A[Catch:\{ all \-\> 0x0185 \}]\l0x0116: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0185 \}]\l0x0117: ARITH  (r17 I:double) = (r17 I:double) \- (r19 I:double) A[Catch:\{ all \-\> 0x0185 \}]\l0x0119: ARITH  (r17 I:double) = (r17 I:double) \/ (r14 I:double) A[Catch:\{ all \-\> 0x0185 \}]\l0x011b: ARITH  (r8 I:double) = (r8 I:double) + (r17 I:double) A[Catch:\{ all \-\> 0x0185 \}]\l0x011d: IGET  (r5 I:mil.nga.geopackage.BoundingBox) = (r1 I:mil.nga.geopackage.tiles.TileGenerator) mil.nga.geopackage.tiles.TileGenerator.tileGridBoundingBox mil.nga.geopackage.BoundingBox A[Catch:\{ all \-\> 0x0185 \}]\l0x011f: MOVE  (r14 I:?[long, double]) = (r22 I:?[long, double]) A[Catch:\{ all \-\> 0x0185 \}]\l0x0121: INVOKE  (r5 I:long) = \l  (r5 I:mil.nga.geopackage.BoundingBox)\l  (r14 I:long)\l  (r6 I:double)\l mil.nga.geopackage.tiles.TileBoundingBoxUtils.getTileRow(mil.nga.geopackage.BoundingBox, long, double):long type: STATIC A[Catch:\{ all \-\> 0x0185 \}]\l0x0125: IGET  (r7 I:mil.nga.geopackage.BoundingBox) = (r1 I:mil.nga.geopackage.tiles.TileGenerator) mil.nga.geopackage.tiles.TileGenerator.tileGridBoundingBox mil.nga.geopackage.BoundingBox A[Catch:\{ all \-\> 0x0185 \}]\l0x0127: MOVE  (r26 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0185 \}]\l0x0129: MOVE  (r10 I:?[long, double]) = (r24 I:?[long, double]) A[Catch:\{ all \-\> 0x0185 \}]\l0x012b: INVOKE  (r7 I:long) = \l  (r7 I:mil.nga.geopackage.BoundingBox)\l  (r10 I:long)\l  (r8 I:double)\l mil.nga.geopackage.tiles.TileBoundingBoxUtils.getTileColumn(mil.nga.geopackage.BoundingBox, long, double):long type: STATIC A[Catch:\{ all \-\> 0x0185 \}]\l0x012f: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0185 \}]\l0x0131: INVOKE  (r9 I:mil.nga.geopackage.tiles.user.TileRow), (r5 I:long) mil.nga.geopackage.tiles.user.TileRow.setTileRow(long):void type: VIRTUAL A[Catch:\{ all \-\> 0x0185 \}]\l0x0134: INVOKE  (r9 I:mil.nga.geopackage.tiles.user.TileRow), (r7 I:long) mil.nga.geopackage.tiles.user.TileRow.setTileColumn(long):void type: VIRTUAL A[Catch:\{ all \-\> 0x0185 \}]\l0x0137: INVOKE  \l  (r2 I:mil.nga.geopackage.tiles.user.TileDao)\l  (r9 I:mil.nga.geopackage.user.UserRow)\l mil.nga.geopackage.tiles.user.TileDao.update(mil.nga.geopackage.user.UserRow):int type: VIRTUAL A[Catch:\{ all \-\> 0x0185 \}, TRY_LEAVE]\l}"];
Node_29 [shape=record,label="{29\:\ 0x013a|0x013a: MOVE  (r9 I:?[long, double]) = (r10 I:?[long, double]) \l0x013b: MOVE  (r7 I:?[long, double]) = (r14 I:?[long, double]) \l0x013c: MOVE  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r26 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x013e: CONST  (r14 I:?[long, double]) = \l  (4611686018427387904(0x4000000000000000, double:2.0) ?[long, double])\l \l}"];
Node_30 [shape=record,label="{30\:\ 0x0141|0x0141: MOVE  (r14 I:?[long, double]) = (r7 I:?[long, double]) \l0x0142: MOVE  (r26 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0144: MOVE  (r10 I:?[long, double]) = (r9 I:?[long, double]) \l0x0145: INVOKE  (r16 I:mil.nga.geopackage.tiles.user.TileCursor) mil.nga.geopackage.tiles.user.TileCursor.close():void type: VIRTUAL \l0x0148: IGET  (r5 I:mil.nga.geopackage.BoundingBox) = (r1 I:mil.nga.geopackage.tiles.TileGenerator) mil.nga.geopackage.tiles.TileGenerator.tileGridBoundingBox mil.nga.geopackage.BoundingBox \l0x014a: INVOKE  (r5 I:double) = (r5 I:mil.nga.geopackage.BoundingBox) mil.nga.geopackage.BoundingBox.getMaxLongitude():double type: VIRTUAL \l0x014e: IGET  (r7 I:mil.nga.geopackage.BoundingBox) = (r1 I:mil.nga.geopackage.tiles.TileGenerator) mil.nga.geopackage.tiles.TileGenerator.tileGridBoundingBox mil.nga.geopackage.BoundingBox \l0x0150: INVOKE  (r7 I:double) = (r7 I:mil.nga.geopackage.BoundingBox) mil.nga.geopackage.BoundingBox.getMinLongitude():double type: VIRTUAL \l0x0154: ARITH  (r5 I:double) = (r5 I:double) \- (r7 I:double) \l0x0155: CAST  (r7 I:double) = (double) (r10 I:long) \l0x0156: ARITH  (r5 I:double) = (r5 I:double) \/ (r7 I:double) \l0x0157: INVOKE  (r7 I:long) = (r3 I:mil.nga.geopackage.tiles.matrix.TileMatrix) mil.nga.geopackage.tiles.matrix.TileMatrix.getTileWidth():long type: VIRTUAL \l0x015b: CAST  (r7 I:double) = (double) (r7 I:long) \l0x015c: ARITH  (r5 I:double) = (r5 I:double) \/ (r7 I:double) \l0x015d: IGET  (r7 I:mil.nga.geopackage.BoundingBox) = (r1 I:mil.nga.geopackage.tiles.TileGenerator) mil.nga.geopackage.tiles.TileGenerator.tileGridBoundingBox mil.nga.geopackage.BoundingBox \l0x015f: INVOKE  (r7 I:double) = (r7 I:mil.nga.geopackage.BoundingBox) mil.nga.geopackage.BoundingBox.getMaxLatitude():double type: VIRTUAL \l0x0163: IGET  (r9 I:mil.nga.geopackage.BoundingBox) = (r1 I:mil.nga.geopackage.tiles.TileGenerator) mil.nga.geopackage.tiles.TileGenerator.tileGridBoundingBox mil.nga.geopackage.BoundingBox \l0x0165: INVOKE  (r16 I:double) = (r9 I:mil.nga.geopackage.BoundingBox) mil.nga.geopackage.BoundingBox.getMinLatitude():double type: VIRTUAL \l0x0169: ARITH  (r7 I:double) = (r7 I:double) \- (r16 I:double) \l0x016b: MOVE  (r27 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l0x016d: CAST  (r1 I:double) = (double) (r14 I:long) \l0x016e: ARITH  (r7 I:double) = (r7 I:double) \/ (r1 I:double) \l0x016f: INVOKE  (r1 I:long) = (r3 I:mil.nga.geopackage.tiles.matrix.TileMatrix) mil.nga.geopackage.tiles.matrix.TileMatrix.getTileHeight():long type: VIRTUAL \l0x0173: CAST  (r1 I:double) = (double) (r1 I:long) \l0x0174: ARITH  (r7 I:double) = (r7 I:double) \/ (r1 I:double) \l0x0175: INVOKE  \l  (r3 I:mil.nga.geopackage.tiles.matrix.TileMatrix)\l  (r10 I:long)\l mil.nga.geopackage.tiles.matrix.TileMatrix.setMatrixWidth(long):void type: VIRTUAL \l0x0178: INVOKE  \l  (r3 I:mil.nga.geopackage.tiles.matrix.TileMatrix)\l  (r14 I:long)\l mil.nga.geopackage.tiles.matrix.TileMatrix.setMatrixHeight(long):void type: VIRTUAL \l0x017b: INVOKE  \l  (r3 I:mil.nga.geopackage.tiles.matrix.TileMatrix)\l  (r5 I:double)\l mil.nga.geopackage.tiles.matrix.TileMatrix.setPixelXSize(double):void type: VIRTUAL \l0x017e: INVOKE  \l  (r3 I:mil.nga.geopackage.tiles.matrix.TileMatrix)\l  (r7 I:double)\l mil.nga.geopackage.tiles.matrix.TileMatrix.setPixelYSize(double):void type: VIRTUAL \l0x0181: INVOKE  \l  (r0 I:mil.nga.geopackage.tiles.matrix.TileMatrixDao)\l  (r3 I:mil.nga.geopackage.tiles.matrix.TileMatrix)\l mil.nga.geopackage.tiles.matrix.TileMatrixDao.update(mil.nga.geopackage.tiles.matrix.TileMatrix):int type: VIRTUAL \l}"];
Node_31 [shape=record,label="{31\:\ 0x0185|ExcHandler: all null\lSplitter:B:25:0x00d4\l|0x0185: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_32 [shape=record,label="{32\:\ 0x0186|0x0186: INVOKE  (r16 I:mil.nga.geopackage.tiles.user.TileCursor) mil.nga.geopackage.tiles.user.TileCursor.close():void type: VIRTUAL \l}"];
Node_33 [shape=record,label="{33\:\ 0x0189|0x0189: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_34 [shape=record,label="{34\:\ 0x018a|0x018a: MOVE  (r27 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l0x018c: MOVE  (r26 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_35 [shape=record,label="{35\:\ 0x018e|0x018e: CONST  (r1 I:?[long, double]) = (1 ?[long, double]) \l0x0190: ARITH  (r12 I:long) = (r12 I:long) + (r1 I:long) \l0x0191: MOVE  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r26 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0193: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r27 I:?[OBJECT, ARRAY]) \l0x0195: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r28 I:?[OBJECT, ARRAY]) \l}"];
Node_36 [shape=record,label="{36\:\ 0x0199|0x0199: MOVE  (r26 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x019b: IGET  (r0 I:int) = (r1 I:mil.nga.geopackage.tiles.TileGenerator) mil.nga.geopackage.tiles.TileGenerator.minZoom int \l0x019d: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r26 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_37 [shape=record,label="{37\:\ 0x019f|0x019f: IF  (r2 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:39:0x01b8 \l}"];
Node_38 [shape=record,label="{38\:\ 0x01a1|0x01a1: IGET  (r0 I:int) = (r1 I:mil.nga.geopackage.tiles.TileGenerator) mil.nga.geopackage.tiles.TileGenerator.minZoom int \l0x01a3: ARITH  (r0 I:int) = (r0 I:int) \- (r2 I:int) \l0x01a4: CAST  (r2 I:double) = (double) (r0 I:int) \l0x01a5: CONST  (r4 I:?[long, double]) = \l  (4611686018427387904(0x4000000000000000, double:2.0) ?[long, double])\l \l0x01a7: INVOKE  (r2 I:double) = (r4 I:double), (r2 I:double) java.lang.Math.pow(double, double):double type: STATIC \l0x01ab: CAST  (r2 I:long) = (long) (r2 I:double) \l0x01ac: IGET  (r4 I:long) = (r1 I:mil.nga.geopackage.tiles.TileGenerator) mil.nga.geopackage.tiles.TileGenerator.matrixWidth long \l0x01ae: ARITH  (r4 I:long) = (r4 I:long) * (r2 I:long) \l0x01b0: IPUT  (r4 I:long), (r1 I:mil.nga.geopackage.tiles.TileGenerator) mil.nga.geopackage.tiles.TileGenerator.matrixWidth long \l0x01b2: IGET  (r4 I:long) = (r1 I:mil.nga.geopackage.tiles.TileGenerator) mil.nga.geopackage.tiles.TileGenerator.matrixHeight long \l0x01b4: ARITH  (r4 I:long) = (r4 I:long) * (r2 I:long) \l0x01b6: IPUT  (r4 I:long), (r1 I:mil.nga.geopackage.tiles.TileGenerator) mil.nga.geopackage.tiles.TileGenerator.matrixHeight long \l}"];
Node_39 [shape=record,label="{39\:\ 0x01b8|0x01b8: RETURN   \l}"];
Node_40 [shape=record,label="{40\:\ 0x01b9|0x01b9: NEW_INSTANCE  (r0 I:mil.nga.geopackage.GeoPackageException) =  mil.nga.geopackage.GeoPackageException \l0x01bb: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x01bd: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x01c0: CONST_STR  (r4 I:java.lang.String) =  \"Can not update tiles projected at \" \l0x01c2: INVOKE  (r2 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x01c5: INVOKE  (r3 I:java.lang.String) = (r3 I:mil.nga.geopackage.projection.Projection) mil.nga.geopackage.projection.Projection.getCode():java.lang.String type: VIRTUAL \l0x01c9: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x01cc: CONST_STR  (r3 I:java.lang.String) =  \" with tiles projected at \" \l0x01ce: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x01d1: IGET  (r3 I:mil.nga.geopackage.projection.Projection) = (r1 I:mil.nga.geopackage.tiles.TileGenerator) mil.nga.geopackage.tiles.TileGenerator.projection mil.nga.geopackage.projection.Projection \l0x01d3: INVOKE  (r3 I:java.lang.String) = (r3 I:mil.nga.geopackage.projection.Projection) mil.nga.geopackage.projection.Projection.getCode():java.lang.String type: VIRTUAL \l0x01d7: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x01da: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x01de: INVOKE  \l  (r0 I:mil.nga.geopackage.GeoPackageException)\l  (r2 I:java.lang.String)\l mil.nga.geopackage.GeoPackageException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_41 [shape=record,label="{41\:\ 0x01e1|0x01e1: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_42 [shape=record,label="{42\:\ 0x01e2|0x01e2: NEW_INSTANCE  (r0 I:mil.nga.geopackage.GeoPackageException) =  mil.nga.geopackage.GeoPackageException \l0x01e4: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x01e6: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x01e9: CONST_STR  (r3 I:java.lang.String) =  \"Can not add Google formatted tiles to \" \l0x01eb: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x01ee: IGET  (r3 I:java.lang.String) = (r1 I:mil.nga.geopackage.tiles.TileGenerator) mil.nga.geopackage.tiles.TileGenerator.tableName java.lang.String \l0x01f0: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x01f3: CONST_STR  (r3 I:java.lang.String) =  \" which already contains GeoPackage formatted tiles\" \l0x01f5: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x01f8: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x01fc: INVOKE  \l  (r0 I:mil.nga.geopackage.GeoPackageException)\l  (r2 I:java.lang.String)\l mil.nga.geopackage.GeoPackageException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_43 [shape=record,label="{43\:\ 0x01ff|0x01ff: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private void mil.nga.geopackage.tiles.TileGenerator.updateTileBounds((r28 'this' I:mil.nga.geopackage.tiles.TileGenerator A[IMMUTABLE_TYPE, THIS]), (r29 I:mil.nga.geopackage.tiles.matrixset.TileMatrixSet A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_42;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_40;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_14;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_39;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_36;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_34;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_25 -> Node_31;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_30;
Node_28 -> Node_29;
Node_29 -> Node_25;
Node_30 -> Node_35;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_34 -> Node_35;
Node_35 -> Node_20;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_39;
Node_38 -> Node_39;
Node_40 -> Node_41;
Node_42 -> Node_43;
}

