digraph "CFG formil.nga.geopackage.tiles.TileGenerator.adjustBounds(Lmil\/nga\/geopackage\/BoundingBox;I)V" {
subgraph cluster_Region_681938470 {
label = "R(1:(1:2)(1:(1:5)(1:6)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1649732482 {
label = "IF [B:1:0x0002] THEN: R(1:2) ELSE: R(1:(1:5)(1:6))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r1.googleTiles == true) goto L_0x0004\l}"];
subgraph cluster_Region_658563006 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|adjustGoogleBounds()\l}"];
}
subgraph cluster_Region_474834050 {
label = "R(1:(1:5)(1:6)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_412949907 {
label = "IF [B:4:0x0010] THEN: R(1:5) ELSE: R(1:6) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0010|if ((r1.projection.getUnit() instanceof org.osgeo.proj4j.units.DegreeUnit) == true) goto L_0x0012\l}"];
subgraph cluster_Region_1573977593 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0012|adjustGeoPackageBoundsWGS84(r2, r3)\l}"];
}
subgraph cluster_Region_2085385426 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0016|adjustGeoPackageBounds(r2, r3)\l}"];
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0008}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\l}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void mil.nga.geopackage.tiles.TileGenerator.adjustBounds((r1v0 'this' mil.nga.geopackage.tiles.TileGenerator A[IMMUTABLE_TYPE, THIS]), (r2v0 mil.nga.geopackage.BoundingBox A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_8;
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_0 -> Node_1;
Node_3 -> Node_4;
}

