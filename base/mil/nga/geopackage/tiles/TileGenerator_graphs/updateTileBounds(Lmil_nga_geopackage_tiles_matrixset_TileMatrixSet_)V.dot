digraph "CFG formil.nga.geopackage.tiles.TileGenerator.updateTileBounds(Lmil\/nga\/geopackage\/tiles\/matrixset\/TileMatrixSet;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r1 = r28\lr0 = r29\lmil.nga.geopackage.tiles.user.TileDao r2 = r1.geoPackage.getTileDao(r0)\l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|if (r2.isGoogleTiles() == false) goto L_0x001b\l}"];
Node_2 [shape=record,label="{2\:\ 0x0010}"];
Node_3 [shape=record,label="{3\:\ 0x0012|if (r1.googleTiles != false) goto L_0x001f\l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|r1.googleTiles = true\ladjustGoogleBounds()\l}"];
Node_5 [shape=record,label="{5\:\ 0x001b}"];
Node_6 [shape=record,label="{6\:\ 0x001d|if (r1.googleTiles != false) goto L_0x01e2\l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|mil.nga.geopackage.projection.Projection r3 = mil.nga.geopackage.projection.ProjectionFactory.getProjection(r29.getSrs())\l}"];
Node_8 [shape=record,label="{8\:\ 0x002d|if (r3.equals(r1.projection) == false) goto L_0x01b9\l}"];
Node_9 [shape=record,label="{9\:\ 0x002f|mil.nga.geopackage.core.contents.Contents r4 = r29.getContents()\lmil.nga.geopackage.BoundingBox r5 = r4.getBoundingBox()\l}"];
Node_10 [shape=record,label="{10\:\ 0x0037|if (r5 == null) goto L_0x0063\l}"];
Node_11 [shape=record,label="{11\:\ 0x0039|mil.nga.geopackage.BoundingBox r6 = mil.nga.geopackage.tiles.TileBoundingBoxUtils.union(r1.projection.getTransformation(mil.nga.geopackage.projection.ProjectionFactory.getProjection(r4.getSrs())).transform(r1.boundingBox), r5)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0055|if (r6.equals(r5) != false) goto L_0x0063\l}"];
Node_13 [shape=record,label="{13\:\ 0x0057|r4.setBoundingBox(r6)\lr1.geoPackage.getContentsDao().update(r4)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0063}"];
Node_15 [shape=record,label="{15\:\ 0x0065|if (r1.googleTiles != false) goto L_?\l}"];
Node_16 [shape=record,label="{16\:\ 0x0067|mil.nga.geopackage.BoundingBox r4 = r29.getBoundingBox()\lmil.nga.geopackage.projection.ProjectionTransform r3 = r1.projection.getTransformation(r3)\lmil.nga.geopackage.BoundingBox r5 = r3.transform(r1.boundingBox)\lint r11 = java.lang.Math.min(r1.minZoom, (int) r2.getMinZoom())\lr1.adjustBounds(r5, r11)\lmil.nga.geopackage.BoundingBox r3 = r3.transform(r1.tileGridBoundingBox)\l}"];
Node_17 [shape=record,label="{17\:\ 0x008f|if (r4.equals(r3) != false) goto L_0x00a4\l}"];
Node_18 [shape=record,label="{18\:\ 0x0091|mil.nga.geopackage.BoundingBox r3 = mil.nga.geopackage.tiles.TileBoundingBoxUtils.union(r3, r4)\lr0.setBoundingBox(r3)\lr1.geoPackage.getTileMatrixSetDao().update(r0)\lr1.adjustBounds(r3, r11)\l}"];
Node_19 [shape=record,label="{19\:\ 0x00a4|mil.nga.geopackage.tiles.matrix.TileMatrixDao r0 = r1.geoPackage.getTileMatrixDao()\lr12 = r2.getMinZoom()\l}"];
Node_20 [shape=record,label="{20\:\ 0x00af|LOOP_START\lPHI: r1 r2 r11 r12 \l  PHI: (r1v1 mil.nga.geopackage.tiles.TileGenerator) = (r1v0 mil.nga.geopackage.tiles.TileGenerator), (r1v3 mil.nga.geopackage.tiles.TileGenerator) binds: [B:19:0x00a4, B:35:0x018e] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v4 mil.nga.geopackage.tiles.user.TileDao) = (r2v1 mil.nga.geopackage.tiles.user.TileDao), (r2v9 mil.nga.geopackage.tiles.user.TileDao) binds: [B:19:0x00a4, B:35:0x018e] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r11v1 int) = (r11v0 int), (r11v2 int) binds: [B:19:0x00a4, B:35:0x018e] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r12v1 long) = (r12v0 long), (r12v2 long) binds: [B:19:0x00a4, B:35:0x018e] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:20:0x00af\-\>B:35:0x018e\l|r14 = 2.0d\l}"];
Node_21 [shape=record,label="{21\:\ 0x00b7|if ((r12 \> r2.getMaxZoom() ? 1 : (r12 == r2.getMaxZoom() ? 0 : \-1)) \> 0) goto L_0x0199\l}"];
Node_22 [shape=record,label="{22\:\ 0x00b9|mil.nga.geopackage.tiles.matrix.TileMatrix r3 = r2.getTileMatrix(r12)\l}"];
Node_23 [shape=record,label="{23\:\ 0x00bd|if (r3 == null) goto L_0x018a\l}"];
Node_24 [shape=record,label="{24\:\ 0x00bf|long r5 = (long) java.lang.Math.pow(2.0d, (double) (r12 \- ((long) r11)))\llong r9 = r1.matrixWidth * r5\llong r7 = r1.matrixHeight * r5\lmil.nga.geopackage.tiles.user.TileCursor r16 = r2.queryForTileDescending(r12)\l}"];
Node_25 [shape=record,label="{25\:\ 0x00d4|LOOP_START\lSYNTHETIC\lPHI: r7 r9 r11 r14 \l  PHI: (r7v5 long) = (r7v4 long), (r7v19 long) binds: [B:24:0x00bf, B:29:0x013a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r9v1 long) = (r9v0 long), (r9v5 long) binds: [B:24:0x00bf, B:29:0x013a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r11v3 int) = (r11v1 int), (r11v4 int) binds: [B:24:0x00bf, B:29:0x013a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r14v1 double) = (r14v0 double), (r14v4 double) binds: [B:24:0x00bf, B:29:0x013a] A[DONT_GENERATE, DONT_INLINE]\lSplitter:B:25:0x00d4\lLOOP:1: B:25:0x00d4\-\>B:29:0x013a\l}"];
Node_26 [shape=record,label="{26\:\ ?|Catch:\{ all \-\> 0x0185 \}\lSplitter:B:25:0x00d4\l}"];
Node_27 [shape=record,label="{27\:\ 0x00d8|Catch:\{ all \-\> 0x0185 \}\l|if (r16.moveToNext() == false) goto L_0x0141     \/\/ Catch:\{ all \-\> 0x0185 \}\l}"];
Node_28 [shape=record,label="{28\:\ 0x00da|Catch:\{ all \-\> 0x0185 \}\l|mil.nga.geopackage.tiles.user.TileRow r6 = (mil.nga.geopackage.tiles.user.TileRow) r16.getRow()     \/\/ Catch:\{ all \-\> 0x0185 \}\llong r17 = r6.getTileColumn()     \/\/ Catch:\{ all \-\> 0x0185 \}\llong r19 = r6.getTileRow()     \/\/ Catch:\{ all \-\> 0x0185 \}\lr21 = r6     \/\/ Catch:\{ all \-\> 0x0185 \}\lr22 = r7     \/\/ Catch:\{ all \-\> 0x0185 \}\lr24 = r9     \/\/ Catch:\{ all \-\> 0x0185 \}\lmil.nga.geopackage.BoundingBox r5 = mil.nga.geopackage.tiles.TileBoundingBoxUtils.getBoundingBox(r4, r3, r17, r19)     \/\/ Catch:\{ all \-\> 0x0185 \}\ldouble r6 = r5.getMinLatitude() + ((r5.getMaxLatitude() \- r5.getMinLatitude()) \/ r14)     \/\/ Catch:\{ all \-\> 0x0185 \}\lr14 = r22     \/\/ Catch:\{ all \-\> 0x0185 \}\llong r5 = mil.nga.geopackage.tiles.TileBoundingBoxUtils.getTileRow(r1.tileGridBoundingBox, r14, r6)     \/\/ Catch:\{ all \-\> 0x0185 \}\lmil.nga.geopackage.BoundingBox r7 = r1.tileGridBoundingBox     \/\/ Catch:\{ all \-\> 0x0185 \}\lr26 = r11     \/\/ Catch:\{ all \-\> 0x0185 \}\lr10 = r24     \/\/ Catch:\{ all \-\> 0x0185 \}\llong r7 = mil.nga.geopackage.tiles.TileBoundingBoxUtils.getTileColumn(r7, r10, r5.getMinLongitude() + ((r5.getMaxLongitude() \- r5.getMinLongitude()) \/ r14))     \/\/ Catch:\{ all \-\> 0x0185 \}\lr9 = r21     \/\/ Catch:\{ all \-\> 0x0185 \}\lr9.setTileRow(r5)     \/\/ Catch:\{ all \-\> 0x0185 \}\lr9.setTileColumn(r7)     \/\/ Catch:\{ all \-\> 0x0185 \}\lr2.update(r9)     \/\/ Catch:\{ all \-\> 0x0185 \}\l}"];
Node_29 [shape=record,label="{29\:\ 0x013a|LOOP_END\lLOOP:1: B:25:0x00d4\-\>B:29:0x013a\l|r9 = r10\lr7 = r14\lr11 = r26\lr14 = 2.0d\l}"];
Node_30 [shape=record,label="{30\:\ 0x0141|r14 = r7\lr26 = r11\lr10 = r9\lr16.close()\ldouble r5 = ((r1.tileGridBoundingBox.getMaxLongitude() \- r1.tileGridBoundingBox.getMinLongitude()) \/ ((double) r10)) \/ ((double) r3.getTileWidth())\lr27 = r2\lr3.setMatrixWidth(r10)\lr3.setMatrixHeight(r14)\lr3.setPixelXSize(r5)\lr3.setPixelYSize(((r1.tileGridBoundingBox.getMaxLatitude() \- r1.tileGridBoundingBox.getMinLatitude()) \/ ((double) r14)) \/ ((double) r3.getTileHeight()))\lr0.update(r3)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0185|ExcHandler: all (r0v7 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:25:0x00d4\l|java.lang.Throwable r0 = move\-exception\l}"];
Node_32 [shape=record,label="{32\:\ 0x0186|r16.close()\l}"];
Node_33 [shape=record,label="{33\:\ 0x0189|throw r0\l}"];
Node_34 [shape=record,label="{34\:\ 0x018a|r27 = r2\lr26 = r11\l}"];
Node_35 [shape=record,label="{35\:\ 0x018e|LOOP_END\lPHI: r26 r27 \l  PHI: (r26v1 int) = (r26v2 int), (r26v3 int) binds: [B:44:0x018e, B:45:0x018e] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r27v0 mil.nga.geopackage.tiles.user.TileDao) = (r27v1 mil.nga.geopackage.tiles.user.TileDao), (r27v2 mil.nga.geopackage.tiles.user.TileDao) binds: [B:44:0x018e, B:45:0x018e] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:20:0x00af\-\>B:35:0x018e\l|long r12 = r12 + 1\lr11 = r26\lr2 = r27\lr1 = r28\l}"];
Node_36 [shape=record,label="{36\:\ 0x0199|r2 = r11\l}"];
Node_37 [shape=record,label="{37\:\ 0x019f|if (r2 \>= r1.minZoom) goto L_?\l}"];
Node_38 [shape=record,label="{38\:\ 0x01a1|long r2 = (long) java.lang.Math.pow(2.0d, (double) (r1.minZoom \- r2))\lr1.matrixWidth = r1.matrixWidth * r2\lr1.matrixHeight = r1.matrixHeight * r2\l}"];
Node_39 [shape=record,label="{39\:\ 0x01b9|java.lang.StringBuilder r2 = new java.lang.StringBuilder()\lr2.append(\"Can not update tiles projected at \")\lr2.append(r3.getCode())\lr2.append(\" with tiles projected at \")\lr2.append(r1.projection.getCode())\l}"];
Node_40 [shape=record,label="{40\:\ 0x01e1|throw new mil.nga.geopackage.GeoPackageException(r2.toString())\l}"];
Node_41 [shape=record,label="{41\:\ 0x01e2|java.lang.StringBuilder r2 = new java.lang.StringBuilder()\lr2.append(\"Can not add Google formatted tiles to \")\lr2.append(r1.tableName)\lr2.append(\" which already contains GeoPackage formatted tiles\")\l}"];
Node_42 [shape=record,label="{42\:\ 0x01ff|throw new mil.nga.geopackage.GeoPackageException(r2.toString())\l}"];
Node_43 [shape=record,label="{43\:\ 0x0199|SYNTHETIC\l}"];
Node_44 [shape=record,label="{44\:\ 0x018e|SYNTHETIC\l}"];
Node_45 [shape=record,label="{45\:\ 0x018e|SYNTHETIC\l}"];
Node_46 [shape=record,label="{46\:\ 0x0141|SYNTHETIC\l}"];
Node_47 [shape=record,label="{47\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_48 [shape=record,label="{48\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_49 [shape=record,label="{49\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private void mil.nga.geopackage.tiles.TileGenerator.updateTileBounds((r28v0 'this' mil.nga.geopackage.tiles.TileGenerator A[IMMUTABLE_TYPE, THIS]), (r29v0 mil.nga.geopackage.tiles.matrixset.TileMatrixSet A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | JADX INFO: finally extract failed\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_41;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_39;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_14;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_48;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_43;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_34;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_25 -> Node_31;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_46;
Node_28 -> Node_29;
Node_29 -> Node_25;
Node_30 -> Node_45;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_34 -> Node_44;
Node_35 -> Node_20;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_49;
Node_38 -> Node_47;
Node_39 -> Node_40;
Node_41 -> Node_42;
Node_43 -> Node_36;
Node_44 -> Node_35;
Node_45 -> Node_35;
Node_46 -> Node_30;
}

