digraph "CFG formil.nga.geopackage.tiles.TileBoundingBoxUtils.getTileColumn(Lmil\/nga\/geopackage\/BoundingBox;JD)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:double) = (r6 I:mil.nga.geopackage.BoundingBox) mil.nga.geopackage.BoundingBox.getMinLongitude():double type: VIRTUAL \l0x0004: INVOKE  (r2 I:double) = (r6 I:mil.nga.geopackage.BoundingBox) mil.nga.geopackage.BoundingBox.getMaxLongitude():double type: VIRTUAL \l0x0008: CMP_G  (r4 I:int) = (r9 I:double), (r0 I:double) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r4 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:3:0x000f \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: CONST  (r7 I:?[long, double]) = (\-1 ?[long, double]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: CMP_L  (r2 I:int) = (r9 I:double), (r2 I:double) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: IF  (r2 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:6:0x0014 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|0x0014: INVOKE  (r2 I:double) = (r6 I:mil.nga.geopackage.BoundingBox) mil.nga.geopackage.BoundingBox.getMaxLongitude():double type: VIRTUAL \l0x0018: INVOKE  (r4 I:double) = (r6 I:mil.nga.geopackage.BoundingBox) mil.nga.geopackage.BoundingBox.getMinLongitude():double type: VIRTUAL \l0x001c: ARITH  (r2 I:double) = (r2 I:double) \- (r4 I:double) \l0x001d: CAST  (r6 I:double) = (double) (r7 I:long) \l0x001e: ARITH  (r2 I:double) = (r2 I:double) \/ (r6 I:double) \l0x001f: ARITH  (r9 I:double) = (r9 I:double) \- (r0 I:double) \l0x0020: ARITH  (r9 I:double) = (r9 I:double) \/ (r2 I:double) \l0x0021: CAST  (r7 I:long) = (long) (r9 I:double) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0022|0x0022: RETURN  (r7 I:long) \l}"];
MethodNode[shape=record,label="{public static long mil.nga.geopackage.tiles.TileBoundingBoxUtils.getTileColumn((r6 I:mil.nga.geopackage.BoundingBox A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_4 -> Node_6;
Node_4 -> Node_7[style=dashed];
Node_6 -> Node_7;
}

