digraph "CFG formil.nga.geopackage.tiles.TileBoundingBoxUtils.getTileRow(Lmil\/nga\/geopackage\/BoundingBox;JD)J" {
subgraph cluster_Region_146250964 {
label = "R(2:0|(2:(1:7)|(1:(2:(1:4)|(2:5|6)))))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|double double r0 = r6.getMinLatitude()\ldouble double r2 = r6.getMaxLatitude()\l}"];
subgraph cluster_Region_809817371 {
label = "R(2:(1:7)|(1:(2:(1:4)|(2:5|6))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_667331534 {
label = "IF [B:1:0x000a] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000a|if (r9 \<= r0) goto L_?\l}"];
subgraph cluster_Region_549783319 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lRETURN\l|return r7\l}"];
}
}
subgraph cluster_Region_1592096852 {
label = "R(1:(2:(1:4)|(2:5|6)))";
node [shape=record,color=blue];
subgraph cluster_Region_1445216138 {
label = "R(2:(1:4)|(2:5|6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_901396506 {
label = "IF [B:3:0x000f] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000f|if (r9 \> r2) goto L_0x0011\l}"];
subgraph cluster_Region_1079956568 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0011|SYNTHETIC\lRETURN\l|return \-1\l}"];
}
}
subgraph cluster_Region_1913235938 {
label = "R(2:5|6)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0014}"];
Node_6 [shape=record,label="{6\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return (long) ((r2 \- r9) \/ ((r6.getMaxLatitude() \- r6.getMinLatitude()) \/ ((double) r7)))\l}"];
}
}
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x000d}"];
MethodNode[shape=record,label="{public static long mil.nga.geopackage.tiles.TileBoundingBoxUtils.getTileRow((r6v0 mil.nga.geopackage.BoundingBox A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_5 -> Node_6;
Node_2 -> Node_3;
}

