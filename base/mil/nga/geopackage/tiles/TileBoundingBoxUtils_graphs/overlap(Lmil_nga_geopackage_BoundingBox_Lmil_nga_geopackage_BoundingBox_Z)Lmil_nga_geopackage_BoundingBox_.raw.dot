digraph "CFG formil.nga.geopackage.tiles.TileBoundingBoxUtils.overlap(Lmil\/nga\/geopackage\/BoundingBox;Lmil\/nga\/geopackage\/BoundingBox;Z)Lmil\/nga\/geopackage\/BoundingBox;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:double) = (r13 I:mil.nga.geopackage.BoundingBox) mil.nga.geopackage.BoundingBox.getMinLongitude():double type: VIRTUAL \l0x0004: INVOKE  (r2 I:double) = (r14 I:mil.nga.geopackage.BoundingBox) mil.nga.geopackage.BoundingBox.getMinLongitude():double type: VIRTUAL \l0x0008: INVOKE  (r5 I:double) = (r0 I:double), (r2 I:double) java.lang.Math.max(double, double):double type: STATIC \l0x000c: INVOKE  (r0 I:double) = (r13 I:mil.nga.geopackage.BoundingBox) mil.nga.geopackage.BoundingBox.getMaxLongitude():double type: VIRTUAL \l0x0010: INVOKE  (r2 I:double) = (r14 I:mil.nga.geopackage.BoundingBox) mil.nga.geopackage.BoundingBox.getMaxLongitude():double type: VIRTUAL \l0x0014: INVOKE  (r9 I:double) = (r0 I:double), (r2 I:double) java.lang.Math.min(double, double):double type: STATIC \l0x0018: INVOKE  (r0 I:double) = (r13 I:mil.nga.geopackage.BoundingBox) mil.nga.geopackage.BoundingBox.getMinLatitude():double type: VIRTUAL \l0x001c: INVOKE  (r2 I:double) = (r14 I:mil.nga.geopackage.BoundingBox) mil.nga.geopackage.BoundingBox.getMinLatitude():double type: VIRTUAL \l0x0020: INVOKE  (r7 I:double) = (r0 I:double), (r2 I:double) java.lang.Math.max(double, double):double type: STATIC \l0x0024: INVOKE  (r0 I:double) = (r13 I:mil.nga.geopackage.BoundingBox) mil.nga.geopackage.BoundingBox.getMaxLatitude():double type: VIRTUAL \l0x0028: INVOKE  (r13 I:double) = (r14 I:mil.nga.geopackage.BoundingBox) mil.nga.geopackage.BoundingBox.getMaxLatitude():double type: VIRTUAL \l0x002c: INVOKE  (r11 I:double) = (r0 I:double), (r13 I:double) java.lang.Math.min(double, double):double type: STATIC \l0x0030: CMP_G  (r13 I:int) = (r5 I:double), (r9 I:double) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0032|0x0032: IF  (r13 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:4:0x0038 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0034|0x0034: CMP_G  (r14 I:int) = (r7 I:double), (r11 I:double) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0036|0x0036: IF  (r14 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:8:0x0040 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0038|0x0038: IF  (r15 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0047 \l}"];
Node_5 [shape=record,label="{5\:\ 0x003a|0x003a: IF  (r13 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:9:0x0047 \l}"];
Node_6 [shape=record,label="{6\:\ 0x003c|0x003c: CMP_G  (r13 I:int) = (r7 I:double), (r11 I:double) \l}"];
Node_7 [shape=record,label="{7\:\ 0x003e|0x003e: IF  (r13 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:9:0x0047 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0040|0x0040: NEW_INSTANCE  (r13 I:mil.nga.geopackage.BoundingBox) =  mil.nga.geopackage.BoundingBox \l0x0042: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r13 I:?[OBJECT, ARRAY]) \l0x0043: INVOKE  \l  (r4 I:mil.nga.geopackage.BoundingBox)\l  (r5 I:double)\l  (r7 I:double)\l  (r9 I:double)\l  (r11 I:double)\l mil.nga.geopackage.BoundingBox.\<init\>(double, double, double, double):void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x0047|0x0047: CONST  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x0048|0x0048: RETURN  (r13 I:mil.nga.geopackage.BoundingBox) \l}"];
MethodNode[shape=record,label="{public static mil.nga.geopackage.BoundingBox mil.nga.geopackage.tiles.TileBoundingBoxUtils.overlap((r13 I:mil.nga.geopackage.BoundingBox A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:mil.nga.geopackage.BoundingBox A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_9;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_10;
Node_9 -> Node_10;
}

