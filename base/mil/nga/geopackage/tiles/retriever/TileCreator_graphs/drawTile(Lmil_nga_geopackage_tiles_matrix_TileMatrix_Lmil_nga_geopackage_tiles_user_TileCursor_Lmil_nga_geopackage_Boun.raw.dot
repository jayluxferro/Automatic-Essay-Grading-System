digraph "CFG formil.nga.geopackage.tiles.retriever.TileCreator.drawTile(Lmil\/nga\/geopackage\/tiles\/matrix\/TileMatrix;Lmil\/nga\/geopackage\/tiles\/user\/TileCursor;Lmil\/nga\/geopackage\/BoundingBox;II)Landroid\/graphics\/Bitmap;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r25 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0002: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r26 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0004: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0005: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l0x0006: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: INVOKE  (r5 I:boolean) = (r23 I:mil.nga.geopackage.tiles.user.TileCursor) mil.nga.geopackage.tiles.user.TileCursor.moveToNext():boolean type: VIRTUAL \l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|0x000b: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0062 \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: INVOKE  (r5 I:mil.nga.geopackage.user.UserRow) = (r23 I:mil.nga.geopackage.tiles.user.TileCursor) mil.nga.geopackage.tiles.user.TileCursor.getRow():mil.nga.geopackage.user.UserRow type: VIRTUAL \l0x0011: CHECK_CAST  (r5 I:mil.nga.geopackage.tiles.user.TileRow) = (mil.nga.geopackage.tiles.user.TileRow) (r5 I:?[OBJECT, ARRAY]) \l0x0013: INVOKE  (r6 I:android.graphics.Bitmap) = (r5 I:mil.nga.geopackage.tiles.user.TileRow) mil.nga.geopackage.tiles.user.TileRow.getTileDataBitmap():android.graphics.Bitmap type: VIRTUAL \l0x0017: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x0019: IGET  (r8 I:mil.nga.geopackage.BoundingBox) = (r7 I:mil.nga.geopackage.tiles.retriever.TileCreator) mil.nga.geopackage.tiles.retriever.TileCreator.tileSetBoundingBox mil.nga.geopackage.BoundingBox \l0x001b: INVOKE  (r10 I:long) = (r5 I:mil.nga.geopackage.tiles.user.TileRow) mil.nga.geopackage.tiles.user.TileRow.getTileColumn():long type: VIRTUAL \l0x001f: INVOKE  (r12 I:long) = (r5 I:mil.nga.geopackage.tiles.user.TileRow) mil.nga.geopackage.tiles.user.TileRow.getTileRow():long type: VIRTUAL \l0x0023: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r22 I:?[OBJECT, ARRAY]) \l0x0025: INVOKE  (r5 I:mil.nga.geopackage.BoundingBox) = \l  (r8 I:mil.nga.geopackage.BoundingBox)\l  (r9 I:mil.nga.geopackage.tiles.matrix.TileMatrix)\l  (r10 I:long)\l  (r12 I:long)\l mil.nga.geopackage.tiles.TileBoundingBoxUtils.getBoundingBox(mil.nga.geopackage.BoundingBox, mil.nga.geopackage.tiles.matrix.TileMatrix, long, long):mil.nga.geopackage.BoundingBox type: STATIC \l0x0029: MOVE  (r13 I:?[OBJECT, ARRAY]) = (r24 I:?[OBJECT, ARRAY]) \l0x002b: INVOKE  (r20 I:mil.nga.geopackage.BoundingBox) = \l  (r13 I:mil.nga.geopackage.BoundingBox)\l  (r5 I:mil.nga.geopackage.BoundingBox)\l mil.nga.geopackage.tiles.TileBoundingBoxUtils.overlap(mil.nga.geopackage.BoundingBox, mil.nga.geopackage.BoundingBox):mil.nga.geopackage.BoundingBox type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x002f|0x002f: IF  (r20 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0007 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0031|0x0031: INVOKE  (r14 I:long) = (r22 I:mil.nga.geopackage.tiles.matrix.TileMatrix) mil.nga.geopackage.tiles.matrix.TileMatrix.getTileWidth():long type: VIRTUAL \l0x0035: INVOKE  (r16 I:long) = (r22 I:mil.nga.geopackage.tiles.matrix.TileMatrix) mil.nga.geopackage.tiles.matrix.TileMatrix.getTileHeight():long type: VIRTUAL \l0x0039: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r5 I:?[OBJECT, ARRAY]) \l0x003b: MOVE  (r19 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x003d: INVOKE  (r5 I:android.graphics.Rect) = \l  (r14 I:long)\l  (r16 I:long)\l  (r18 I:mil.nga.geopackage.BoundingBox)\l  (r19 I:mil.nga.geopackage.BoundingBox)\l mil.nga.geopackage.tiles.TileBoundingBoxAndroidUtils.getRectangle(long, long, mil.nga.geopackage.BoundingBox, mil.nga.geopackage.BoundingBox):android.graphics.Rect type: STATIC \l0x0041: CAST  (r8 I:long) = (long) (r0 I:int) \l0x0042: CAST  (r10 I:long) = (long) (r1 I:int) \l0x0043: MOVE  (r12 I:?[OBJECT, ARRAY]) = (r24 I:?[OBJECT, ARRAY]) \l0x0045: MOVE  (r13 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x0047: INVOKE  (r8 I:android.graphics.RectF) = \l  (r8 I:long)\l  (r10 I:long)\l  (r12 I:mil.nga.geopackage.BoundingBox)\l  (r13 I:mil.nga.geopackage.BoundingBox)\l mil.nga.geopackage.tiles.TileBoundingBoxAndroidUtils.getRoundedFloatRectangle(long, long, mil.nga.geopackage.BoundingBox, mil.nga.geopackage.BoundingBox):android.graphics.RectF type: STATIC \l}"];
Node_6 [shape=record,label="{6\:\ 0x004b|0x004b: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x005e \l}"];
Node_7 [shape=record,label="{7\:\ 0x004d|0x004d: SGET  (r2 I:android.graphics.Bitmap$Config) =  android.graphics.Bitmap.Config.ARGB_8888 android.graphics.Bitmap$Config \l0x004f: INVOKE  (r2 I:android.graphics.Bitmap) = \l  (r0 I:int)\l  (r1 I:int)\l  (r2 I:android.graphics.Bitmap$Config)\l android.graphics.Bitmap.createBitmap(int, int, android.graphics.Bitmap$Config):android.graphics.Bitmap type: STATIC \l0x0053: NEW_INSTANCE  (r3 I:android.graphics.Canvas) =  android.graphics.Canvas \l0x0055: INVOKE  \l  (r3 I:android.graphics.Canvas)\l  (r2 I:android.graphics.Bitmap)\l android.graphics.Canvas.\<init\>(android.graphics.Bitmap):void type: DIRECT \l0x0058: NEW_INSTANCE  (r4 I:android.graphics.Paint) =  android.graphics.Paint \l0x005a: CONST  (r9 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x005b: INVOKE  (r4 I:android.graphics.Paint), (r9 I:int) android.graphics.Paint.\<init\>(int):void type: DIRECT \l}"];
Node_8 [shape=record,label="{8\:\ 0x005e|0x005e: INVOKE  \l  (r3 I:android.graphics.Canvas)\l  (r6 I:android.graphics.Bitmap)\l  (r5 I:android.graphics.Rect)\l  (r8 I:android.graphics.RectF)\l  (r4 I:android.graphics.Paint)\l android.graphics.Canvas.drawBitmap(android.graphics.Bitmap, android.graphics.Rect, android.graphics.RectF, android.graphics.Paint):void type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0062|0x0062: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0064|0x0064: RETURN  (r2 I:android.graphics.Bitmap) \l}"];
MethodNode[shape=record,label="{private android.graphics.Bitmap mil.nga.geopackage.tiles.retriever.TileCreator.drawTile((r21 'this' I:mil.nga.geopackage.tiles.retriever.TileCreator A[IMMUTABLE_TYPE, THIS]), (r22 I:mil.nga.geopackage.tiles.matrix.TileMatrix A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23 I:mil.nga.geopackage.tiles.user.TileCursor A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24 I:mil.nga.geopackage.BoundingBox A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r25 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r26 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_9;
Node_3 -> Node_4;
Node_4 -> Node_1;
Node_4 -> Node_5[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_1;
Node_9 -> Node_10;
}

