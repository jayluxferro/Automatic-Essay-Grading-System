digraph "CFG formil.nga.geopackage.tiles.overlay.FeatureRowData.jsonCompatible(ZZ)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.util.HashMap) =  java.util.HashMap \l0x0002: INVOKE  (r0 I:java.util.HashMap) java.util.HashMap.\<init\>():void type: DIRECT \l0x0005: IGET  (r1 I:java.util.Map\<java.lang.String, java.lang.Object\>) = (r7 I:mil.nga.geopackage.tiles.overlay.FeatureRowData) mil.nga.geopackage.tiles.overlay.FeatureRowData.values java.util.Map \l0x0007: INVOKE  (r1 I:java.util.Set) = (r1 I:java.util.Map) java.util.Map.keySet():java.util.Set type: INTERFACE \l0x000b: INVOKE  (r1 I:java.util.Iterator) = (r1 I:java.util.Set) java.util.Set.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|0x000f: INVOKE  (r2 I:boolean) = (r1 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x0013|0x0013: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0053 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|0x0015: INVOKE  (r2 I:java.lang.Object) = (r1 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0019: CHECK_CAST  (r2 I:java.lang.String) = (java.lang.String) (r2 I:?[OBJECT, ARRAY]) \l0x001b: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001c: IGET  (r4 I:java.util.Map\<java.lang.String, java.lang.Object\>) = (r7 I:mil.nga.geopackage.tiles.overlay.FeatureRowData) mil.nga.geopackage.tiles.overlay.FeatureRowData.values java.util.Map \l0x001e: INVOKE  (r4 I:java.lang.Object) = (r4 I:java.util.Map), (r2 I:java.lang.Object) java.util.Map.get(java.lang.Object):java.lang.Object type: INTERFACE \l0x0022: IGET  (r5 I:java.lang.String) = (r7 I:mil.nga.geopackage.tiles.overlay.FeatureRowData) mil.nga.geopackage.tiles.overlay.FeatureRowData.geometryColumn java.lang.String \l0x0024: INVOKE  (r5 I:boolean) = (r2 I:java.lang.String), (r5 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0028|0x0028: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x000f \l}"];
Node_5 [shape=record,label="{5\:\ 0x002a|0x002a: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY]) \l0x002b: CHECK_CAST  (r5 I:mil.nga.geopackage.geom.GeoPackageGeometryData) = (mil.nga.geopackage.geom.GeoPackageGeometryData) (r5 I:?[OBJECT, ARRAY]) \l0x002d: INVOKE  (r6 I:mil.nga.wkb.geom.Geometry) = (r5 I:mil.nga.geopackage.geom.GeoPackageGeometryData) mil.nga.geopackage.geom.GeoPackageGeometryData.getGeometry():mil.nga.wkb.geom.Geometry type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0031|0x0031: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x004c \l}"];
Node_7 [shape=record,label="{7\:\ 0x0033|0x0033: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0043 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0035|0x0035: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x004d \l}"];
Node_9 [shape=record,label="{9\:\ 0x0037|0x0037: INVOKE  (r4 I:mil.nga.wkb.geom.Geometry) = (r5 I:mil.nga.geopackage.geom.GeoPackageGeometryData) mil.nga.geopackage.geom.GeoPackageGeometryData.getGeometry():mil.nga.wkb.geom.Geometry type: VIRTUAL \l0x003b: INVOKE  (r4 I:mil.nga.wkb.geom.GeometryType) = (r4 I:mil.nga.wkb.geom.Geometry) mil.nga.wkb.geom.Geometry.getGeometryType():mil.nga.wkb.geom.GeometryType type: VIRTUAL \l0x003f: SGET  (r6 I:mil.nga.wkb.geom.GeometryType) =  mil.nga.wkb.geom.GeometryType.POINT mil.nga.wkb.geom.GeometryType \l}"];
Node_10 [shape=record,label="{10\:\ 0x0041|0x0041: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x004d \l}"];
Node_11 [shape=record,label="{11\:\ 0x0043|0x0043: INVOKE  (r3 I:mil.nga.wkb.geom.Geometry) = (r5 I:mil.nga.geopackage.geom.GeoPackageGeometryData) mil.nga.geopackage.geom.GeoPackageGeometryData.getGeometry():mil.nga.wkb.geom.Geometry type: VIRTUAL \l0x0047: INVOKE  (r3 I:java.lang.Object) = (r3 I:mil.nga.wkb.geom.Geometry) mil.nga.wkb.util.GeometryJSONCompatible.getJSONCompatibleGeometry(mil.nga.wkb.geom.Geometry):java.lang.Object type: STATIC \l}"];
Node_12 [shape=record,label="{12\:\ 0x004c|0x004c: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x004d|0x004d: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x000f \l}"];
Node_14 [shape=record,label="{14\:\ 0x004f|0x004f: INVOKE  \l  (r0 I:java.util.Map)\l  (r2 I:java.lang.Object)\l  (r3 I:java.lang.Object)\l java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE \l}"];
Node_15 [shape=record,label="{15\:\ 0x0053|0x0053: RETURN  (r0 I:java.lang.Object) \l}"];
MethodNode[shape=record,label="{public java.lang.Object mil.nga.geopackage.tiles.overlay.FeatureRowData.jsonCompatible((r7 'this' I:mil.nga.geopackage.tiles.overlay.FeatureRowData A[IMMUTABLE_TYPE, THIS]), (r8 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_15;
Node_3 -> Node_4;
Node_4 -> Node_1;
Node_4 -> Node_5[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_12;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_13;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_1;
Node_13 -> Node_14[style=dashed];
Node_14 -> Node_1;
}

