digraph "CFG formil.nga.geopackage.tiles.features.FeatureTilePointIcon.\<init\>(Landroid\/graphics\/Bitmap;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0004: IPUT  \l  (r0 I:float)\l  (r1 I:mil.nga.geopackage.tiles.features.FeatureTilePointIcon)\l mil.nga.geopackage.tiles.features.FeatureTilePointIcon.xOffset float \l0x0006: IPUT  \l  (r0 I:float)\l  (r1 I:mil.nga.geopackage.tiles.features.FeatureTilePointIcon)\l mil.nga.geopackage.tiles.features.FeatureTilePointIcon.yOffset float \l0x0008: IPUT  \l  (r2 I:android.graphics.Bitmap)\l  (r1 I:mil.nga.geopackage.tiles.features.FeatureTilePointIcon)\l mil.nga.geopackage.tiles.features.FeatureTilePointIcon.icon android.graphics.Bitmap \l0x000a: INVOKE  (r0 I:int) = (r2 I:android.graphics.Bitmap) android.graphics.Bitmap.getWidth():int type: VIRTUAL \l0x000e: IPUT  \l  (r0 I:int)\l  (r1 I:mil.nga.geopackage.tiles.features.FeatureTilePointIcon)\l mil.nga.geopackage.tiles.features.FeatureTilePointIcon.width int \l0x0010: INVOKE  (r2 I:int) = (r2 I:android.graphics.Bitmap) android.graphics.Bitmap.getHeight():int type: VIRTUAL \l0x0014: IPUT  \l  (r2 I:int)\l  (r1 I:mil.nga.geopackage.tiles.features.FeatureTilePointIcon)\l mil.nga.geopackage.tiles.features.FeatureTilePointIcon.height int \l0x0016: INVOKE  \l  (r1 I:mil.nga.geopackage.tiles.features.FeatureTilePointIcon)\l mil.nga.geopackage.tiles.features.FeatureTilePointIcon.pinIcon():void type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0019|0x0019: RETURN   \l}"];
MethodNode[shape=record,label="{public void mil.nga.geopackage.tiles.features.FeatureTilePointIcon.\<init\>((r1 'this' I:mil.nga.geopackage.tiles.features.FeatureTilePointIcon A[IMMUTABLE_TYPE, THIS]), (r2 I:android.graphics.Bitmap A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

