digraph "CFG formil.nga.geopackage.tiles.features.DefaultFeatureTiles.addPolygon(DLmil\/nga\/geopackage\/BoundingBox;Lmil\/nga\/geopackage\/projection\/ProjectionTransform;Landroid\/graphics\/Path;Lmil\/nga\/wkb\/geom\/Polygon;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:java.util.List) = (r23 I:mil.nga.wkb.geom.Polygon) mil.nga.wkb.geom.Polygon.getRings():java.util.List type: VIRTUAL \l0x0004: INVOKE  (r1 I:boolean) = (r0 I:java.util.List) java.util.List.isEmpty():boolean type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0050 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000b: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.List), (r1 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x000f: CHECK_CAST  (r1 I:mil.nga.wkb.geom.LineString) = (mil.nga.wkb.geom.LineString) (r1 I:?[OBJECT, ARRAY]) \l0x0011: INVOKE  (r8 I:java.util.List) = (r1 I:mil.nga.wkb.geom.LineString) mil.nga.wkb.geom.LineString.getPoints():java.util.List type: VIRTUAL \l0x0015: INVOKE  (r1 I:int) = (r8 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x0019: CONST  (r9 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x001a|0x001a: IF  (r1 I:?[int, byte, short, char]) \< (r9 I:?[int, byte, short, char])  \-\> B:11:0x0050 \l}"];
Node_4 [shape=record,label="{4\:\ 0x001c|0x001c: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x001e: MOVE  (r3 I:?[long, double]) = (r18 I:?[long, double]) \l0x0020: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x0022: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x0024: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r22 I:?[OBJECT, ARRAY]) \l0x0026: INVOKE  \l  (r2 I:mil.nga.geopackage.tiles.features.DefaultFeatureTiles)\l  (r3 I:double)\l  (r5 I:mil.nga.geopackage.BoundingBox)\l  (r6 I:mil.nga.geopackage.projection.ProjectionTransform)\l  (r7 I:android.graphics.Path)\l  (r8 I:java.util.List)\l mil.nga.geopackage.tiles.features.DefaultFeatureTiles.addRing(double, mil.nga.geopackage.BoundingBox, mil.nga.geopackage.projection.ProjectionTransform, android.graphics.Path, java.util.List):void type: DIRECT \l0x0029: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x002a|0x002a: INVOKE  (r2 I:int) = (r0 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_6 [shape=record,label="{6\:\ 0x002e|0x002e: IF  (r1 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:11:0x0050 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0030|0x0030: INVOKE  (r2 I:java.lang.Object) = (r0 I:java.util.List), (r1 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0034: CHECK_CAST  (r2 I:mil.nga.wkb.geom.LineString) = (mil.nga.wkb.geom.LineString) (r2 I:?[OBJECT, ARRAY]) \l0x0036: INVOKE  (r16 I:java.util.List) = (r2 I:mil.nga.wkb.geom.LineString) mil.nga.wkb.geom.LineString.getPoints():java.util.List type: VIRTUAL \l0x003a: INVOKE  (r2 I:int) = (r16 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_8 [shape=record,label="{8\:\ 0x003e|0x003e: IF  (r2 I:?[int, byte, short, char]) \< (r9 I:?[int, byte, short, char])  \-\> B:10:0x004d \l}"];
Node_9 [shape=record,label="{9\:\ 0x0040|0x0040: MOVE  (r10 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x0042: MOVE  (r11 I:?[long, double]) = (r18 I:?[long, double]) \l0x0044: MOVE  (r13 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x0046: MOVE  (r14 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x0048: MOVE  (r15 I:?[OBJECT, ARRAY]) = (r22 I:?[OBJECT, ARRAY]) \l0x004a: INVOKE  \l  (r10 I:mil.nga.geopackage.tiles.features.DefaultFeatureTiles)\l  (r11 I:double)\l  (r13 I:mil.nga.geopackage.BoundingBox)\l  (r14 I:mil.nga.geopackage.projection.ProjectionTransform)\l  (r15 I:android.graphics.Path)\l  (r16 I:java.util.List)\l mil.nga.geopackage.tiles.features.DefaultFeatureTiles.addRing(double, mil.nga.geopackage.BoundingBox, mil.nga.geopackage.projection.ProjectionTransform, android.graphics.Path, java.util.List):void type: DIRECT \l}"];
Node_10 [shape=record,label="{10\:\ 0x004d|0x004d: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0050|0x0050: RETURN   \l}"];
MethodNode[shape=record,label="{private void mil.nga.geopackage.tiles.features.DefaultFeatureTiles.addPolygon((r17 'this' I:mil.nga.geopackage.tiles.features.DefaultFeatureTiles A[IMMUTABLE_TYPE, THIS]), (r18 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20 I:mil.nga.geopackage.BoundingBox A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21 I:mil.nga.geopackage.projection.ProjectionTransform A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22 I:android.graphics.Path A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23 I:mil.nga.wkb.geom.Polygon A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_11;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_11;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_5;
}

