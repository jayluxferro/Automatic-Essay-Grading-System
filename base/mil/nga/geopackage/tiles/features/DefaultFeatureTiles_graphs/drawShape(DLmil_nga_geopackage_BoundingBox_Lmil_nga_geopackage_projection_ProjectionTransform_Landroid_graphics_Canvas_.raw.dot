digraph "CFG formil.nga.geopackage.tiles.features.DefaultFeatureTiles.drawShape(DLmil\/nga\/geopackage\/BoundingBox;Lmil\/nga\/geopackage\/projection\/ProjectionTransform;Landroid\/graphics\/Canvas;Lmil\/nga\/wkb\/geom\/Geometry;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) \l0x0001: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) \l0x0003: SGET  (r1 I:int[]) =  mil.nga.geopackage.tiles.features.DefaultFeatureTiles.1.$SwitchMap$mil$nga$wkb$geom$GeometryType int[] \l0x0005: INVOKE  (r2 I:mil.nga.wkb.geom.GeometryType) = (r17 I:mil.nga.wkb.geom.Geometry) mil.nga.wkb.geom.Geometry.getGeometryType():mil.nga.wkb.geom.GeometryType type: VIRTUAL \l0x0009: INVOKE  (r2 I:int) = (r2 I:mil.nga.wkb.geom.GeometryType) mil.nga.wkb.geom.GeometryType.ordinal():int type: VIRTUAL \l0x000d: AGET  (r1 I:?[int, float]) = (r1 I:?[int, float][]), (r2 I:?[int, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|0x000f: SWITCH  \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12] t:[0x0152, 0x013d, 0x013d, 0x0128, 0x0128, 0x0104, 0x00d8, 0x00ac, 0x0080, 0x0054, 0x0054, 0x0031] \l}"];
Node_2 [shape=record,label="{2\:\ 0x0012|0x0012: NEW_INSTANCE  (r1 I:mil.nga.geopackage.GeoPackageException) =  mil.nga.geopackage.GeoPackageException \l0x0014: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0016: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0019: CONST_STR  (r3 I:java.lang.String) =  \"Unsupported Geometry Type: \" \l0x001b: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x001e: INVOKE  (r0 I:mil.nga.wkb.geom.GeometryType) = (r17 I:mil.nga.wkb.geom.Geometry) mil.nga.wkb.geom.Geometry.getGeometryType():mil.nga.wkb.geom.GeometryType type: VIRTUAL \l0x0022: INVOKE  (r0 I:java.lang.String) = (r0 I:mil.nga.wkb.geom.GeometryType) mil.nga.wkb.geom.GeometryType.getName():java.lang.String type: VIRTUAL \l0x0026: INVOKE  (r2 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0029: INVOKE  (r0 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x002d: INVOKE  \l  (r1 I:mil.nga.geopackage.GeoPackageException)\l  (r0 I:java.lang.String)\l mil.nga.geopackage.GeoPackageException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x0030|0x0030: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0031|0x0031: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x0033: CHECK_CAST  (r0 I:mil.nga.wkb.geom.GeometryCollection) = (mil.nga.wkb.geom.GeometryCollection) (r0 I:?[OBJECT, ARRAY]) \l0x0035: INVOKE  (r0 I:java.util.List) = (r0 I:mil.nga.wkb.geom.GeometryCollection) mil.nga.wkb.geom.GeometryCollection.getGeometries():java.util.List type: VIRTUAL \l0x0039: INVOKE  (r9 I:java.util.Iterator) = (r0 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_5 [shape=record,label="{5\:\ 0x003d|0x003d: INVOKE  (r0 I:boolean) = (r9 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_6 [shape=record,label="{6\:\ 0x0041|0x0041: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x0160 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0043|0x0043: INVOKE  (r0 I:java.lang.Object) = (r9 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0047: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0048: CHECK_CAST  (r6 I:mil.nga.wkb.geom.Geometry) = (mil.nga.wkb.geom.Geometry) (r6 I:?[OBJECT, ARRAY]) \l0x004a: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) \l0x004b: MOVE  (r1 I:?[long, double]) = (r12 I:?[long, double]) \l0x004c: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY]) \l0x004d: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r15 I:?[OBJECT, ARRAY]) \l0x004e: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) \l0x0050: INVOKE  \l  (r0 I:mil.nga.geopackage.tiles.features.DefaultFeatureTiles)\l  (r1 I:double)\l  (r3 I:mil.nga.geopackage.BoundingBox)\l  (r4 I:mil.nga.geopackage.projection.ProjectionTransform)\l  (r5 I:android.graphics.Canvas)\l  (r6 I:mil.nga.wkb.geom.Geometry)\l mil.nga.geopackage.tiles.features.DefaultFeatureTiles.drawShape(double, mil.nga.geopackage.BoundingBox, mil.nga.geopackage.projection.ProjectionTransform, android.graphics.Canvas, mil.nga.wkb.geom.Geometry):void type: DIRECT \l}"];
Node_8 [shape=record,label="{8\:\ 0x0054|0x0054: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x0056: CHECK_CAST  (r0 I:mil.nga.wkb.geom.PolyhedralSurface) = (mil.nga.wkb.geom.PolyhedralSurface) (r0 I:?[OBJECT, ARRAY]) \l0x0058: NEW_INSTANCE  (r9 I:android.graphics.Path) =  android.graphics.Path \l0x005a: INVOKE  (r9 I:android.graphics.Path) android.graphics.Path.\<init\>():void type: DIRECT \l0x005d: INVOKE  (r0 I:java.util.List) = (r0 I:mil.nga.wkb.geom.PolyhedralSurface) mil.nga.wkb.geom.PolyhedralSurface.getPolygons():java.util.List type: VIRTUAL \l0x0061: INVOKE  (r10 I:java.util.Iterator) = (r0 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_9 [shape=record,label="{9\:\ 0x0065|0x0065: INVOKE  (r0 I:boolean) = (r10 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_10 [shape=record,label="{10\:\ 0x0069|0x0069: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x007b \l}"];
Node_11 [shape=record,label="{11\:\ 0x006b|0x006b: INVOKE  (r0 I:java.lang.Object) = (r10 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x006f: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0070: CHECK_CAST  (r6 I:mil.nga.wkb.geom.Polygon) = (mil.nga.wkb.geom.Polygon) (r6 I:?[OBJECT, ARRAY]) \l0x0072: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) \l0x0073: MOVE  (r1 I:?[long, double]) = (r12 I:?[long, double]) \l0x0074: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY]) \l0x0075: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r15 I:?[OBJECT, ARRAY]) \l0x0076: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x0077: INVOKE  \l  (r0 I:mil.nga.geopackage.tiles.features.DefaultFeatureTiles)\l  (r1 I:double)\l  (r3 I:mil.nga.geopackage.BoundingBox)\l  (r4 I:mil.nga.geopackage.projection.ProjectionTransform)\l  (r5 I:android.graphics.Path)\l  (r6 I:mil.nga.wkb.geom.Polygon)\l mil.nga.geopackage.tiles.features.DefaultFeatureTiles.addPolygon(double, mil.nga.geopackage.BoundingBox, mil.nga.geopackage.projection.ProjectionTransform, android.graphics.Path, mil.nga.wkb.geom.Polygon):void type: DIRECT \l}"];
Node_12 [shape=record,label="{12\:\ 0x007b|0x007b: INVOKE  \l  (r11 I:mil.nga.geopackage.tiles.features.DefaultFeatureTiles)\l  (r8 I:android.graphics.Canvas)\l  (r9 I:android.graphics.Path)\l mil.nga.geopackage.tiles.features.DefaultFeatureTiles.drawPolygonPath(android.graphics.Canvas, android.graphics.Path):void type: DIRECT \l}"];
Node_13 [shape=record,label="{13\:\ 0x0080|0x0080: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x0082: CHECK_CAST  (r0 I:mil.nga.wkb.geom.CompoundCurve) = (mil.nga.wkb.geom.CompoundCurve) (r0 I:?[OBJECT, ARRAY]) \l0x0084: NEW_INSTANCE  (r9 I:android.graphics.Path) =  android.graphics.Path \l0x0086: INVOKE  (r9 I:android.graphics.Path) android.graphics.Path.\<init\>():void type: DIRECT \l0x0089: INVOKE  (r0 I:java.util.List) = (r0 I:mil.nga.wkb.geom.CompoundCurve) mil.nga.wkb.geom.CompoundCurve.getLineStrings():java.util.List type: VIRTUAL \l0x008d: INVOKE  (r10 I:java.util.Iterator) = (r0 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_14 [shape=record,label="{14\:\ 0x0091|0x0091: INVOKE  (r0 I:boolean) = (r10 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_15 [shape=record,label="{15\:\ 0x0095|0x0095: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x00a7 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0097|0x0097: INVOKE  (r0 I:java.lang.Object) = (r10 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x009b: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x009c: CHECK_CAST  (r6 I:mil.nga.wkb.geom.LineString) = (mil.nga.wkb.geom.LineString) (r6 I:?[OBJECT, ARRAY]) \l0x009e: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) \l0x009f: MOVE  (r1 I:?[long, double]) = (r12 I:?[long, double]) \l0x00a0: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY]) \l0x00a1: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r15 I:?[OBJECT, ARRAY]) \l0x00a2: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x00a3: INVOKE  \l  (r0 I:mil.nga.geopackage.tiles.features.DefaultFeatureTiles)\l  (r1 I:double)\l  (r3 I:mil.nga.geopackage.BoundingBox)\l  (r4 I:mil.nga.geopackage.projection.ProjectionTransform)\l  (r5 I:android.graphics.Path)\l  (r6 I:mil.nga.wkb.geom.LineString)\l mil.nga.geopackage.tiles.features.DefaultFeatureTiles.addLineString(double, mil.nga.geopackage.BoundingBox, mil.nga.geopackage.projection.ProjectionTransform, android.graphics.Path, mil.nga.wkb.geom.LineString):void type: DIRECT \l}"];
Node_17 [shape=record,label="{17\:\ 0x00a7|0x00a7: INVOKE  \l  (r11 I:mil.nga.geopackage.tiles.features.DefaultFeatureTiles)\l  (r8 I:android.graphics.Canvas)\l  (r9 I:android.graphics.Path)\l mil.nga.geopackage.tiles.features.DefaultFeatureTiles.drawLinePath(android.graphics.Canvas, android.graphics.Path):void type: DIRECT \l}"];
Node_18 [shape=record,label="{18\:\ 0x00ac|0x00ac: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x00ae: CHECK_CAST  (r0 I:mil.nga.wkb.geom.MultiPolygon) = (mil.nga.wkb.geom.MultiPolygon) (r0 I:?[OBJECT, ARRAY]) \l0x00b0: NEW_INSTANCE  (r9 I:android.graphics.Path) =  android.graphics.Path \l0x00b2: INVOKE  (r9 I:android.graphics.Path) android.graphics.Path.\<init\>():void type: DIRECT \l0x00b5: INVOKE  (r0 I:java.util.List) = (r0 I:mil.nga.wkb.geom.MultiPolygon) mil.nga.wkb.geom.MultiPolygon.getPolygons():java.util.List type: VIRTUAL \l0x00b9: INVOKE  (r10 I:java.util.Iterator) = (r0 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_19 [shape=record,label="{19\:\ 0x00bd|0x00bd: INVOKE  (r0 I:boolean) = (r10 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_20 [shape=record,label="{20\:\ 0x00c1|0x00c1: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x00d3 \l}"];
Node_21 [shape=record,label="{21\:\ 0x00c3|0x00c3: INVOKE  (r0 I:java.lang.Object) = (r10 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x00c7: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x00c8: CHECK_CAST  (r6 I:mil.nga.wkb.geom.Polygon) = (mil.nga.wkb.geom.Polygon) (r6 I:?[OBJECT, ARRAY]) \l0x00ca: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) \l0x00cb: MOVE  (r1 I:?[long, double]) = (r12 I:?[long, double]) \l0x00cc: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY]) \l0x00cd: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r15 I:?[OBJECT, ARRAY]) \l0x00ce: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x00cf: INVOKE  \l  (r0 I:mil.nga.geopackage.tiles.features.DefaultFeatureTiles)\l  (r1 I:double)\l  (r3 I:mil.nga.geopackage.BoundingBox)\l  (r4 I:mil.nga.geopackage.projection.ProjectionTransform)\l  (r5 I:android.graphics.Path)\l  (r6 I:mil.nga.wkb.geom.Polygon)\l mil.nga.geopackage.tiles.features.DefaultFeatureTiles.addPolygon(double, mil.nga.geopackage.BoundingBox, mil.nga.geopackage.projection.ProjectionTransform, android.graphics.Path, mil.nga.wkb.geom.Polygon):void type: DIRECT \l}"];
Node_22 [shape=record,label="{22\:\ 0x00d3|0x00d3: INVOKE  \l  (r11 I:mil.nga.geopackage.tiles.features.DefaultFeatureTiles)\l  (r8 I:android.graphics.Canvas)\l  (r9 I:android.graphics.Path)\l mil.nga.geopackage.tiles.features.DefaultFeatureTiles.drawPolygonPath(android.graphics.Canvas, android.graphics.Path):void type: DIRECT \l}"];
Node_23 [shape=record,label="{23\:\ 0x00d8|0x00d8: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x00da: CHECK_CAST  (r0 I:mil.nga.wkb.geom.MultiLineString) = (mil.nga.wkb.geom.MultiLineString) (r0 I:?[OBJECT, ARRAY]) \l0x00dc: NEW_INSTANCE  (r9 I:android.graphics.Path) =  android.graphics.Path \l0x00de: INVOKE  (r9 I:android.graphics.Path) android.graphics.Path.\<init\>():void type: DIRECT \l0x00e1: INVOKE  (r0 I:java.util.List) = (r0 I:mil.nga.wkb.geom.MultiLineString) mil.nga.wkb.geom.MultiLineString.getLineStrings():java.util.List type: VIRTUAL \l0x00e5: INVOKE  (r10 I:java.util.Iterator) = (r0 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_24 [shape=record,label="{24\:\ 0x00e9|0x00e9: INVOKE  (r0 I:boolean) = (r10 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_25 [shape=record,label="{25\:\ 0x00ed|0x00ed: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x00ff \l}"];
Node_26 [shape=record,label="{26\:\ 0x00ef|0x00ef: INVOKE  (r0 I:java.lang.Object) = (r10 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x00f3: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x00f4: CHECK_CAST  (r6 I:mil.nga.wkb.geom.LineString) = (mil.nga.wkb.geom.LineString) (r6 I:?[OBJECT, ARRAY]) \l0x00f6: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) \l0x00f7: MOVE  (r1 I:?[long, double]) = (r12 I:?[long, double]) \l0x00f8: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY]) \l0x00f9: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r15 I:?[OBJECT, ARRAY]) \l0x00fa: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x00fb: INVOKE  \l  (r0 I:mil.nga.geopackage.tiles.features.DefaultFeatureTiles)\l  (r1 I:double)\l  (r3 I:mil.nga.geopackage.BoundingBox)\l  (r4 I:mil.nga.geopackage.projection.ProjectionTransform)\l  (r5 I:android.graphics.Path)\l  (r6 I:mil.nga.wkb.geom.LineString)\l mil.nga.geopackage.tiles.features.DefaultFeatureTiles.addLineString(double, mil.nga.geopackage.BoundingBox, mil.nga.geopackage.projection.ProjectionTransform, android.graphics.Path, mil.nga.wkb.geom.LineString):void type: DIRECT \l}"];
Node_27 [shape=record,label="{27\:\ 0x00ff|0x00ff: INVOKE  \l  (r11 I:mil.nga.geopackage.tiles.features.DefaultFeatureTiles)\l  (r8 I:android.graphics.Canvas)\l  (r9 I:android.graphics.Path)\l mil.nga.geopackage.tiles.features.DefaultFeatureTiles.drawLinePath(android.graphics.Canvas, android.graphics.Path):void type: DIRECT \l}"];
Node_28 [shape=record,label="{28\:\ 0x0104|0x0104: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x0106: CHECK_CAST  (r0 I:mil.nga.wkb.geom.MultiPoint) = (mil.nga.wkb.geom.MultiPoint) (r0 I:?[OBJECT, ARRAY]) \l0x0108: INVOKE  (r0 I:java.util.List) = (r0 I:mil.nga.wkb.geom.MultiPoint) mil.nga.wkb.geom.MultiPoint.getPoints():java.util.List type: VIRTUAL \l0x010c: INVOKE  (r6 I:java.util.Iterator) = (r0 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_29 [shape=record,label="{29\:\ 0x0110|0x0110: INVOKE  (r0 I:boolean) = (r6 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_30 [shape=record,label="{30\:\ 0x0114|0x0114: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x0160 \l}"];
Node_31 [shape=record,label="{31\:\ 0x0116|0x0116: INVOKE  (r0 I:java.lang.Object) = (r6 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x011a: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x011b: CHECK_CAST  (r5 I:mil.nga.wkb.geom.Point) = (mil.nga.wkb.geom.Point) (r5 I:?[OBJECT, ARRAY]) \l0x011d: IGET  (r4 I:android.graphics.Paint) = \l  (r7 I:mil.nga.geopackage.tiles.features.DefaultFeatureTiles)\l mil.nga.geopackage.tiles.features.DefaultFeatureTiles.pointPaint android.graphics.Paint \l0x011f: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) \l0x0120: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY]) \l0x0121: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r15 I:?[OBJECT, ARRAY]) \l0x0122: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) \l0x0124: INVOKE  \l  (r0 I:mil.nga.geopackage.tiles.features.DefaultFeatureTiles)\l  (r1 I:mil.nga.geopackage.BoundingBox)\l  (r2 I:mil.nga.geopackage.projection.ProjectionTransform)\l  (r3 I:android.graphics.Canvas)\l  (r4 I:android.graphics.Paint)\l  (r5 I:mil.nga.wkb.geom.Point)\l mil.nga.geopackage.tiles.features.DefaultFeatureTiles.drawPoint(mil.nga.geopackage.BoundingBox, mil.nga.geopackage.projection.ProjectionTransform, android.graphics.Canvas, android.graphics.Paint, mil.nga.wkb.geom.Point):void type: DIRECT \l}"];
Node_32 [shape=record,label="{32\:\ 0x0128|0x0128: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x012a: CHECK_CAST  (r6 I:mil.nga.wkb.geom.Polygon) = (mil.nga.wkb.geom.Polygon) (r6 I:?[OBJECT, ARRAY]) \l0x012c: NEW_INSTANCE  (r9 I:android.graphics.Path) =  android.graphics.Path \l0x012e: INVOKE  (r9 I:android.graphics.Path) android.graphics.Path.\<init\>():void type: DIRECT \l0x0131: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) \l0x0132: MOVE  (r1 I:?[long, double]) = (r12 I:?[long, double]) \l0x0133: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY]) \l0x0134: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r15 I:?[OBJECT, ARRAY]) \l0x0135: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x0136: INVOKE  \l  (r0 I:mil.nga.geopackage.tiles.features.DefaultFeatureTiles)\l  (r1 I:double)\l  (r3 I:mil.nga.geopackage.BoundingBox)\l  (r4 I:mil.nga.geopackage.projection.ProjectionTransform)\l  (r5 I:android.graphics.Path)\l  (r6 I:mil.nga.wkb.geom.Polygon)\l mil.nga.geopackage.tiles.features.DefaultFeatureTiles.addPolygon(double, mil.nga.geopackage.BoundingBox, mil.nga.geopackage.projection.ProjectionTransform, android.graphics.Path, mil.nga.wkb.geom.Polygon):void type: DIRECT \l0x0139: INVOKE  \l  (r11 I:mil.nga.geopackage.tiles.features.DefaultFeatureTiles)\l  (r8 I:android.graphics.Canvas)\l  (r9 I:android.graphics.Path)\l mil.nga.geopackage.tiles.features.DefaultFeatureTiles.drawPolygonPath(android.graphics.Canvas, android.graphics.Path):void type: DIRECT \l}"];
Node_33 [shape=record,label="{33\:\ 0x013d|0x013d: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x013f: CHECK_CAST  (r6 I:mil.nga.wkb.geom.LineString) = (mil.nga.wkb.geom.LineString) (r6 I:?[OBJECT, ARRAY]) \l0x0141: NEW_INSTANCE  (r9 I:android.graphics.Path) =  android.graphics.Path \l0x0143: INVOKE  (r9 I:android.graphics.Path) android.graphics.Path.\<init\>():void type: DIRECT \l0x0146: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) \l0x0147: MOVE  (r1 I:?[long, double]) = (r12 I:?[long, double]) \l0x0148: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY]) \l0x0149: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r15 I:?[OBJECT, ARRAY]) \l0x014a: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x014b: INVOKE  \l  (r0 I:mil.nga.geopackage.tiles.features.DefaultFeatureTiles)\l  (r1 I:double)\l  (r3 I:mil.nga.geopackage.BoundingBox)\l  (r4 I:mil.nga.geopackage.projection.ProjectionTransform)\l  (r5 I:android.graphics.Path)\l  (r6 I:mil.nga.wkb.geom.LineString)\l mil.nga.geopackage.tiles.features.DefaultFeatureTiles.addLineString(double, mil.nga.geopackage.BoundingBox, mil.nga.geopackage.projection.ProjectionTransform, android.graphics.Path, mil.nga.wkb.geom.LineString):void type: DIRECT \l0x014e: INVOKE  \l  (r11 I:mil.nga.geopackage.tiles.features.DefaultFeatureTiles)\l  (r8 I:android.graphics.Canvas)\l  (r9 I:android.graphics.Path)\l mil.nga.geopackage.tiles.features.DefaultFeatureTiles.drawLinePath(android.graphics.Canvas, android.graphics.Path):void type: DIRECT \l}"];
Node_34 [shape=record,label="{34\:\ 0x0152|0x0152: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x0154: CHECK_CAST  (r5 I:mil.nga.wkb.geom.Point) = (mil.nga.wkb.geom.Point) (r5 I:?[OBJECT, ARRAY]) \l0x0156: IGET  (r4 I:android.graphics.Paint) = \l  (r7 I:mil.nga.geopackage.tiles.features.DefaultFeatureTiles)\l mil.nga.geopackage.tiles.features.DefaultFeatureTiles.pointPaint android.graphics.Paint \l0x0158: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) \l0x0159: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY]) \l0x015a: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r15 I:?[OBJECT, ARRAY]) \l0x015b: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) \l0x015d: INVOKE  \l  (r0 I:mil.nga.geopackage.tiles.features.DefaultFeatureTiles)\l  (r1 I:mil.nga.geopackage.BoundingBox)\l  (r2 I:mil.nga.geopackage.projection.ProjectionTransform)\l  (r3 I:android.graphics.Canvas)\l  (r4 I:android.graphics.Paint)\l  (r5 I:mil.nga.wkb.geom.Point)\l mil.nga.geopackage.tiles.features.DefaultFeatureTiles.drawPoint(mil.nga.geopackage.BoundingBox, mil.nga.geopackage.projection.ProjectionTransform, android.graphics.Canvas, android.graphics.Paint, mil.nga.wkb.geom.Point):void type: DIRECT \l}"];
Node_35 [shape=record,label="{35\:\ 0x0160|0x0160: RETURN   \l}"];
MethodNode[shape=record,label="{private void mil.nga.geopackage.tiles.features.DefaultFeatureTiles.drawShape((r11 'this' I:mil.nga.geopackage.tiles.features.DefaultFeatureTiles A[IMMUTABLE_TYPE, THIS]), (r12 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:mil.nga.geopackage.BoundingBox A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:mil.nga.geopackage.projection.ProjectionTransform A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16 I:android.graphics.Canvas A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17 I:mil.nga.wkb.geom.Geometry A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_1 -> Node_8;
Node_1 -> Node_13;
Node_1 -> Node_18;
Node_1 -> Node_23;
Node_1 -> Node_28;
Node_1 -> Node_32;
Node_1 -> Node_33;
Node_1 -> Node_34;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_35;
Node_7 -> Node_5;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_9;
Node_12 -> Node_35;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_14;
Node_17 -> Node_35;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_19;
Node_22 -> Node_35;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_24;
Node_27 -> Node_35;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_35;
Node_31 -> Node_29;
Node_32 -> Node_35;
Node_33 -> Node_35;
Node_34 -> Node_35;
}

