digraph "CFG formil.nga.geopackage.tiles.features.DefaultFeatureTiles.addPolygon(DLmil\/nga\/geopackage\/BoundingBox;Lmil\/nga\/geopackage\/projection\/ProjectionTransform;Landroid\/graphics\/Path;Lmil\/nga\/wkb\/geom\/Polygon;)V" {
subgraph cluster_Region_1473898245 {
label = "R(2:0|(1:(2:2|(1:(2:4|(3:7|(1:9)(0)|10))))))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.List java.util.List r0 = r23.getRings()\l}"];
subgraph cluster_Region_1502358353 {
label = "R(1:(2:2|(1:(2:4|(3:7|(1:9)(0)|10)))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1833148267 {
label = "IF [B:1:0x0008] THEN: R(2:2|(1:(2:4|(3:7|(1:9)(0)|10)))) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0008|if (r0.isEmpty() == false) goto L_0x000a\l}"];
subgraph cluster_Region_867898052 {
label = "R(2:2|(1:(2:4|(3:7|(1:9)(0)|10))))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000a|java.util.List java.util.List\<mil.nga.wkb.geom.Point\> r8 = ((mil.nga.wkb.geom.LineString) r0.get(0)).getPoints()\l}"];
subgraph cluster_Region_439648922 {
label = "R(1:(2:4|(3:7|(1:9)(0)|10)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1282273126 {
label = "IF [B:3:0x001a] THEN: R(2:4|(3:7|(1:9)(0)|10)) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x001a|if (r8.size() \>= 2) goto L_0x001c\l}"];
subgraph cluster_Region_665577757 {
label = "R(2:4|(3:7|(1:9)(0)|10))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x001c|addRing(r18, r20, r21, r22, r8)\lint r1 = 1\l}"];
subgraph cluster_LoopRegion_626900255 {
label = "LOOP:0: (3:7|(1:9)(0)|10)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x002e|if (r1 \< r0.size()) goto L_0x0030\l}"];
subgraph cluster_Region_1034192766 {
label = "R(3:7|(1:9)(0)|10)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0030|java.util.List java.util.List\<mil.nga.wkb.geom.Point\> r16 = ((mil.nga.wkb.geom.LineString) r0.get(r1)).getPoints()\l}"];
subgraph cluster_IfRegion_1867914674 {
label = "IF [B:8:0x003e] THEN: R(1:9) ELSE: R(0)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x003e|if (r16.size() \>= 2) goto L_0x0040\l}"];
subgraph cluster_Region_1985017937 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0040|addRing(r18, r20, r21, r22, r16)\l}"];
}
subgraph cluster_Region_938170979 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_10 [shape=record,label="{10\:\ 0x004d|LOOP_END\lLOOP:0: B:5:0x002a\-\>B:10:0x004d\l|r1++\l}"];
}
}
}
}
}
}
}
}
}
Node_5 [shape=record,color=red,label="{5\:\ 0x002a|LOOP_START\lPHI: r1 \l  PHI: (r1v6 int) = (r1v5 int), (r1v7 int) binds: [B:4:0x001c, B:10:0x004d] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:5:0x002a\-\>B:10:0x004d\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0050|SYNTHETIC\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x004d|SYNTHETIC\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x004d|SYNTHETIC\l}"];
Node_14 [shape=record,color=red,label="{14\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_15 [shape=record,color=red,label="{15\:\ ?|SYNTHETIC\l}"];
Node_16 [shape=record,color=red,label="{16\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void mil.nga.geopackage.tiles.features.DefaultFeatureTiles.addPolygon((r17v0 'this' mil.nga.geopackage.tiles.features.DefaultFeatureTiles A[IMMUTABLE_TYPE, THIS]), (r18v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20v0 mil.nga.geopackage.BoundingBox A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21v0 mil.nga.geopackage.projection.ProjectionTransform A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22v0 android.graphics.Path A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23v0 mil.nga.wkb.geom.Polygon A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_14[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_15[style=dashed];
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_6 -> Node_11[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_13[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_5;
Node_5 -> Node_6;
Node_11 -> Node_16;
Node_12 -> Node_10;
Node_13 -> Node_10;
}

