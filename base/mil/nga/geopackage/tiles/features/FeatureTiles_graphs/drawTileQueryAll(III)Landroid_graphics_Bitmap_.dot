digraph "CFG formil.nga.geopackage.tiles.features.FeatureTiles.drawTileQueryAll(III)Landroid\/graphics\/Bitmap;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|mil.nga.geopackage.BoundingBox r7 = mil.nga.geopackage.tiles.TileBoundingBoxUtils.getWebMercatorBoundingBox((long) r7, (long) r8, r9)\lmil.nga.geopackage.features.user.FeatureCursor r8 = (mil.nga.geopackage.features.user.FeatureCursor) r6.featureDao.queryForAll()\l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|SYNTHETIC\lSplitter:B:1:0x000e\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ all \-\> 0x004c \}\lSplitter:B:1:0x000e\l|r1 = null     \/\/ Catch:\{ all \-\> 0x004c \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|Catch:\{ all \-\> 0x004c \}\l|if (r6.maxFeaturesPerTile == null) goto L_0x001c     \/\/ Catch:\{ all \-\> 0x004c \}\l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|Catch:\{ all \-\> 0x004c \}\l|java.lang.Integer r0 = java.lang.Integer.valueOf(r8.getCount())     \/\/ Catch:\{ all \-\> 0x004c \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|Catch:\{ all \-\> 0x004c \}\l|r0 = null     \/\/ Catch:\{ all \-\> 0x004c \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|Catch:\{ all \-\> 0x004c \}\lPHI: r0 \l  PHI: (r0v2 java.lang.Integer) = (r0v4 java.lang.Integer), (r0v6 java.lang.Integer) binds: [B:5:0x001c, B:4:0x0013] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|Catch:\{ all \-\> 0x004c \}\l|if (r6.maxFeaturesPerTile == null) goto L_0x0044     \/\/ Catch:\{ all \-\> 0x004c \}\l}"];
Node_8 [shape=record,label="{8\:\ 0x0021|Catch:\{ all \-\> 0x004c \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x002b|Catch:\{ all \-\> 0x004c \}\l|if (r0.intValue() \> r6.maxFeaturesPerTile.intValue()) goto L_0x002e     \/\/ Catch:\{ all \-\> 0x004c \}\l}"];
Node_10 [shape=record,label="{10\:\ 0x002d|Catch:\{ all \-\> 0x004c \}\l}"];
Node_11 [shape=record,label="{11\:\ 0x002e|Catch:\{ all \-\> 0x004c \}\l}"];
Node_12 [shape=record,label="{12\:\ 0x0030|Catch:\{ all \-\> 0x004c \}\l|if (r6.maxFeaturesTileDraw == null) goto L_0x0048     \/\/ Catch:\{ all \-\> 0x004c \}\l}"];
Node_13 [shape=record,label="{13\:\ 0x0032|Catch:\{ all \-\> 0x004c \}\l|mil.nga.geopackage.tiles.features.CustomFeaturesTile r7 = r6.maxFeaturesTileDraw     \/\/ Catch:\{ all \-\> 0x004c \}\lr0 = r7     \/\/ Catch:\{ all \-\> 0x004c \}\landroid.graphics.Bitmap r1 = r0.drawUnindexedTile(r6.tileWidth, r6.tileHeight, (long) r0.intValue(), r8)     \/\/ Catch:\{ all \-\> 0x004c \}\l}"];
Node_14 [shape=record,label="{14\:\ 0x0044|Catch:\{ all \-\> 0x004c \}\l|android.graphics.Bitmap r1 = drawTile(r9, r7, r8)     \/\/ Catch:\{ all \-\> 0x004c \}\l}"];
Node_15 [shape=record,label="{15\:\ 0x0048|DONT_GENERATE\lPHI: r1 \l  PHI: (r1v1 android.graphics.Bitmap) = (r1v2 android.graphics.Bitmap), (r1v0 android.graphics.Bitmap), (r1v4 android.graphics.Bitmap) binds: [B:14:0x0044, B:12:0x0030, B:13:0x0032] A[DONT_GENERATE, DONT_INLINE]\l|r8.close()\l}"];
Node_16 [shape=record,label="{16\:\ 0x004b|RETURN\l|return r1\l}"];
Node_17 [shape=record,label="{17\:\ 0x004c|ExcHandler:  FINALLY\lSplitter:B:1:0x000e\l|java.lang.Throwable r7 = move\-exception\l}"];
Node_18 [shape=record,label="{18\:\ 0x004d|FINALLY_INSNS\l|r8.close()\l}"];
Node_19 [shape=record,label="{19\:\ 0x0050|throw r7\l}"];
MethodNode[shape=record,label="{public android.graphics.Bitmap mil.nga.geopackage.tiles.features.FeatureTiles.drawTileQueryAll((r6v0 'this' mil.nga.geopackage.tiles.features.FeatureTiles A[IMMUTABLE_TYPE, THIS]), (r7v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_17;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_14;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_14;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_15;
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_18 -> Node_19;
}

