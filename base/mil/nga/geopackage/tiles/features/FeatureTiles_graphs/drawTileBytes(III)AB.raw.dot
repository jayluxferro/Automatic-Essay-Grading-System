digraph "CFG formil.nga.geopackage.tiles.features.FeatureTiles.drawTileBytes(III)[B" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:android.graphics.Bitmap) = \l  (r5 I:mil.nga.geopackage.tiles.features.FeatureTiles)\l  (r6 I:int)\l  (r7 I:int)\l  (r8 I:int)\l mil.nga.geopackage.tiles.features.FeatureTiles.drawTile(int, int, int):android.graphics.Bitmap type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0045 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|SYNTHETIC\lSplitter:B:2:0x0006\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x0006\l|0x0006: IGET  (r1 I:android.graphics.Bitmap$CompressFormat) = (r5 I:mil.nga.geopackage.tiles.features.FeatureTiles) mil.nga.geopackage.tiles.features.FeatureTiles.compressFormat android.graphics.Bitmap$CompressFormat A[Catch:\{ IOException \-\> 0x0012 \}, TRY_ENTER]\l0x0008: INVOKE  (r1 I:byte[]) = \l  (r0 I:android.graphics.Bitmap)\l  (r1 I:android.graphics.Bitmap$CompressFormat)\l mil.nga.geopackage.io.BitmapConverter.toBytes(android.graphics.Bitmap, android.graphics.Bitmap$CompressFormat):byte[] type: STATIC A[Catch:\{ IOException \-\> 0x0012 \}]\l0x000b: NOP   A[TRY_LEAVE]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: INVOKE  (r0 I:android.graphics.Bitmap) android.graphics.Bitmap.recycle():void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|ExcHandler: all null\lSplitter:B:9:0x0015\l|0x0010: MOVE_EXCEPTION  (r6 I:?[OBJECT]) =  \l}"];
Node_7 [shape=record,label="{7\:\ 0x0012|ExcHandler: IOException null\lSplitter:B:2:0x0006\l|0x0012: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_8 [shape=record,label="{8\:\ 0x0013|0x0013: CONST_CLASS  (r2 I:java.lang.Class\<mil.nga.geopackage.tiles.features.FeatureTiles\>) =  mil.nga.geopackage.tiles.features.FeatureTiles.class \l}"];
Node_9 [shape=record,label="{9\:\ 0x0015|SYNTHETIC\lSplitter:B:9:0x0015\l}"];
Node_10 [shape=record,label="{10\:\ ?|Splitter:B:9:0x0015\l|0x0015: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.Class) java.lang.Class.getSimpleName():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x0010 \}, TRY_ENTER]\l0x0019: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ all \-\> 0x0010 \}]\l0x001b: INVOKE  (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x0010 \}]\l0x001e: CONST_STR  (r4 I:java.lang.String) =  \"Failed to create tile. x: \" A[Catch:\{ all \-\> 0x0010 \}]\l0x0020: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0010 \}]\l0x0023: INVOKE  (r3 I:java.lang.StringBuilder), (r6 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0010 \}]\l0x0026: CONST_STR  (r6 I:java.lang.String) =  \", y: \" A[Catch:\{ all \-\> 0x0010 \}]\l0x0028: INVOKE  (r3 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0010 \}]\l0x002b: INVOKE  (r3 I:java.lang.StringBuilder), (r7 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0010 \}]\l0x002e: CONST_STR  (r6 I:java.lang.String) =  \", zoom: \" A[Catch:\{ all \-\> 0x0010 \}]\l0x0030: INVOKE  (r3 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0010 \}]\l0x0033: INVOKE  (r3 I:java.lang.StringBuilder), (r8 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0010 \}]\l0x0036: INVOKE  (r6 I:java.lang.String) = (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x0010 \}]\l0x003a: INVOKE  \l  (r2 I:java.lang.String)\l  (r6 I:java.lang.String)\l  (r1 I:java.lang.Throwable)\l android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC A[Catch:\{ all \-\> 0x0010 \}, TRY_LEAVE]\l}"];
Node_11 [shape=record,label="{11\:\ 0x003d|0x003d: INVOKE  (r0 I:android.graphics.Bitmap) android.graphics.Bitmap.recycle():void type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0041|0x0041: INVOKE  (r0 I:android.graphics.Bitmap) android.graphics.Bitmap.recycle():void type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x0044|0x0044: THROW  (r6 I:java.lang.Throwable) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0045|0x0045: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_15 [shape=record,label="{15\:\ 0x0046|0x0046: RETURN  (r1 I:byte[]) \l}"];
MethodNode[shape=record,label="{public byte[] mil.nga.geopackage.tiles.features.FeatureTiles.drawTileBytes((r5 'this' I:mil.nga.geopackage.tiles.features.FeatureTiles A[IMMUTABLE_TYPE, THIS]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_14;
Node_2 -> Node_3;
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_4 -> Node_15;
Node_5 -> Node_12;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_5;
Node_10 -> Node_11;
Node_10 -> Node_5;
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_14 -> Node_15;
}

