digraph "CFG formil.nga.geopackage.tiles.user.TileTable.\<init\>(Ljava\/lang\/String;Ljava\/util\/List;)V" {
subgraph cluster_Region_601527286 {
label = "R(3:0|(2:3|(1:5)(1:(1:8)(1:(1:11)(1:(1:14)(0)))))|15)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|super(r9, r10)\lmil.nga.geopackage.user.UserUniqueConstraint mil.nga.geopackage.user.UserUniqueConstraint r9 = new mil.nga.geopackage.user.UserUniqueConstraint()\ljava.util.Iterator r10 = r10.iterator()\ljava.lang.Integer r0 = null\ljava.lang.Integer r1 = null\ljava.lang.Integer r2 = null\ljava.lang.Integer r3 = null\l}"];
subgraph cluster_LoopRegion_1756085059 {
label = "LOOP:0: (2:3|(1:5)(1:(1:8)(1:(1:11)(1:(1:14)(0)))))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0014|if (r10.hasNext() != false) goto L_0x0016\l}"];
subgraph cluster_Region_1647371861 {
label = "R(2:3|(1:5)(1:(1:8)(1:(1:11)(1:(1:14)(0)))))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0016|mil.nga.geopackage.tiles.user.TileColumn r4 = r10.next()\ljava.lang.String java.lang.String r5 = r4.getName()\lint int r6 = r4.getIndex()\l}"];
subgraph cluster_IfRegion_904012848 {
label = "IF [B:4:0x002a] THEN: R(1:5) ELSE: R(1:(1:8)(1:(1:11)(1:(1:14)(0))))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x002a|if (r5.equals(\"zoom_level\") == true) goto L_0x002c\l}"];
subgraph cluster_Region_259370365 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x002c|duplicateCheck(r6, r0, \"zoom_level\")\ltypeCheck(mil.nga.geopackage.p021db.GeoPackageDataType.INTEGER, r4)\ljava.lang.Integer r0 = java.lang.Integer.valueOf(r6)\lr9.add(r4)\l}"];
}
subgraph cluster_Region_180496168 {
label = "R(1:(1:8)(1:(1:11)(1:(1:14)(0)))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1949762423 {
label = "IF [B:7:0x0044] THEN: R(1:8) ELSE: R(1:(1:11)(1:(1:14)(0))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0044|if (r5.equals(\"tile_column\") == true) goto L_0x0046\l}"];
subgraph cluster_Region_668863336 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0046|duplicateCheck(r6, r1, \"tile_column\")\ltypeCheck(mil.nga.geopackage.p021db.GeoPackageDataType.INTEGER, r4)\ljava.lang.Integer r1 = java.lang.Integer.valueOf(r6)\lr9.add(r4)\l}"];
}
subgraph cluster_Region_831175160 {
label = "R(1:(1:11)(1:(1:14)(0))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1370849096 {
label = "IF [B:10:0x005e] THEN: R(1:11) ELSE: R(1:(1:14)(0)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x005e|if (r5.equals(\"tile_row\") == true) goto L_0x0060\l}"];
subgraph cluster_Region_935249230 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0060|duplicateCheck(r6, r2, \"tile_row\")\ltypeCheck(mil.nga.geopackage.p021db.GeoPackageDataType.INTEGER, r4)\ljava.lang.Integer r2 = java.lang.Integer.valueOf(r6)\lr9.add(r4)\l}"];
}
subgraph cluster_Region_805298765 {
label = "R(1:(1:14)(0)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_877803877 {
label = "IF [B:13:0x0078] THEN: R(1:14) ELSE: R(0) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0078|if (r5.equals(\"tile_data\") == true) goto L_0x007a\l}"];
subgraph cluster_Region_1074574700 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x007a|duplicateCheck(r6, r3, \"tile_data\")\ltypeCheck(mil.nga.geopackage.p021db.GeoPackageDataType.BLOB, r4)\ljava.lang.Integer r3 = java.lang.Integer.valueOf(r6)\l}"];
}
subgraph cluster_Region_440087890 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
}
}
}
}
}
}
Node_15 [shape=record,label="{15\:\ 0x0089|missingCheck(r0, \"zoom_level\")\lr8.zoomLevelIndex = r0.intValue()\lmissingCheck(r1, \"tile_column\")\lr8.tileColumnIndex = r1.intValue()\lmissingCheck(r2, \"tile_row\")\lr8.tileRowIndex = r2.intValue()\lmissingCheck(r3, \"tile_data\")\lr8.tileDataIndex = r3.intValue()\laddUniqueConstraint(r9)\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0010|LOOP_START\lPHI: r0 r1 r2 r3 \l  PHI: (r0v1 java.lang.Integer) = (r0v0 java.lang.Integer), (r0v2 java.lang.Integer) binds: [B:0:0x0000, B:17:0x0010] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v1 java.lang.Integer) = (r1v0 java.lang.Integer), (r1v2 java.lang.Integer) binds: [B:0:0x0000, B:17:0x0010] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 java.lang.Integer) = (r2v0 java.lang.Integer), (r2v2 java.lang.Integer) binds: [B:0:0x0000, B:17:0x0010] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v1 java.lang.Integer) = (r3v0 java.lang.Integer), (r3v2 java.lang.Integer) binds: [B:0:0x0000, B:17:0x0010] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0010\-\>B:17:0x0010\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x003e}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0058}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0072}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x00b8}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0010|LOOP_END\lSYNTHETIC\lPHI: r0 r1 r2 r3 \l  PHI: (r0v2 java.lang.Integer) = (r0v1 java.lang.Integer), (r0v1 java.lang.Integer), (r0v1 java.lang.Integer), (r0v1 java.lang.Integer), (r0v4 java.lang.Integer) binds: [B:22:0x0010, B:23:0x0010, B:21:0x0010, B:20:0x0010, B:19:0x0010] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v2 java.lang.Integer) = (r1v1 java.lang.Integer), (r1v1 java.lang.Integer), (r1v1 java.lang.Integer), (r1v4 java.lang.Integer), (r1v1 java.lang.Integer) binds: [B:22:0x0010, B:23:0x0010, B:21:0x0010, B:20:0x0010, B:19:0x0010] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v2 java.lang.Integer) = (r2v1 java.lang.Integer), (r2v1 java.lang.Integer), (r2v4 java.lang.Integer), (r2v1 java.lang.Integer), (r2v1 java.lang.Integer) binds: [B:22:0x0010, B:23:0x0010, B:21:0x0010, B:20:0x0010, B:19:0x0010] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v2 java.lang.Integer) = (r3v1 java.lang.Integer), (r3v4 java.lang.Integer), (r3v1 java.lang.Integer), (r3v1 java.lang.Integer), (r3v1 java.lang.Integer) binds: [B:22:0x0010, B:23:0x0010, B:21:0x0010, B:20:0x0010, B:19:0x0010] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0010\-\>B:17:0x0010\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0089|SYNTHETIC\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0010|SYNTHETIC\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0010|SYNTHETIC\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0010|SYNTHETIC\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0010|SYNTHETIC\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0010|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void mil.nga.geopackage.tiles.user.TileTable.\<init\>((r8v0 'this' mil.nga.geopackage.tiles.user.TileTable A[IMMUTABLE_TYPE, THIS]), (r9v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 java.util.List\<mil.nga.geopackage.tiles.user.TileColumn\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/String;, Ljava\/util\/List\<, Lmil\/nga\/geopackage\/tiles\/user\/TileColumn;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_18[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_5 -> Node_19;
Node_7 -> Node_8;
Node_7 -> Node_9[style=dashed];
Node_8 -> Node_20;
Node_10 -> Node_11;
Node_10 -> Node_12[style=dashed];
Node_11 -> Node_21;
Node_13 -> Node_14;
Node_13 -> Node_22[style=dashed];
Node_14 -> Node_23;
Node_15 -> Node_16;
Node_1 -> Node_2;
Node_6 -> Node_7;
Node_9 -> Node_10;
Node_12 -> Node_13;
Node_17 -> Node_1;
Node_18 -> Node_15;
Node_19 -> Node_17;
Node_20 -> Node_17;
Node_21 -> Node_17;
Node_22 -> Node_17;
Node_23 -> Node_17;
}

