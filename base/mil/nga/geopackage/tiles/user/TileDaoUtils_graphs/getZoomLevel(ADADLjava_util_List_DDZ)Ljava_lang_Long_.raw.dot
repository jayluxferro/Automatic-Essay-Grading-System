digraph "CFG formil.nga.geopackage.tiles.user.TileDaoUtils.getZoomLevel([D[DLjava\/util\/List;DDZ)Ljava\/lang\/Long;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = (r7 I:double[]), (r10 I:double) java.util.Arrays.binarySearch(double[], double):int type: STATIC \l0x0004: CONST  (r1 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r0 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:3:0x000b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l0x0009: ARITH  (r0 I:int) = (r0 I:int) * (\-1 int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: INVOKE  (r2 I:int) = (r8 I:double[]), (r12 I:double) java.util.Arrays.binarySearch(double[], double):int type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: IF  (r2 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:6:0x0015 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l0x0013: ARITH  (r2 I:int) = (r2 I:int) * (\-1 int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0023 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|0x0017: IF  (r14 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0044 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0019|0x0019: INVOKE  (r3 I:double) = (r7 I:double[]) mil.nga.geopackage.tiles.user.TileDaoUtils.getMinLength(double[]):double type: STATIC \l0x001d: CMP_G  (r7 I:int) = (r10 I:double), (r3 I:double) \l}"];
Node_9 [shape=record,label="{9\:\ 0x001f|0x001f: IF  (r7 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:21:0x0044 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0021|0x0021: CONST  (r7 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0023|0x0023: ARRAY_LENGTH  (r3 I:int) = (r7 I:?[]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0024|0x0024: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0034 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0026|0x0026: IF  (r14 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0031 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0028|0x0028: INVOKE  (r3 I:double) = (r7 I:double[]) mil.nga.geopackage.tiles.user.TileDaoUtils.getMaxLength(double[]):double type: STATIC \l0x002c: CMP_L  (r7 I:int) = (r10 I:double), (r3 I:double) \l}"];
Node_15 [shape=record,label="{15\:\ 0x002e|0x002e: IF  (r7 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:17:0x0031 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0031|0x0031: ARITH  (r7 I:int) = (r0 I:int) + (\-1 int) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0034|0x0034: ARITH  (r3 I:int) = (r0 I:int) + (\-1 int) \l0x0036: AGET  (r3 I:?[long, double]) = (r7 I:?[long, double][]), (r3 I:?[int, short, byte, char]) \l0x0038: ARITH  (r3 I:double) = (r10 I:double) \- (r3 I:double) \l0x003a: AGET  (r5 I:?[long, double]) = (r7 I:?[long, double][]), (r0 I:?[int, short, byte, char]) \l0x003c: ARITH  (r5 I:double) = (r5 I:double) \- (r10 I:double) \l0x003d: CMP_G  (r7 I:int) = (r3 I:double), (r5 I:double) \l}"];
Node_19 [shape=record,label="{19\:\ 0x003f|0x003f: IF  (r7 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:21:0x0044 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0041|0x0041: ARITH  (r7 I:int) = (r0 I:int) + (\-1 int) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0044|0x0044: MOVE  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_22 [shape=record,label="{22\:\ 0x0045|0x0045: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0052 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0047|0x0047: IF  (r14 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0073 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0049|0x0049: INVOKE  (r10 I:double) = (r8 I:double[]) mil.nga.geopackage.tiles.user.TileDaoUtils.getMinLength(double[]):double type: STATIC \l0x004d: CMP_G  (r8 I:int) = (r12 I:double), (r10 I:double) \l}"];
Node_25 [shape=record,label="{25\:\ 0x004f|0x004f: IF  (r8 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:37:0x0073 \l}"];
Node_27 [shape=record,label="{27\:\ 0x0052|0x0052: ARRAY_LENGTH  (r10 I:int) = (r8 I:?[]) \l}"];
Node_28 [shape=record,label="{28\:\ 0x0053|0x0053: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0063 \l}"];
Node_29 [shape=record,label="{29\:\ 0x0055|0x0055: IF  (r14 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0060 \l}"];
Node_30 [shape=record,label="{30\:\ 0x0057|0x0057: INVOKE  (r10 I:double) = (r8 I:double[]) mil.nga.geopackage.tiles.user.TileDaoUtils.getMaxLength(double[]):double type: STATIC \l0x005b: CMP_L  (r8 I:int) = (r12 I:double), (r10 I:double) \l}"];
Node_31 [shape=record,label="{31\:\ 0x005d|0x005d: IF  (r8 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:33:0x0060 \l}"];
Node_33 [shape=record,label="{33\:\ 0x0060|0x0060: ARITH  (r1 I:int) = (r2 I:int) + (\-1 int) \l}"];
Node_34 [shape=record,label="{34\:\ 0x0063|0x0063: ARITH  (r10 I:int) = (r2 I:int) + (\-1 int) \l0x0065: AGET  (r10 I:?[long, double]) = (r8 I:?[long, double][]), (r10 I:?[int, short, byte, char]) \l0x0067: ARITH  (r10 I:double) = (r12 I:double) \- (r10 I:double) \l0x0069: AGET  (r0 I:?[long, double]) = (r8 I:?[long, double][]), (r2 I:?[int, short, byte, char]) \l0x006b: ARITH  (r0 I:double) = (r0 I:double) \- (r12 I:double) \l0x006c: CMP_G  (r8 I:int) = (r10 I:double), (r0 I:double) \l}"];
Node_35 [shape=record,label="{35\:\ 0x006e|0x006e: IF  (r8 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:37:0x0073 \l}"];
Node_36 [shape=record,label="{36\:\ 0x0070|0x0070: ARITH  (r1 I:int) = (r2 I:int) + (\-1 int) \l}"];
Node_37 [shape=record,label="{37\:\ 0x0073|0x0073: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_38 [shape=record,label="{38\:\ 0x0074|0x0074: IF  (r7 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:42:0x007b \l}"];
Node_39 [shape=record,label="{39\:\ 0x0076|0x0076: IF  (r1 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:41:0x0079 \l}"];
Node_41 [shape=record,label="{41\:\ 0x0079|0x0079: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_42 [shape=record,label="{42\:\ 0x007b|0x007b: IF  (r7 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:44:0x007f \l}"];
Node_43 [shape=record,label="{43\:\ 0x007d|0x007d: MOVE  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_44 [shape=record,label="{44\:\ 0x007f|0x007f: IF  (r1 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:46:0x0082 \l}"];
Node_46 [shape=record,label="{46\:\ 0x0082|0x0082: INVOKE  (r7 I:int) = (r7 I:int), (r1 I:int) java.lang.Math.min(int, int):int type: STATIC \l}"];
Node_47 [shape=record,label="{47\:\ 0x0086|0x0086: INVOKE  (r8 I:int) = (r9 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x008a: ARITH  (r8 I:int) = (r8 I:int) \- (r7 I:int) \l0x008b: ARITH  (r8 I:int) = (r8 I:int) + (\-1 int) \l0x008d: INVOKE  (r7 I:java.lang.Object) = (r9 I:java.util.List), (r8 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0091: CHECK_CAST  (r7 I:mil.nga.geopackage.tiles.matrix.TileMatrix) = (mil.nga.geopackage.tiles.matrix.TileMatrix) (r7 I:?[OBJECT, ARRAY]) \l0x0093: INVOKE  (r7 I:long) = (r7 I:mil.nga.geopackage.tiles.matrix.TileMatrix) mil.nga.geopackage.tiles.matrix.TileMatrix.getZoomLevel():long type: VIRTUAL \l0x0097: INVOKE  (r7 I:java.lang.Long) = (r7 I:long) java.lang.Long.valueOf(long):java.lang.Long type: STATIC \l}"];
Node_48 [shape=record,label="{48\:\ 0x009b|0x009b: RETURN  (r7 I:java.lang.Long) \l}"];
MethodNode[shape=record,label="{private static java.lang.Long mil.nga.geopackage.tiles.user.TileDaoUtils.getZoomLevel((r7 I:double[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:double[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:java.util.List\<mil.nga.geopackage.tiles.matrix.TileMatrix\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[([D[D, Ljava\/util\/List\<, Lmil\/nga\/geopackage\/tiles\/matrix\/TileMatrix;, \>;DDZ), Ljava\/lang\/Long;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_11;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_21;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_21;
Node_10 -> Node_22;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_18;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_15;
Node_15 -> Node_17;
Node_15 -> Node_10[style=dashed];
Node_17 -> Node_22;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_27;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_37;
Node_24 -> Node_25;
Node_25 -> Node_37;
Node_25 -> Node_38[style=dashed];
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_34;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_33;
Node_30 -> Node_31;
Node_31 -> Node_33;
Node_31 -> Node_38[style=dashed];
Node_33 -> Node_38;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_37;
Node_36 -> Node_38;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_42;
Node_39 -> Node_41;
Node_39 -> Node_42[style=dashed];
Node_41 -> Node_48;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_44;
Node_43 -> Node_47;
Node_44 -> Node_46;
Node_44 -> Node_47[style=dashed];
Node_46 -> Node_47;
Node_47 -> Node_48;
}

