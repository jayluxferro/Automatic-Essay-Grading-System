digraph "CFG formil.nga.geopackage.core.contents.ContentsDao.deleteCascade(Lmil\/nga\/geopackage\/core\/contents\/Contents;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0044 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: INVOKE  (r0 I:mil.nga.geopackage.features.columns.GeometryColumnsDao) = (r3 I:mil.nga.geopackage.core.contents.ContentsDao) mil.nga.geopackage.core.contents.ContentsDao.getGeometryColumnsDao():mil.nga.geopackage.features.columns.GeometryColumnsDao type: DIRECT \l0x0006: INVOKE  (r1 I:boolean) = \l  (r0 I:mil.nga.geopackage.features.columns.GeometryColumnsDao)\l mil.nga.geopackage.features.columns.GeometryColumnsDao.isTableExists():boolean type: VIRTUAL \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0015 \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: INVOKE  (r1 I:mil.nga.geopackage.features.columns.GeometryColumns) = (r4 I:mil.nga.geopackage.core.contents.Contents) mil.nga.geopackage.core.contents.Contents.getGeometryColumns():mil.nga.geopackage.features.columns.GeometryColumns type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0015 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: INVOKE  \l  (r0 I:mil.nga.geopackage.features.columns.GeometryColumnsDao)\l  (r1 I:mil.nga.geopackage.features.columns.GeometryColumns)\l mil.nga.geopackage.features.columns.GeometryColumnsDao.delete(mil.nga.geopackage.features.columns.GeometryColumns):int type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: INVOKE  (r0 I:mil.nga.geopackage.tiles.matrix.TileMatrixDao) = (r3 I:mil.nga.geopackage.core.contents.ContentsDao) mil.nga.geopackage.core.contents.ContentsDao.getTileMatrixDao():mil.nga.geopackage.tiles.matrix.TileMatrixDao type: DIRECT \l0x0019: INVOKE  (r1 I:boolean) = (r0 I:mil.nga.geopackage.tiles.matrix.TileMatrixDao) mil.nga.geopackage.tiles.matrix.TileMatrixDao.isTableExists():boolean type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|0x001d: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x002c \l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|0x001f: INVOKE  (r1 I:com.j256.ormlite.dao.ForeignCollection) = (r4 I:mil.nga.geopackage.core.contents.Contents) mil.nga.geopackage.core.contents.Contents.getTileMatrix():com.j256.ormlite.dao.ForeignCollection type: VIRTUAL \l0x0023: INVOKE  (r2 I:boolean) = (r1 I:com.j256.ormlite.dao.ForeignCollection) com.j256.ormlite.dao.ForeignCollection.isEmpty():boolean type: INTERFACE \l}"];
Node_9 [shape=record,label="{9\:\ 0x0027|0x0027: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x002c \l}"];
Node_10 [shape=record,label="{10\:\ 0x0029|0x0029: INVOKE  \l  (r0 I:mil.nga.geopackage.tiles.matrix.TileMatrixDao)\l  (r1 I:java.util.Collection)\l mil.nga.geopackage.tiles.matrix.TileMatrixDao.delete(java.util.Collection):int type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x002c|0x002c: INVOKE  (r0 I:mil.nga.geopackage.tiles.matrixset.TileMatrixSetDao) = (r3 I:mil.nga.geopackage.core.contents.ContentsDao) mil.nga.geopackage.core.contents.ContentsDao.getTileMatrixSetDao():mil.nga.geopackage.tiles.matrixset.TileMatrixSetDao type: DIRECT \l0x0030: INVOKE  (r1 I:boolean) = (r0 I:mil.nga.geopackage.tiles.matrixset.TileMatrixSetDao) mil.nga.geopackage.tiles.matrixset.TileMatrixSetDao.isTableExists():boolean type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0034|0x0034: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x003f \l}"];
Node_13 [shape=record,label="{13\:\ 0x0036|0x0036: INVOKE  (r1 I:mil.nga.geopackage.tiles.matrixset.TileMatrixSet) = (r4 I:mil.nga.geopackage.core.contents.Contents) mil.nga.geopackage.core.contents.Contents.getTileMatrixSet():mil.nga.geopackage.tiles.matrixset.TileMatrixSet type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x003a|0x003a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x003f \l}"];
Node_15 [shape=record,label="{15\:\ 0x003c|0x003c: INVOKE  \l  (r0 I:mil.nga.geopackage.tiles.matrixset.TileMatrixSetDao)\l  (r1 I:java.lang.Object)\l mil.nga.geopackage.tiles.matrixset.TileMatrixSetDao.delete(java.lang.Object):int type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x003f|0x003f: INVOKE  (r4 I:int) = \l  (r3 I:mil.nga.geopackage.core.contents.ContentsDao)\l  (r4 I:java.lang.Object)\l mil.nga.geopackage.core.contents.ContentsDao.delete(java.lang.Object):int type: VIRTUAL \l}"];
Node_17 [shape=record,label="{17\:\ 0x0044|0x0044: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_18 [shape=record,label="{18\:\ 0x0045|0x0045: RETURN  (r4 I:int) \l}"];
MethodNode[shape=record,label="{public int mil.nga.geopackage.core.contents.ContentsDao.deleteCascade((r3 'this' I:mil.nga.geopackage.core.contents.ContentsDao A[IMMUTABLE_TYPE, THIS]), (r4 I:mil.nga.geopackage.core.contents.Contents A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_17;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_6;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_16;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_18;
Node_17 -> Node_18;
}

