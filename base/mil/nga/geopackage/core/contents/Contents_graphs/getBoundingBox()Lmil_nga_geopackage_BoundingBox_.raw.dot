digraph "CFG formil.nga.geopackage.core.contents.Contents.getBoundingBox()Lmil\/nga\/geopackage\/BoundingBox;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.lang.Double) = (r10 I:mil.nga.geopackage.core.contents.Contents) mil.nga.geopackage.core.contents.Contents.minX java.lang.Double \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0037 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:java.lang.Double) = (r10 I:mil.nga.geopackage.core.contents.Contents) mil.nga.geopackage.core.contents.Contents.maxX java.lang.Double \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0037 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: IGET  (r0 I:java.lang.Double) = (r10 I:mil.nga.geopackage.core.contents.Contents) mil.nga.geopackage.core.contents.Contents.minY java.lang.Double \l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|0x000a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0037 \l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|0x000c: IGET  (r0 I:java.lang.Double) = (r10 I:mil.nga.geopackage.core.contents.Contents) mil.nga.geopackage.core.contents.Contents.maxY java.lang.Double \l}"];
Node_7 [shape=record,label="{7\:\ 0x000e|0x000e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0037 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0010|0x0010: NEW_INSTANCE  (r0 I:mil.nga.geopackage.BoundingBox) =  mil.nga.geopackage.BoundingBox \l0x0012: INVOKE  (r1 I:java.lang.Double) = (r10 I:mil.nga.geopackage.core.contents.Contents) mil.nga.geopackage.core.contents.Contents.getMinX():java.lang.Double type: VIRTUAL \l0x0016: INVOKE  (r2 I:double) = (r1 I:java.lang.Double) java.lang.Double.doubleValue():double type: VIRTUAL \l0x001a: INVOKE  (r1 I:java.lang.Double) = (r10 I:mil.nga.geopackage.core.contents.Contents) mil.nga.geopackage.core.contents.Contents.getMinY():java.lang.Double type: VIRTUAL \l0x001e: INVOKE  (r4 I:double) = (r1 I:java.lang.Double) java.lang.Double.doubleValue():double type: VIRTUAL \l0x0022: INVOKE  (r1 I:java.lang.Double) = (r10 I:mil.nga.geopackage.core.contents.Contents) mil.nga.geopackage.core.contents.Contents.getMaxX():java.lang.Double type: VIRTUAL \l0x0026: INVOKE  (r6 I:double) = (r1 I:java.lang.Double) java.lang.Double.doubleValue():double type: VIRTUAL \l0x002a: INVOKE  (r1 I:java.lang.Double) = (r10 I:mil.nga.geopackage.core.contents.Contents) mil.nga.geopackage.core.contents.Contents.getMaxY():java.lang.Double type: VIRTUAL \l0x002e: INVOKE  (r8 I:double) = (r1 I:java.lang.Double) java.lang.Double.doubleValue():double type: VIRTUAL \l0x0032: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0033: INVOKE  \l  (r1 I:mil.nga.geopackage.BoundingBox)\l  (r2 I:double)\l  (r4 I:double)\l  (r6 I:double)\l  (r8 I:double)\l mil.nga.geopackage.BoundingBox.\<init\>(double, double, double, double):void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x0037|0x0037: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x0038|0x0038: RETURN  (r0 I:mil.nga.geopackage.BoundingBox) \l}"];
MethodNode[shape=record,label="{public mil.nga.geopackage.BoundingBox mil.nga.geopackage.core.contents.Contents.getBoundingBox((r10 'this' I:mil.nga.geopackage.core.contents.Contents A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_10;
Node_9 -> Node_10;
}

