digraph "CFG formil.nga.geopackage.core.contents.Contents.getGeometryColumns()Lmil\/nga\/geopackage\/features\/columns\/GeometryColumns;" {
subgraph cluster_Region_154974832 {
label = "R(1:(2:20|21)(1:(1:19)(2:4|(1:(1:22)))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_195618990 {
label = "IF [B:1:0x0007] THEN: R(2:20|21) ELSE: R(1:(1:19)(2:4|(1:(1:22))))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0007|if (r3.geometryColumns.size() \> 1) goto L_0x003a\l}"];
subgraph cluster_Region_1823875026 {
label = "R(2:20|21)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x003a}"];
Node_21 [shape=record,label="{21\:\ 0x0056|throw new mil.nga.geopackage.GeoPackageException(\"Unexpected state. More than one GeometryColumn has a foreign key to the Contents. Count: \" + r3.geometryColumns.size())\l}"];
}
subgraph cluster_Region_1865924328 {
label = "R(1:(1:19)(2:4|(1:(1:22)))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_62154308 {
label = "IF [B:3:0x000f] THEN: R(1:19) ELSE: R(2:4|(1:(1:22))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000f|if (r3.geometryColumns.size() != 1) goto L_0x0038\l}"];
subgraph cluster_Region_1335169796 {
label = "R(1:19)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0038|SYNTHETIC\lRETURN\lORIG_RETURN\l|return null\l}"];
}
subgraph cluster_Region_44164326 {
label = "R(2:4|(1:(1:22)))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0011|com.j256.ormlite.dao.CloseableIterator com.j256.ormlite.dao.CloseableIterator\<mil.nga.geopackage.features.columns.GeometryColumns\> r0 = r3.geometryColumns.closeableIterator()\l}"];
subgraph cluster_TryCatchRegion_327273899 {
label = "Try: R(1:(1:22)) finally: R(2:12|(2:14|15))";
node [shape=record,color=blue];
subgraph cluster_Region_1100210637 {
label = "R(1:(1:22))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_1639262717 {
label = "Try: R(1:22) catches: R(2:9|11)";
node [shape=record,color=blue];
subgraph cluster_Region_97906815 {
label = "R(1:22)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ ?|SYNTHETIC\lRETURN\l|return (mil.nga.geopackage.features.columns.GeometryColumns) r0.next()\l}"];
}
subgraph cluster_Region_115280892 {
label = "R(2:9|11) | ExcHandler: IOException (r0v8 'e' java.io.IOException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0021|ExcHandler: IOException (r0v8 'e' java.io.IOException A[CUSTOM_DECLARE])\lSplitter:B:7:0x001d\l}"];
Node_11 [shape=record,label="{11\:\ 0x0029|throw new mil.nga.geopackage.GeoPackageException(\"Failed to close the Geometry Columns iterator\", r0)\l}"];
}
}
}
subgraph cluster_Region_464413209 {
label = "R(2:12|(2:14|15)) | ExcHandler:  FINALLY\l";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x002a|ExcHandler:  FINALLY\lSplitter:B:5:0x0017\l}"];
subgraph cluster_TryCatchRegion_1173189928 {
label = "Try: R(2:14|15) catches: R(2:16|18)";
node [shape=record,color=blue];
subgraph cluster_Region_1091920487 {
label = "R(2:14|15)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ ?|FINALLY_INSNS\lCatch:\{ IOException \-\> 0x002f \}\lSplitter:B:13:0x002b\l|r0.close()     \/\/ Catch:\{ IOException \-\> 0x002f \}\l}"];
Node_15 [shape=record,label="{15\:\ 0x002e|throw r1\l}"];
}
subgraph cluster_Region_224351913 {
label = "R(2:16|18) | ExcHandler: IOException (r0v7 'e' java.io.IOException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x002f|ExcHandler: IOException (r0v7 'e' java.io.IOException A[CUSTOM_DECLARE])\lSplitter:B:13:0x002b\l}"];
Node_18 [shape=record,label="{18\:\ 0x0037|throw new mil.nga.geopackage.GeoPackageException(\"Failed to close the Geometry Columns iterator\", r0)\l}"];
}
}
}
}
}
}
}
}
}
subgraph cluster_Region_464413209 {
label = "R(2:12|(2:14|15)) | ExcHandler:  FINALLY\l";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x002a|ExcHandler:  FINALLY\lSplitter:B:5:0x0017\l}"];
subgraph cluster_TryCatchRegion_1173189928 {
label = "Try: R(2:14|15) catches: R(2:16|18)";
node [shape=record,color=blue];
subgraph cluster_Region_1091920487 {
label = "R(2:14|15)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ ?|FINALLY_INSNS\lCatch:\{ IOException \-\> 0x002f \}\lSplitter:B:13:0x002b\l|r0.close()     \/\/ Catch:\{ IOException \-\> 0x002f \}\l}"];
Node_15 [shape=record,label="{15\:\ 0x002e|throw r1\l}"];
}
subgraph cluster_Region_224351913 {
label = "R(2:16|18) | ExcHandler: IOException (r0v7 'e' java.io.IOException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x002f|ExcHandler: IOException (r0v7 'e' java.io.IOException A[CUSTOM_DECLARE])\lSplitter:B:13:0x002b\l}"];
Node_18 [shape=record,label="{18\:\ 0x0037|throw new mil.nga.geopackage.GeoPackageException(\"Failed to close the Geometry Columns iterator\", r0)\l}"];
}
}
}
subgraph cluster_Region_115280892 {
label = "R(2:9|11) | ExcHandler: IOException (r0v8 'e' java.io.IOException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0021|ExcHandler: IOException (r0v8 'e' java.io.IOException A[CUSTOM_DECLARE])\lSplitter:B:7:0x001d\l}"];
Node_11 [shape=record,label="{11\:\ 0x0029|throw new mil.nga.geopackage.GeoPackageException(\"Failed to close the Geometry Columns iterator\", r0)\l}"];
}
subgraph cluster_Region_224351913 {
label = "R(2:16|18) | ExcHandler: IOException (r0v7 'e' java.io.IOException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x002f|ExcHandler: IOException (r0v7 'e' java.io.IOException A[CUSTOM_DECLARE])\lSplitter:B:13:0x002b\l}"];
Node_18 [shape=record,label="{18\:\ 0x0037|throw new mil.nga.geopackage.GeoPackageException(\"Failed to close the Geometry Columns iterator\", r0)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0009}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0017|SYNTHETIC\lSplitter:B:5:0x0017\l}"];
Node_6 [shape=record,color=red,label="{6\:\ ?|Catch:\{ all \-\> 0x002a \}\lSplitter:B:5:0x0017\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x001d|SYNTHETIC\lSplitter:B:7:0x001d\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|DONT_GENERATE\lCatch:\{ IOException \-\> 0x0021 \}\lSplitter:B:7:0x001d\l|r0.close()     \/\/ Catch:\{ IOException \-\> 0x0021 \}\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0022}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x002b|SYNTHETIC\lSplitter:B:13:0x002b\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0030}"];
MethodNode[shape=record,label="{public mil.nga.geopackage.features.columns.GeometryColumns mil.nga.geopackage.core.contents.Contents.getGeometryColumns((r3v0 'this' mil.nga.geopackage.core.contents.Contents A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_20;
Node_20 -> Node_21;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_19;
Node_4 -> Node_5;
Node_9 -> Node_10;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_14 -> Node_16;
Node_16 -> Node_17;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_14 -> Node_16;
Node_16 -> Node_17;
Node_9 -> Node_10;
Node_16 -> Node_17;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_5 -> Node_6;
Node_5 -> Node_12;
Node_6 -> Node_7;
Node_6 -> Node_12;
Node_7 -> Node_8;
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_8 -> Node_22;
Node_10 -> Node_11;
Node_13 -> Node_14;
Node_13 -> Node_16;
Node_17 -> Node_18;
}

