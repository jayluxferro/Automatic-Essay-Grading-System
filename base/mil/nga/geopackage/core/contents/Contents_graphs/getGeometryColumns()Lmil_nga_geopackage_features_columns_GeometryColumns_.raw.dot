digraph "CFG formil.nga.geopackage.core.contents.Contents.getGeometryColumns()Lmil\/nga\/geopackage\/features\/columns\/GeometryColumns;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.j256.ormlite.dao.ForeignCollection\<mil.nga.geopackage.features.columns.GeometryColumns\>) = (r3 I:mil.nga.geopackage.core.contents.Contents) mil.nga.geopackage.core.contents.Contents.geometryColumns com.j256.ormlite.dao.ForeignCollection \l0x0002: INVOKE  (r0 I:int) = (r0 I:com.j256.ormlite.dao.ForeignCollection) com.j256.ormlite.dao.ForeignCollection.size():int type: INTERFACE \l0x0006: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r0 I:?[int, byte, short, char]) \> (r1 I:?[int, byte, short, char])  \-\> B:22:0x003a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: IGET  (r0 I:com.j256.ormlite.dao.ForeignCollection\<mil.nga.geopackage.features.columns.GeometryColumns\>) = (r3 I:mil.nga.geopackage.core.contents.Contents) mil.nga.geopackage.core.contents.Contents.geometryColumns com.j256.ormlite.dao.ForeignCollection \l0x000b: INVOKE  (r0 I:int) = (r0 I:com.j256.ormlite.dao.ForeignCollection) com.j256.ormlite.dao.ForeignCollection.size():int type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0038 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: IGET  (r0 I:com.j256.ormlite.dao.ForeignCollection\<mil.nga.geopackage.features.columns.GeometryColumns\>) = (r3 I:mil.nga.geopackage.core.contents.Contents) mil.nga.geopackage.core.contents.Contents.geometryColumns com.j256.ormlite.dao.ForeignCollection \l0x0013: INVOKE  (r0 I:com.j256.ormlite.dao.CloseableIterator) = (r0 I:com.j256.ormlite.dao.ForeignCollection) com.j256.ormlite.dao.ForeignCollection.closeableIterator():com.j256.ormlite.dao.CloseableIterator type: INTERFACE \l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|SYNTHETIC\lSplitter:B:5:0x0017\l}"];
Node_6 [shape=record,label="{6\:\ ?|Splitter:B:5:0x0017\l|0x0017: INVOKE  (r1 I:java.lang.Object) = (r0 I:com.j256.ormlite.dao.CloseableIterator) com.j256.ormlite.dao.CloseableIterator.next():java.lang.Object type: INTERFACE A[Catch:\{ all \-\> 0x002a \}, TRY_ENTER]\l0x001b: CHECK_CAST  (r1 I:mil.nga.geopackage.features.columns.GeometryColumns) = (mil.nga.geopackage.features.columns.GeometryColumns) (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x002a \}, TRY_LEAVE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|SYNTHETIC\lSplitter:B:7:0x001d\l}"];
Node_8 [shape=record,label="{8\:\ ?|Splitter:B:7:0x001d\l|0x001d: INVOKE  (r0 I:com.j256.ormlite.dao.CloseableIterator) com.j256.ormlite.dao.CloseableIterator.close():void type: INTERFACE A[Catch:\{ IOException \-\> 0x0021 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0021|ExcHandler: IOException null\lSplitter:B:7:0x001d\l|0x0021: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_11 [shape=record,label="{11\:\ 0x0022|0x0022: NEW_INSTANCE  (r1 I:mil.nga.geopackage.GeoPackageException) =  mil.nga.geopackage.GeoPackageException \l0x0024: CONST_STR  (r2 I:java.lang.String) =  \"Failed to close the Geometry Columns iterator\" \l0x0026: INVOKE  \l  (r1 I:mil.nga.geopackage.GeoPackageException)\l  (r2 I:java.lang.String)\l  (r0 I:java.lang.Throwable)\l mil.nga.geopackage.GeoPackageException.\<init\>(java.lang.String, java.lang.Throwable):void type: DIRECT \l}"];
Node_12 [shape=record,label="{12\:\ 0x0029|0x0029: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_13 [shape=record,label="{13\:\ 0x002a|ExcHandler: all null\lSplitter:B:5:0x0017\l|0x002a: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_14 [shape=record,label="{14\:\ 0x002b|SYNTHETIC\lSplitter:B:14:0x002b\l}"];
Node_15 [shape=record,label="{15\:\ ?|Splitter:B:14:0x002b\l|0x002b: INVOKE  (r0 I:com.j256.ormlite.dao.CloseableIterator) com.j256.ormlite.dao.CloseableIterator.close():void type: INTERFACE A[Catch:\{ IOException \-\> 0x002f \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_16 [shape=record,label="{16\:\ 0x002e|0x002e: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_17 [shape=record,label="{17\:\ 0x002f|ExcHandler: IOException null\lSplitter:B:14:0x002b\l|0x002f: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_18 [shape=record,label="{18\:\ 0x0030|0x0030: NEW_INSTANCE  (r1 I:mil.nga.geopackage.GeoPackageException) =  mil.nga.geopackage.GeoPackageException \l0x0032: CONST_STR  (r2 I:java.lang.String) =  \"Failed to close the Geometry Columns iterator\" \l0x0034: INVOKE  \l  (r1 I:mil.nga.geopackage.GeoPackageException)\l  (r2 I:java.lang.String)\l  (r0 I:java.lang.Throwable)\l mil.nga.geopackage.GeoPackageException.\<init\>(java.lang.String, java.lang.Throwable):void type: DIRECT \l}"];
Node_19 [shape=record,label="{19\:\ 0x0037|0x0037: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0038|0x0038: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_21 [shape=record,label="{21\:\ 0x0039|0x0039: RETURN  (r1 I:mil.nga.geopackage.features.columns.GeometryColumns) \l}"];
Node_22 [shape=record,label="{22\:\ 0x003a|0x003a: NEW_INSTANCE  (r0 I:mil.nga.geopackage.GeoPackageException) =  mil.nga.geopackage.GeoPackageException \l0x003c: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x003e: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0041: CONST_STR  (r2 I:java.lang.String) =  \"Unexpected state. More than one GeometryColumn has a foreign key to the Contents. Count: \" \l0x0043: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0046: IGET  (r2 I:com.j256.ormlite.dao.ForeignCollection\<mil.nga.geopackage.features.columns.GeometryColumns\>) = (r3 I:mil.nga.geopackage.core.contents.Contents) mil.nga.geopackage.core.contents.Contents.geometryColumns com.j256.ormlite.dao.ForeignCollection \l0x0048: INVOKE  (r2 I:int) = (r2 I:com.j256.ormlite.dao.ForeignCollection) com.j256.ormlite.dao.ForeignCollection.size():int type: INTERFACE \l0x004c: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x004f: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0053: INVOKE  \l  (r0 I:mil.nga.geopackage.GeoPackageException)\l  (r1 I:java.lang.String)\l mil.nga.geopackage.GeoPackageException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_23 [shape=record,label="{23\:\ 0x0056|0x0056: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public mil.nga.geopackage.features.columns.GeometryColumns mil.nga.geopackage.core.contents.Contents.getGeometryColumns((r3 'this' I:mil.nga.geopackage.core.contents.Contents A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_22;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_20;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_13;
Node_6 -> Node_7;
Node_6 -> Node_13;
Node_7 -> Node_8;
Node_7 -> Node_10;
Node_8 -> Node_10;
Node_8 -> Node_21;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_17;
Node_15 -> Node_16;
Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_20 -> Node_21;
Node_22 -> Node_23;
}

