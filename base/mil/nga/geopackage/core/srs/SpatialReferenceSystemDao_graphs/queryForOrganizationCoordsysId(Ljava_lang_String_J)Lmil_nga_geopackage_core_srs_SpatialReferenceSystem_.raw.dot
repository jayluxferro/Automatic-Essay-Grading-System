digraph "CFG formil.nga.geopackage.core.srs.SpatialReferenceSystemDao.queryForOrganizationCoordsysId(Ljava\/lang\/String;J)Lmil\/nga\/geopackage\/core\/srs\/SpatialReferenceSystem;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:com.j256.ormlite.stmt.QueryBuilder) = \l  (r4 I:mil.nga.geopackage.core.srs.SpatialReferenceSystemDao)\l mil.nga.geopackage.core.srs.SpatialReferenceSystemDao.queryBuilder():com.j256.ormlite.stmt.QueryBuilder type: VIRTUAL \l0x0004: INVOKE  (r1 I:com.j256.ormlite.stmt.Where) = (r0 I:com.j256.ormlite.stmt.QueryBuilder) com.j256.ormlite.stmt.QueryBuilder.where():com.j256.ormlite.stmt.Where type: VIRTUAL \l0x0008: CONST_STR  (r2 I:java.lang.String) =  \"organization\" \l0x000a: INVOKE  \l  (r1 I:com.j256.ormlite.stmt.Where)\l  (r2 I:java.lang.String)\l  (r5 I:java.lang.Object)\l com.j256.ormlite.stmt.Where.like(java.lang.String, java.lang.Object):com.j256.ormlite.stmt.Where type: VIRTUAL \l0x000d: INVOKE  (r1 I:com.j256.ormlite.stmt.Where) = (r0 I:com.j256.ormlite.stmt.QueryBuilder) com.j256.ormlite.stmt.QueryBuilder.where():com.j256.ormlite.stmt.Where type: VIRTUAL \l0x0011: CONST_STR  (r2 I:java.lang.String) =  \"organization_coordsys_id\" \l0x0013: INVOKE  (r3 I:java.lang.Long) = (r6 I:long) java.lang.Long.valueOf(long):java.lang.Long type: STATIC \l0x0017: INVOKE  \l  (r1 I:com.j256.ormlite.stmt.Where)\l  (r2 I:java.lang.String)\l  (r3 I:java.lang.Object)\l com.j256.ormlite.stmt.Where.eq(java.lang.String, java.lang.Object):com.j256.ormlite.stmt.Where type: VIRTUAL \l0x001a: INVOKE  (r0 I:com.j256.ormlite.stmt.PreparedQuery) = (r0 I:com.j256.ormlite.stmt.QueryBuilder) com.j256.ormlite.stmt.QueryBuilder.prepare():com.j256.ormlite.stmt.PreparedQuery type: VIRTUAL \l0x001e: INVOKE  (r0 I:java.util.List) = \l  (r4 I:mil.nga.geopackage.core.srs.SpatialReferenceSystemDao)\l  (r0 I:com.j256.ormlite.stmt.PreparedQuery)\l mil.nga.geopackage.core.srs.SpatialReferenceSystemDao.query(com.j256.ormlite.stmt.PreparedQuery):java.util.List type: VIRTUAL \l0x0022: INVOKE  (r1 I:boolean) = (r0 I:java.util.List) java.util.List.isEmpty():boolean type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0026|0x0026: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0064 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0028|0x0028: INVOKE  (r1 I:int) = (r0 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x002c: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x002d|0x002d: IF  (r1 I:?[int, byte, short, char]) \> (r2 I:?[int, byte, short, char])  \-\> B:5:0x0037 \l}"];
Node_4 [shape=record,label="{4\:\ 0x002f|0x002f: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0030: INVOKE  (r5 I:java.lang.Object) = (r0 I:java.util.List), (r5 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0034: CHECK_CAST  (r5 I:mil.nga.geopackage.core.srs.SpatialReferenceSystem) = (mil.nga.geopackage.core.srs.SpatialReferenceSystem) (r5 I:?[OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0037|0x0037: NEW_INSTANCE  (r0 I:java.sql.SQLException) =  java.sql.SQLException \l0x0039: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x003b: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x003e: CONST_STR  (r2 I:java.lang.String) =  \"More than one \" \l0x0040: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0043: CONST_CLASS  (r2 I:java.lang.Class\<mil.nga.geopackage.core.srs.SpatialReferenceSystem\>) =  mil.nga.geopackage.core.srs.SpatialReferenceSystem.class \l0x0045: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.Class) java.lang.Class.getSimpleName():java.lang.String type: VIRTUAL \l0x0049: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x004c: CONST_STR  (r2 I:java.lang.String) =  \" returned for Organization: \" \l0x004e: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0051: INVOKE  (r1 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0054: CONST_STR  (r5 I:java.lang.String) =  \", Organization Coordsys Id: \" \l0x0056: INVOKE  (r1 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0059: INVOKE  (r1 I:java.lang.StringBuilder), (r6 I:long) java.lang.StringBuilder.append(long):java.lang.StringBuilder type: VIRTUAL \l0x005c: INVOKE  (r5 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0060: INVOKE  (r0 I:java.sql.SQLException), (r5 I:java.lang.String) java.sql.SQLException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x0063|0x0063: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0064|0x0064: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x0065|0x0065: RETURN  (r5 I:mil.nga.geopackage.core.srs.SpatialReferenceSystem) \l}"];
MethodNode[shape=record,label="{public mil.nga.geopackage.core.srs.SpatialReferenceSystem mil.nga.geopackage.core.srs.SpatialReferenceSystemDao.queryForOrganizationCoordsysId((r4 'this' I:mil.nga.geopackage.core.srs.SpatialReferenceSystemDao A[IMMUTABLE_TYPE, THIS]), (r5 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_7 -> Node_8;
}

