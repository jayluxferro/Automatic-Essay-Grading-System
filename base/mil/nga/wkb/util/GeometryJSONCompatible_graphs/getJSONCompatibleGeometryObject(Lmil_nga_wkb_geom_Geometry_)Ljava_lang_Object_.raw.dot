digraph "CFG formil.nga.wkb.util.GeometryJSONCompatible.getJSONCompatibleGeometryObject(Lmil\/nga\/wkb\/geom\/Geometry;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:mil.nga.wkb.geom.GeometryType) = (r3 I:mil.nga.wkb.geom.Geometry) mil.nga.wkb.geom.Geometry.getGeometryType():mil.nga.wkb.geom.GeometryType type: VIRTUAL \l0x0004: SGET  (r1 I:int[]) =  mil.nga.wkb.util.GeometryJSONCompatible.1.$SwitchMap$mil$nga$wkb$geom$GeometryType int[] \l0x0006: INVOKE  (r0 I:int) = (r0 I:mil.nga.wkb.geom.GeometryType) mil.nga.wkb.geom.GeometryType.ordinal():int type: VIRTUAL \l0x000a: AGET  (r0 I:?[int, float]) = (r1 I:?[int, float][]), (r0 I:?[int, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|0x000c: SWITCH  \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13] t:[0x0081, 0x007a, 0x0073, 0x006c, 0x0065, 0x005e, 0x0057, 0x0050, 0x0049, 0x0042, 0x003b, 0x0034, 0x0012] \l}"];
Node_2 [shape=record,label="{2\:\ 0x000f|0x000f: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|0x0012: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList \l0x0014: INVOKE  (r0 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x0017: CHECK_CAST  (r3 I:mil.nga.wkb.geom.GeometryCollection) = (mil.nga.wkb.geom.GeometryCollection) (r3 I:?[OBJECT, ARRAY]) \l0x0019: INVOKE  (r3 I:java.util.List) = (r3 I:mil.nga.wkb.geom.GeometryCollection) mil.nga.wkb.geom.GeometryCollection.getGeometries():java.util.List type: VIRTUAL \l0x001d: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x001e|0x001e: INVOKE  (r2 I:int) = (r3 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_5 [shape=record,label="{5\:\ 0x0022|0x0022: IF  (r1 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:19:0x0087 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0024|0x0024: INVOKE  (r2 I:java.lang.Object) = (r3 I:java.util.List), (r1 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0028: CHECK_CAST  (r2 I:mil.nga.wkb.geom.Geometry) = (mil.nga.wkb.geom.Geometry) (r2 I:?[OBJECT, ARRAY]) \l0x002a: INVOKE  (r2 I:java.lang.Object) = (r2 I:mil.nga.wkb.geom.Geometry) mil.nga.wkb.util.GeometryJSONCompatible.getJSONCompatibleGeometry(mil.nga.wkb.geom.Geometry):java.lang.Object type: STATIC \l0x002e: INVOKE  (r0 I:java.util.List), (r2 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x0031: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0034|0x0034: CHECK_CAST  (r3 I:mil.nga.wkb.geom.Triangle) = (mil.nga.wkb.geom.Triangle) (r3 I:?[OBJECT, ARRAY]) \l0x0036: INVOKE  (r0 I:java.lang.Object) = (r3 I:mil.nga.wkb.geom.Polygon) mil.nga.wkb.util.GeometryJSONCompatible.getPolygon(mil.nga.wkb.geom.Polygon):java.lang.Object type: STATIC \l}"];
Node_8 [shape=record,label="{8\:\ 0x003b|0x003b: CHECK_CAST  (r3 I:mil.nga.wkb.geom.TIN) = (mil.nga.wkb.geom.TIN) (r3 I:?[OBJECT, ARRAY]) \l0x003d: INVOKE  (r0 I:java.lang.Object) = (r3 I:mil.nga.wkb.geom.PolyhedralSurface) mil.nga.wkb.util.GeometryJSONCompatible.getPolyhedralSurface(mil.nga.wkb.geom.PolyhedralSurface):java.lang.Object type: STATIC \l}"];
Node_9 [shape=record,label="{9\:\ 0x0042|0x0042: CHECK_CAST  (r3 I:mil.nga.wkb.geom.PolyhedralSurface) = (mil.nga.wkb.geom.PolyhedralSurface) (r3 I:?[OBJECT, ARRAY]) \l0x0044: INVOKE  (r0 I:java.lang.Object) = (r3 I:mil.nga.wkb.geom.PolyhedralSurface) mil.nga.wkb.util.GeometryJSONCompatible.getPolyhedralSurface(mil.nga.wkb.geom.PolyhedralSurface):java.lang.Object type: STATIC \l}"];
Node_10 [shape=record,label="{10\:\ 0x0049|0x0049: CHECK_CAST  (r3 I:mil.nga.wkb.geom.CurvePolygon) = (mil.nga.wkb.geom.CurvePolygon) (r3 I:?[OBJECT, ARRAY]) \l0x004b: INVOKE  (r0 I:java.lang.Object) = (r3 I:mil.nga.wkb.geom.CurvePolygon) mil.nga.wkb.util.GeometryJSONCompatible.getCurvePolygon(mil.nga.wkb.geom.CurvePolygon):java.lang.Object type: STATIC \l}"];
Node_11 [shape=record,label="{11\:\ 0x0050|0x0050: CHECK_CAST  (r3 I:mil.nga.wkb.geom.CompoundCurve) = (mil.nga.wkb.geom.CompoundCurve) (r3 I:?[OBJECT, ARRAY]) \l0x0052: INVOKE  (r0 I:java.lang.Object) = (r3 I:mil.nga.wkb.geom.CompoundCurve) mil.nga.wkb.util.GeometryJSONCompatible.getCompoundCurve(mil.nga.wkb.geom.CompoundCurve):java.lang.Object type: STATIC \l}"];
Node_12 [shape=record,label="{12\:\ 0x0057|0x0057: CHECK_CAST  (r3 I:mil.nga.wkb.geom.CircularString) = (mil.nga.wkb.geom.CircularString) (r3 I:?[OBJECT, ARRAY]) \l0x0059: INVOKE  (r0 I:java.lang.Object) = (r3 I:mil.nga.wkb.geom.LineString) mil.nga.wkb.util.GeometryJSONCompatible.getLineString(mil.nga.wkb.geom.LineString):java.lang.Object type: STATIC \l}"];
Node_13 [shape=record,label="{13\:\ 0x005e|0x005e: CHECK_CAST  (r3 I:mil.nga.wkb.geom.MultiPolygon) = (mil.nga.wkb.geom.MultiPolygon) (r3 I:?[OBJECT, ARRAY]) \l0x0060: INVOKE  (r0 I:java.lang.Object) = (r3 I:mil.nga.wkb.geom.MultiPolygon) mil.nga.wkb.util.GeometryJSONCompatible.getMultiPolygon(mil.nga.wkb.geom.MultiPolygon):java.lang.Object type: STATIC \l}"];
Node_14 [shape=record,label="{14\:\ 0x0065|0x0065: CHECK_CAST  (r3 I:mil.nga.wkb.geom.MultiLineString) = (mil.nga.wkb.geom.MultiLineString) (r3 I:?[OBJECT, ARRAY]) \l0x0067: INVOKE  (r0 I:java.lang.Object) = (r3 I:mil.nga.wkb.geom.MultiLineString) mil.nga.wkb.util.GeometryJSONCompatible.getMultiLineString(mil.nga.wkb.geom.MultiLineString):java.lang.Object type: STATIC \l}"];
Node_15 [shape=record,label="{15\:\ 0x006c|0x006c: CHECK_CAST  (r3 I:mil.nga.wkb.geom.MultiPoint) = (mil.nga.wkb.geom.MultiPoint) (r3 I:?[OBJECT, ARRAY]) \l0x006e: INVOKE  (r0 I:java.lang.Object) = (r3 I:mil.nga.wkb.geom.MultiPoint) mil.nga.wkb.util.GeometryJSONCompatible.getMultiPoint(mil.nga.wkb.geom.MultiPoint):java.lang.Object type: STATIC \l}"];
Node_16 [shape=record,label="{16\:\ 0x0073|0x0073: CHECK_CAST  (r3 I:mil.nga.wkb.geom.Polygon) = (mil.nga.wkb.geom.Polygon) (r3 I:?[OBJECT, ARRAY]) \l0x0075: INVOKE  (r0 I:java.lang.Object) = (r3 I:mil.nga.wkb.geom.Polygon) mil.nga.wkb.util.GeometryJSONCompatible.getPolygon(mil.nga.wkb.geom.Polygon):java.lang.Object type: STATIC \l}"];
Node_17 [shape=record,label="{17\:\ 0x007a|0x007a: CHECK_CAST  (r3 I:mil.nga.wkb.geom.LineString) = (mil.nga.wkb.geom.LineString) (r3 I:?[OBJECT, ARRAY]) \l0x007c: INVOKE  (r0 I:java.lang.Object) = (r3 I:mil.nga.wkb.geom.LineString) mil.nga.wkb.util.GeometryJSONCompatible.getLineString(mil.nga.wkb.geom.LineString):java.lang.Object type: STATIC \l}"];
Node_18 [shape=record,label="{18\:\ 0x0081|0x0081: CHECK_CAST  (r3 I:mil.nga.wkb.geom.Point) = (mil.nga.wkb.geom.Point) (r3 I:?[OBJECT, ARRAY]) \l0x0083: INVOKE  (r0 I:java.lang.Object) = (r3 I:mil.nga.wkb.geom.Point) mil.nga.wkb.util.GeometryJSONCompatible.getPoint(mil.nga.wkb.geom.Point):java.lang.Object type: STATIC \l}"];
Node_19 [shape=record,label="{19\:\ 0x0087|0x0087: RETURN  (r0 I:java.lang.Object) \l}"];
MethodNode[shape=record,label="{private static java.lang.Object mil.nga.wkb.util.GeometryJSONCompatible.getJSONCompatibleGeometryObject((r3 I:mil.nga.wkb.geom.Geometry A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_1 -> Node_7;
Node_1 -> Node_8;
Node_1 -> Node_9;
Node_1 -> Node_10;
Node_1 -> Node_11;
Node_1 -> Node_12;
Node_1 -> Node_13;
Node_1 -> Node_14;
Node_1 -> Node_15;
Node_1 -> Node_16;
Node_1 -> Node_17;
Node_1 -> Node_18;
Node_2 -> Node_19;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_19;
Node_6 -> Node_4;
Node_7 -> Node_19;
Node_8 -> Node_19;
Node_9 -> Node_19;
Node_10 -> Node_19;
Node_11 -> Node_19;
Node_12 -> Node_19;
Node_13 -> Node_19;
Node_14 -> Node_19;
Node_15 -> Node_19;
Node_16 -> Node_19;
Node_17 -> Node_19;
Node_18 -> Node_19;
}

