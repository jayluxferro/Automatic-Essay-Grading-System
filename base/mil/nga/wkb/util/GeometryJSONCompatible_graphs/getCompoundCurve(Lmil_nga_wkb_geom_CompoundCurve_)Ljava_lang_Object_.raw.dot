digraph "CFG formil.nga.wkb.util.GeometryJSONCompatible.getCompoundCurve(Lmil\/nga\/wkb\/geom\/CompoundCurve;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList \l0x0002: INVOKE  (r0 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x0005: INVOKE  (r3 I:java.util.List) = (r3 I:mil.nga.wkb.geom.CompoundCurve) mil.nga.wkb.geom.CompoundCurve.getLineStrings():java.util.List type: VIRTUAL \l0x0009: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: INVOKE  (r2 I:int) = (r3 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|0x000e: IF  (r1 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:4:0x0020 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: INVOKE  (r2 I:java.lang.Object) = (r3 I:java.util.List), (r1 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0014: CHECK_CAST  (r2 I:mil.nga.wkb.geom.LineString) = (mil.nga.wkb.geom.LineString) (r2 I:?[OBJECT, ARRAY]) \l0x0016: INVOKE  (r2 I:java.lang.Object) = (r2 I:mil.nga.wkb.geom.LineString) mil.nga.wkb.util.GeometryJSONCompatible.getLineString(mil.nga.wkb.geom.LineString):java.lang.Object type: STATIC \l0x001a: INVOKE  (r0 I:java.util.List), (r2 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x001d: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0020|0x0020: RETURN  (r0 I:java.lang.Object) \l}"];
MethodNode[shape=record,label="{private static java.lang.Object mil.nga.wkb.util.GeometryJSONCompatible.getCompoundCurve((r3 I:mil.nga.wkb.geom.CompoundCurve A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
}

