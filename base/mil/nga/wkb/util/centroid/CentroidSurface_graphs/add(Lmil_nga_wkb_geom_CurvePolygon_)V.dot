digraph "CFG formil.nga.wkb.util.centroid.CentroidSurface.add(Lmil\/nga\/wkb\/geom\/CurvePolygon;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.List r6 = r6.getRings()\lmil.nga.wkb.geom.Curve r0 = r6.get(0)\lmil.nga.wkb.geom.GeometryType r1 = r0.getGeometryType()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0017|switch(r1) \{\l    case mil.nga.wkb.geom.GeometryType.LINESTRING :mil.nga.wkb.geom.GeometryType: goto L_0x004b;\l    case mil.nga.wkb.geom.GeometryType.CIRCULARSTRING :mil.nga.wkb.geom.GeometryType: goto L_0x004b;\l    case mil.nga.wkb.geom.GeometryType.MULTILINESTRING :mil.nga.wkb.geom.GeometryType: goto L_0x001a;\l    case mil.nga.wkb.geom.GeometryType.COMPOUNDCURVE :mil.nga.wkb.geom.GeometryType: goto L_0x0031;\l    default: goto L_0x001a;\l\}\l}"];
Node_2 [shape=record,label="{2\:\ 0x001a|java.lang.StringBuilder r0 = new java.lang.StringBuilder()\lr0.append(\"Unexpected Curve Type: \")\lr0.append(r1)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0030|throw new mil.nga.wkb.util.WkbException(r0.toString())\l}"];
Node_4 [shape=record,label="{4\:\ 0x0031|java.util.Iterator r0 = ((mil.nga.wkb.geom.CompoundCurve) r0).getLineStrings().iterator()\l}"];
Node_5 [shape=record,label="{5\:\ 0x003b|LOOP_START\lLOOP:0: B:5:0x003b\-\>B:7:0x0041\l}"];
Node_6 [shape=record,label="{6\:\ 0x003f|if (r0.hasNext() == false) goto L_0x0050\l}"];
Node_7 [shape=record,label="{7\:\ 0x0041|LOOP_END\lLOOP:0: B:5:0x003b\-\>B:7:0x0041\l|add(r0.next())\l}"];
Node_8 [shape=record,label="{8\:\ 0x004b|add((mil.nga.wkb.geom.LineString) r0)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0050|r0 = 1\l}"];
Node_10 [shape=record,label="{10\:\ 0x0051|LOOP_START\lPHI: r0 \l  PHI: (r0v4 int) = (r0v3 int), (r0v7 int) binds: [B:9:0x0050, B:21:0x00a2] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:10:0x0051\-\>B:21:0x00a2\l}"];
Node_11 [shape=record,label="{11\:\ 0x0055|if (r0 \>= r6.size()) goto L_0x00a5\l}"];
Node_12 [shape=record,label="{12\:\ 0x0057|mil.nga.wkb.geom.Curve r1 = r6.get(r0)\lmil.nga.wkb.geom.GeometryType r2 = r1.getGeometryType()\l}"];
Node_13 [shape=record,label="{13\:\ 0x0069|switch(r2) \{\l    case mil.nga.wkb.geom.GeometryType.LINESTRING :mil.nga.wkb.geom.GeometryType: goto L_0x009d;\l    case mil.nga.wkb.geom.GeometryType.CIRCULARSTRING :mil.nga.wkb.geom.GeometryType: goto L_0x009d;\l    case mil.nga.wkb.geom.GeometryType.MULTILINESTRING :mil.nga.wkb.geom.GeometryType: goto L_0x006c;\l    case mil.nga.wkb.geom.GeometryType.COMPOUNDCURVE :mil.nga.wkb.geom.GeometryType: goto L_0x0083;\l    default: goto L_0x006c;\l\}\l}"];
Node_14 [shape=record,label="{14\:\ 0x006c|java.lang.StringBuilder r0 = new java.lang.StringBuilder()\lr0.append(\"Unexpected Curve Type: \")\lr0.append(r2)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0082|throw new mil.nga.wkb.util.WkbException(r0.toString())\l}"];
Node_16 [shape=record,label="{16\:\ 0x0083|java.util.Iterator r1 = ((mil.nga.wkb.geom.CompoundCurve) r1).getLineStrings().iterator()\l}"];
Node_17 [shape=record,label="{17\:\ 0x008d|LOOP_START\lLOOP:2: B:17:0x008d\-\>B:19:0x0093\l}"];
Node_18 [shape=record,label="{18\:\ 0x0091|if (r1.hasNext() == false) goto L_0x00a2\l}"];
Node_19 [shape=record,label="{19\:\ 0x0093|LOOP_END\lLOOP:2: B:17:0x008d\-\>B:19:0x0093\l|addHole(r1.next())\l}"];
Node_20 [shape=record,label="{20\:\ 0x009d|addHole((mil.nga.wkb.geom.LineString) r1)\l}"];
Node_21 [shape=record,label="{21\:\ 0x00a2|LOOP_END\lLOOP:1: B:10:0x0051\-\>B:21:0x00a2\l|int r0 = r0 + 1\l}"];
Node_22 [shape=record,label="{22\:\ 0x00a5|RETURN\l|return\l}"];
Node_23 [shape=record,label="{23\:\ 0x0050|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x00a5|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x006c|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x00a2|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x00a2|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void mil.nga.wkb.util.centroid.CentroidSurface.add((r5v0 'this' mil.nga.wkb.util.centroid.CentroidSurface A[IMMUTABLE_TYPE, THIS]), (r6v0 mil.nga.wkb.geom.CurvePolygon\<mil.nga.wkb.geom.Curve\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lmil\/nga\/wkb\/geom\/CurvePolygon\<, Lmil\/nga\/wkb\/geom\/Curve;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_23;
Node_7 -> Node_5;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_24;
Node_12 -> Node_13;
Node_13 -> Node_16;
Node_13 -> Node_20;
Node_13 -> Node_25;
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_27;
Node_19 -> Node_17;
Node_20 -> Node_26;
Node_21 -> Node_10;
Node_23 -> Node_9;
Node_24 -> Node_22;
Node_25 -> Node_14;
Node_26 -> Node_21;
Node_27 -> Node_21;
}

