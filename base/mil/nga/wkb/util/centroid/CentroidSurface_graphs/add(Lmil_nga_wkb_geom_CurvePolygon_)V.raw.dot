digraph "CFG formil.nga.wkb.util.centroid.CentroidSurface.add(Lmil\/nga\/wkb\/geom\/CurvePolygon;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r6 I:java.util.List) = (r6 I:mil.nga.wkb.geom.CurvePolygon) mil.nga.wkb.geom.CurvePolygon.getRings():java.util.List type: VIRTUAL \l0x0004: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0005: INVOKE  (r0 I:java.lang.Object) = (r6 I:java.util.List), (r0 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0009: CHECK_CAST  (r0 I:mil.nga.wkb.geom.Curve) = (mil.nga.wkb.geom.Curve) (r0 I:?[OBJECT, ARRAY]) \l0x000b: INVOKE  (r1 I:mil.nga.wkb.geom.GeometryType) = (r0 I:mil.nga.wkb.geom.Curve) mil.nga.wkb.geom.Curve.getGeometryType():mil.nga.wkb.geom.GeometryType type: VIRTUAL \l0x000f: SGET  (r2 I:int[]) =  mil.nga.wkb.util.centroid.CentroidSurface.1.$SwitchMap$mil$nga$wkb$geom$GeometryType int[] \l0x0011: INVOKE  (r3 I:int) = (r1 I:mil.nga.wkb.geom.GeometryType) mil.nga.wkb.geom.GeometryType.ordinal():int type: VIRTUAL \l0x0015: AGET  (r2 I:?[int, float]) = (r2 I:?[int, float][]), (r3 I:?[int, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0017|0x0017: SWITCH  \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[10, 11, 12, 13] t:[0x004b, 0x004b, 0x001a, 0x0031] \l}"];
Node_2 [shape=record,label="{2\:\ 0x001a|0x001a: NEW_INSTANCE  (r6 I:mil.nga.wkb.util.WkbException) =  mil.nga.wkb.util.WkbException \l0x001c: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x001e: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0021: CONST_STR  (r2 I:java.lang.String) =  \"Unexpected Curve Type: \" \l0x0023: INVOKE  (r0 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0026: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0029: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x002d: INVOKE  \l  (r6 I:mil.nga.wkb.util.WkbException)\l  (r0 I:java.lang.String)\l mil.nga.wkb.util.WkbException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x0030|0x0030: THROW  (r6 I:java.lang.Throwable) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0031|0x0031: CHECK_CAST  (r0 I:mil.nga.wkb.geom.CompoundCurve) = (mil.nga.wkb.geom.CompoundCurve) (r0 I:?[OBJECT, ARRAY]) \l0x0033: INVOKE  (r0 I:java.util.List) = (r0 I:mil.nga.wkb.geom.CompoundCurve) mil.nga.wkb.geom.CompoundCurve.getLineStrings():java.util.List type: VIRTUAL \l0x0037: INVOKE  (r0 I:java.util.Iterator) = (r0 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_5 [shape=record,label="{5\:\ 0x003b|0x003b: INVOKE  (r1 I:boolean) = (r0 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_6 [shape=record,label="{6\:\ 0x003f|0x003f: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0050 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0041|0x0041: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0045: CHECK_CAST  (r1 I:mil.nga.wkb.geom.LineString) = (mil.nga.wkb.geom.LineString) (r1 I:?[OBJECT, ARRAY]) \l0x0047: INVOKE  \l  (r5 I:mil.nga.wkb.util.centroid.CentroidSurface)\l  (r1 I:mil.nga.wkb.geom.LineString)\l mil.nga.wkb.util.centroid.CentroidSurface.add(mil.nga.wkb.geom.LineString):void type: DIRECT \l}"];
Node_8 [shape=record,label="{8\:\ 0x004b|0x004b: CHECK_CAST  (r0 I:mil.nga.wkb.geom.LineString) = (mil.nga.wkb.geom.LineString) (r0 I:?[OBJECT, ARRAY]) \l0x004d: INVOKE  \l  (r5 I:mil.nga.wkb.util.centroid.CentroidSurface)\l  (r0 I:mil.nga.wkb.geom.LineString)\l mil.nga.wkb.util.centroid.CentroidSurface.add(mil.nga.wkb.geom.LineString):void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x0050|0x0050: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0051|0x0051: INVOKE  (r1 I:int) = (r6 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_11 [shape=record,label="{11\:\ 0x0055|0x0055: IF  (r0 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:22:0x00a5 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0057|0x0057: INVOKE  (r1 I:java.lang.Object) = (r6 I:java.util.List), (r0 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x005b: CHECK_CAST  (r1 I:mil.nga.wkb.geom.Curve) = (mil.nga.wkb.geom.Curve) (r1 I:?[OBJECT, ARRAY]) \l0x005d: INVOKE  (r2 I:mil.nga.wkb.geom.GeometryType) = (r1 I:mil.nga.wkb.geom.Curve) mil.nga.wkb.geom.Curve.getGeometryType():mil.nga.wkb.geom.GeometryType type: VIRTUAL \l0x0061: SGET  (r3 I:int[]) =  mil.nga.wkb.util.centroid.CentroidSurface.1.$SwitchMap$mil$nga$wkb$geom$GeometryType int[] \l0x0063: INVOKE  (r4 I:int) = (r2 I:mil.nga.wkb.geom.GeometryType) mil.nga.wkb.geom.GeometryType.ordinal():int type: VIRTUAL \l0x0067: AGET  (r3 I:?[int, float]) = (r3 I:?[int, float][]), (r4 I:?[int, short, byte, char]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0069|0x0069: SWITCH  \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[10, 11, 12, 13] t:[0x009d, 0x009d, 0x006c, 0x0083] \l}"];
Node_14 [shape=record,label="{14\:\ 0x006c|0x006c: NEW_INSTANCE  (r6 I:mil.nga.wkb.util.WkbException) =  mil.nga.wkb.util.WkbException \l0x006e: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0070: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0073: CONST_STR  (r1 I:java.lang.String) =  \"Unexpected Curve Type: \" \l0x0075: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0078: INVOKE  (r0 I:java.lang.StringBuilder), (r2 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x007b: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x007f: INVOKE  \l  (r6 I:mil.nga.wkb.util.WkbException)\l  (r0 I:java.lang.String)\l mil.nga.wkb.util.WkbException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_15 [shape=record,label="{15\:\ 0x0082|0x0082: THROW  (r6 I:java.lang.Throwable) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0083|0x0083: CHECK_CAST  (r1 I:mil.nga.wkb.geom.CompoundCurve) = (mil.nga.wkb.geom.CompoundCurve) (r1 I:?[OBJECT, ARRAY]) \l0x0085: INVOKE  (r1 I:java.util.List) = (r1 I:mil.nga.wkb.geom.CompoundCurve) mil.nga.wkb.geom.CompoundCurve.getLineStrings():java.util.List type: VIRTUAL \l0x0089: INVOKE  (r1 I:java.util.Iterator) = (r1 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_17 [shape=record,label="{17\:\ 0x008d|0x008d: INVOKE  (r2 I:boolean) = (r1 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_18 [shape=record,label="{18\:\ 0x0091|0x0091: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x00a2 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0093|0x0093: INVOKE  (r2 I:java.lang.Object) = (r1 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0097: CHECK_CAST  (r2 I:mil.nga.wkb.geom.LineString) = (mil.nga.wkb.geom.LineString) (r2 I:?[OBJECT, ARRAY]) \l0x0099: INVOKE  \l  (r5 I:mil.nga.wkb.util.centroid.CentroidSurface)\l  (r2 I:mil.nga.wkb.geom.LineString)\l mil.nga.wkb.util.centroid.CentroidSurface.addHole(mil.nga.wkb.geom.LineString):void type: DIRECT \l}"];
Node_20 [shape=record,label="{20\:\ 0x009d|0x009d: CHECK_CAST  (r1 I:mil.nga.wkb.geom.LineString) = (mil.nga.wkb.geom.LineString) (r1 I:?[OBJECT, ARRAY]) \l0x009f: INVOKE  \l  (r5 I:mil.nga.wkb.util.centroid.CentroidSurface)\l  (r1 I:mil.nga.wkb.geom.LineString)\l mil.nga.wkb.util.centroid.CentroidSurface.addHole(mil.nga.wkb.geom.LineString):void type: DIRECT \l}"];
Node_21 [shape=record,label="{21\:\ 0x00a2|0x00a2: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l}"];
Node_22 [shape=record,label="{22\:\ 0x00a5|0x00a5: RETURN   \l}"];
MethodNode[shape=record,label="{private void mil.nga.wkb.util.centroid.CentroidSurface.add((r5 'this' I:mil.nga.wkb.util.centroid.CentroidSurface A[IMMUTABLE_TYPE, THIS]), (r6 I:mil.nga.wkb.geom.CurvePolygon\<mil.nga.wkb.geom.Curve\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lmil\/nga\/wkb\/geom\/CurvePolygon\<, Lmil\/nga\/wkb\/geom\/Curve;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_5;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_22;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_16;
Node_13 -> Node_20;
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_21;
Node_19 -> Node_17;
Node_20 -> Node_21;
Node_21 -> Node_10;
}

