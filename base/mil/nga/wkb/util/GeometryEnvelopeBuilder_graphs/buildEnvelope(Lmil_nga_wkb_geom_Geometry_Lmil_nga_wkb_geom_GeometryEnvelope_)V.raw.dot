digraph "CFG formil.nga.wkb.util.GeometryEnvelopeBuilder.buildEnvelope(Lmil\/nga\/wkb\/geom\/Geometry;Lmil\/nga\/wkb\/geom\/GeometryEnvelope;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:mil.nga.wkb.geom.GeometryType) = (r2 I:mil.nga.wkb.geom.Geometry) mil.nga.wkb.geom.Geometry.getGeometryType():mil.nga.wkb.geom.GeometryType type: VIRTUAL \l0x0004: SGET  (r1 I:int[]) =  mil.nga.wkb.util.GeometryEnvelopeBuilder.1.$SwitchMap$mil$nga$wkb$geom$GeometryType int[] \l0x0006: INVOKE  (r0 I:int) = (r0 I:mil.nga.wkb.geom.GeometryType) mil.nga.wkb.geom.GeometryType.ordinal():int type: VIRTUAL \l0x000a: AGET  (r0 I:?[int, float]) = (r1 I:?[int, float][]), (r0 I:?[int, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|0x000c: SWITCH  \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13] t:[0x0070, 0x006a, 0x0064, 0x005e, 0x0058, 0x0052, 0x004c, 0x0046, 0x0040, 0x003a, 0x0034, 0x002e, 0x0011] \l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|0x0011: INVOKE  \l  (r3 I:mil.nga.wkb.geom.GeometryEnvelope)\l  (r2 I:mil.nga.wkb.geom.Geometry)\l mil.nga.wkb.util.GeometryEnvelopeBuilder.updateHasZandM(mil.nga.wkb.geom.GeometryEnvelope, mil.nga.wkb.geom.Geometry):void type: STATIC \l0x0014: CHECK_CAST  (r2 I:mil.nga.wkb.geom.GeometryCollection) = (mil.nga.wkb.geom.GeometryCollection) (r2 I:?[OBJECT, ARRAY]) \l0x0016: INVOKE  (r2 I:java.util.List) = (r2 I:mil.nga.wkb.geom.GeometryCollection) mil.nga.wkb.geom.GeometryCollection.getGeometries():java.util.List type: VIRTUAL \l0x001a: INVOKE  (r2 I:java.util.Iterator) = (r2 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x001e|0x001e: INVOKE  (r0 I:boolean) = (r2 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_5 [shape=record,label="{5\:\ 0x0022|0x0022: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0075 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0024|0x0024: INVOKE  (r0 I:java.lang.Object) = (r2 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0028: CHECK_CAST  (r0 I:mil.nga.wkb.geom.Geometry) = (mil.nga.wkb.geom.Geometry) (r0 I:?[OBJECT, ARRAY]) \l0x002a: INVOKE  \l  (r0 I:mil.nga.wkb.geom.Geometry)\l  (r3 I:mil.nga.wkb.geom.GeometryEnvelope)\l mil.nga.wkb.util.GeometryEnvelopeBuilder.buildEnvelope(mil.nga.wkb.geom.Geometry, mil.nga.wkb.geom.GeometryEnvelope):void type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x002e|0x002e: CHECK_CAST  (r2 I:mil.nga.wkb.geom.Triangle) = (mil.nga.wkb.geom.Triangle) (r2 I:?[OBJECT, ARRAY]) \l0x0030: INVOKE  \l  (r3 I:mil.nga.wkb.geom.GeometryEnvelope)\l  (r2 I:mil.nga.wkb.geom.Polygon)\l mil.nga.wkb.util.GeometryEnvelopeBuilder.addPolygon(mil.nga.wkb.geom.GeometryEnvelope, mil.nga.wkb.geom.Polygon):void type: STATIC \l}"];
Node_8 [shape=record,label="{8\:\ 0x0034|0x0034: CHECK_CAST  (r2 I:mil.nga.wkb.geom.TIN) = (mil.nga.wkb.geom.TIN) (r2 I:?[OBJECT, ARRAY]) \l0x0036: INVOKE  \l  (r3 I:mil.nga.wkb.geom.GeometryEnvelope)\l  (r2 I:mil.nga.wkb.geom.PolyhedralSurface)\l mil.nga.wkb.util.GeometryEnvelopeBuilder.addPolyhedralSurface(mil.nga.wkb.geom.GeometryEnvelope, mil.nga.wkb.geom.PolyhedralSurface):void type: STATIC \l}"];
Node_9 [shape=record,label="{9\:\ 0x003a|0x003a: CHECK_CAST  (r2 I:mil.nga.wkb.geom.PolyhedralSurface) = (mil.nga.wkb.geom.PolyhedralSurface) (r2 I:?[OBJECT, ARRAY]) \l0x003c: INVOKE  \l  (r3 I:mil.nga.wkb.geom.GeometryEnvelope)\l  (r2 I:mil.nga.wkb.geom.PolyhedralSurface)\l mil.nga.wkb.util.GeometryEnvelopeBuilder.addPolyhedralSurface(mil.nga.wkb.geom.GeometryEnvelope, mil.nga.wkb.geom.PolyhedralSurface):void type: STATIC \l}"];
Node_10 [shape=record,label="{10\:\ 0x0040|0x0040: CHECK_CAST  (r2 I:mil.nga.wkb.geom.CurvePolygon) = (mil.nga.wkb.geom.CurvePolygon) (r2 I:?[OBJECT, ARRAY]) \l0x0042: INVOKE  \l  (r3 I:mil.nga.wkb.geom.GeometryEnvelope)\l  (r2 I:mil.nga.wkb.geom.CurvePolygon)\l mil.nga.wkb.util.GeometryEnvelopeBuilder.addCurvePolygon(mil.nga.wkb.geom.GeometryEnvelope, mil.nga.wkb.geom.CurvePolygon):void type: STATIC \l}"];
Node_11 [shape=record,label="{11\:\ 0x0046|0x0046: CHECK_CAST  (r2 I:mil.nga.wkb.geom.CompoundCurve) = (mil.nga.wkb.geom.CompoundCurve) (r2 I:?[OBJECT, ARRAY]) \l0x0048: INVOKE  \l  (r3 I:mil.nga.wkb.geom.GeometryEnvelope)\l  (r2 I:mil.nga.wkb.geom.CompoundCurve)\l mil.nga.wkb.util.GeometryEnvelopeBuilder.addCompoundCurve(mil.nga.wkb.geom.GeometryEnvelope, mil.nga.wkb.geom.CompoundCurve):void type: STATIC \l}"];
Node_12 [shape=record,label="{12\:\ 0x004c|0x004c: CHECK_CAST  (r2 I:mil.nga.wkb.geom.CircularString) = (mil.nga.wkb.geom.CircularString) (r2 I:?[OBJECT, ARRAY]) \l0x004e: INVOKE  \l  (r3 I:mil.nga.wkb.geom.GeometryEnvelope)\l  (r2 I:mil.nga.wkb.geom.LineString)\l mil.nga.wkb.util.GeometryEnvelopeBuilder.addLineString(mil.nga.wkb.geom.GeometryEnvelope, mil.nga.wkb.geom.LineString):void type: STATIC \l}"];
Node_13 [shape=record,label="{13\:\ 0x0052|0x0052: CHECK_CAST  (r2 I:mil.nga.wkb.geom.MultiPolygon) = (mil.nga.wkb.geom.MultiPolygon) (r2 I:?[OBJECT, ARRAY]) \l0x0054: INVOKE  \l  (r3 I:mil.nga.wkb.geom.GeometryEnvelope)\l  (r2 I:mil.nga.wkb.geom.MultiPolygon)\l mil.nga.wkb.util.GeometryEnvelopeBuilder.addMultiPolygon(mil.nga.wkb.geom.GeometryEnvelope, mil.nga.wkb.geom.MultiPolygon):void type: STATIC \l}"];
Node_14 [shape=record,label="{14\:\ 0x0058|0x0058: CHECK_CAST  (r2 I:mil.nga.wkb.geom.MultiLineString) = (mil.nga.wkb.geom.MultiLineString) (r2 I:?[OBJECT, ARRAY]) \l0x005a: INVOKE  \l  (r3 I:mil.nga.wkb.geom.GeometryEnvelope)\l  (r2 I:mil.nga.wkb.geom.MultiLineString)\l mil.nga.wkb.util.GeometryEnvelopeBuilder.addMultiLineString(mil.nga.wkb.geom.GeometryEnvelope, mil.nga.wkb.geom.MultiLineString):void type: STATIC \l}"];
Node_15 [shape=record,label="{15\:\ 0x005e|0x005e: CHECK_CAST  (r2 I:mil.nga.wkb.geom.MultiPoint) = (mil.nga.wkb.geom.MultiPoint) (r2 I:?[OBJECT, ARRAY]) \l0x0060: INVOKE  \l  (r3 I:mil.nga.wkb.geom.GeometryEnvelope)\l  (r2 I:mil.nga.wkb.geom.MultiPoint)\l mil.nga.wkb.util.GeometryEnvelopeBuilder.addMultiPoint(mil.nga.wkb.geom.GeometryEnvelope, mil.nga.wkb.geom.MultiPoint):void type: STATIC \l}"];
Node_16 [shape=record,label="{16\:\ 0x0064|0x0064: CHECK_CAST  (r2 I:mil.nga.wkb.geom.Polygon) = (mil.nga.wkb.geom.Polygon) (r2 I:?[OBJECT, ARRAY]) \l0x0066: INVOKE  \l  (r3 I:mil.nga.wkb.geom.GeometryEnvelope)\l  (r2 I:mil.nga.wkb.geom.Polygon)\l mil.nga.wkb.util.GeometryEnvelopeBuilder.addPolygon(mil.nga.wkb.geom.GeometryEnvelope, mil.nga.wkb.geom.Polygon):void type: STATIC \l}"];
Node_17 [shape=record,label="{17\:\ 0x006a|0x006a: CHECK_CAST  (r2 I:mil.nga.wkb.geom.LineString) = (mil.nga.wkb.geom.LineString) (r2 I:?[OBJECT, ARRAY]) \l0x006c: INVOKE  \l  (r3 I:mil.nga.wkb.geom.GeometryEnvelope)\l  (r2 I:mil.nga.wkb.geom.LineString)\l mil.nga.wkb.util.GeometryEnvelopeBuilder.addLineString(mil.nga.wkb.geom.GeometryEnvelope, mil.nga.wkb.geom.LineString):void type: STATIC \l}"];
Node_18 [shape=record,label="{18\:\ 0x0070|0x0070: CHECK_CAST  (r2 I:mil.nga.wkb.geom.Point) = (mil.nga.wkb.geom.Point) (r2 I:?[OBJECT, ARRAY]) \l0x0072: INVOKE  \l  (r3 I:mil.nga.wkb.geom.GeometryEnvelope)\l  (r2 I:mil.nga.wkb.geom.Point)\l mil.nga.wkb.util.GeometryEnvelopeBuilder.addPoint(mil.nga.wkb.geom.GeometryEnvelope, mil.nga.wkb.geom.Point):void type: STATIC \l}"];
Node_19 [shape=record,label="{19\:\ 0x0075|0x0075: RETURN   \l}"];
MethodNode[shape=record,label="{public static void mil.nga.wkb.util.GeometryEnvelopeBuilder.buildEnvelope((r2 I:mil.nga.wkb.geom.Geometry A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:mil.nga.wkb.geom.GeometryEnvelope A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_3;
Node_1 -> Node_7;
Node_1 -> Node_8;
Node_1 -> Node_9;
Node_1 -> Node_10;
Node_1 -> Node_11;
Node_1 -> Node_12;
Node_1 -> Node_13;
Node_1 -> Node_14;
Node_1 -> Node_15;
Node_1 -> Node_16;
Node_1 -> Node_17;
Node_1 -> Node_18;
Node_1 -> Node_19;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_19;
Node_6 -> Node_4;
Node_7 -> Node_19;
Node_8 -> Node_19;
Node_9 -> Node_19;
Node_10 -> Node_19;
Node_11 -> Node_19;
Node_12 -> Node_19;
Node_13 -> Node_19;
Node_14 -> Node_19;
Node_15 -> Node_19;
Node_16 -> Node_19;
Node_17 -> Node_19;
Node_18 -> Node_19;
}

