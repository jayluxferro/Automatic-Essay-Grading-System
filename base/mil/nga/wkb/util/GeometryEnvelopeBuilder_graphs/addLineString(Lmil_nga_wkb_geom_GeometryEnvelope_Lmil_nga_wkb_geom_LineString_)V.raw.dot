digraph "CFG formil.nga.wkb.util.GeometryEnvelopeBuilder.addLineString(Lmil\/nga\/wkb\/geom\/GeometryEnvelope;Lmil\/nga\/wkb\/geom\/LineString;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  \l  (r1 I:mil.nga.wkb.geom.GeometryEnvelope)\l  (r2 I:mil.nga.wkb.geom.Geometry)\l mil.nga.wkb.util.GeometryEnvelopeBuilder.updateHasZandM(mil.nga.wkb.geom.GeometryEnvelope, mil.nga.wkb.geom.Geometry):void type: STATIC \l0x0003: INVOKE  (r2 I:java.util.List) = (r2 I:mil.nga.wkb.geom.LineString) mil.nga.wkb.geom.LineString.getPoints():java.util.List type: VIRTUAL \l0x0007: INVOKE  (r2 I:java.util.Iterator) = (r2 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: INVOKE  (r0 I:boolean) = (r2 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x000f|0x000f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x001b \l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|0x0011: INVOKE  (r0 I:java.lang.Object) = (r2 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0015: CHECK_CAST  (r0 I:mil.nga.wkb.geom.Point) = (mil.nga.wkb.geom.Point) (r0 I:?[OBJECT, ARRAY]) \l0x0017: INVOKE  \l  (r1 I:mil.nga.wkb.geom.GeometryEnvelope)\l  (r0 I:mil.nga.wkb.geom.Point)\l mil.nga.wkb.util.GeometryEnvelopeBuilder.addPoint(mil.nga.wkb.geom.GeometryEnvelope, mil.nga.wkb.geom.Point):void type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x001b|0x001b: RETURN   \l}"];
MethodNode[shape=record,label="{private static void mil.nga.wkb.util.GeometryEnvelopeBuilder.addLineString((r1 I:mil.nga.wkb.geom.GeometryEnvelope A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:mil.nga.wkb.geom.LineString A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
}

