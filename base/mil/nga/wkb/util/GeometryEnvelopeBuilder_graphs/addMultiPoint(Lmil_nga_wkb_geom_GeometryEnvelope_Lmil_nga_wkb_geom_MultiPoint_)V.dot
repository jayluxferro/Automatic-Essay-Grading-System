digraph "CFG formil.nga.wkb.util.GeometryEnvelopeBuilder.addMultiPoint(Lmil\/nga\/wkb\/geom\/GeometryEnvelope;Lmil\/nga\/wkb\/geom\/MultiPoint;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|updateHasZandM(r1, r2)\ljava.util.Iterator r2 = r2.getPoints().iterator()\l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|LOOP_START\lLOOP:0: B:1:0x000b\-\>B:3:0x0011\l}"];
Node_2 [shape=record,label="{2\:\ 0x000f|if (r2.hasNext() == false) goto L_0x001b\l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|LOOP_END\lLOOP:0: B:1:0x000b\-\>B:3:0x0011\l|addPoint(r1, r2.next())\l}"];
Node_4 [shape=record,label="{4\:\ 0x001b|RETURN\l|return\l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private static void mil.nga.wkb.util.GeometryEnvelopeBuilder.addMultiPoint((r1v0 mil.nga.wkb.geom.GeometryEnvelope A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 mil.nga.wkb.geom.MultiPoint A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_5;
Node_3 -> Node_1;
Node_5 -> Node_4;
}

