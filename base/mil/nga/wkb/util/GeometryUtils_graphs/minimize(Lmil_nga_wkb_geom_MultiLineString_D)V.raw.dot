digraph "CFG formil.nga.wkb.util.GeometryUtils.minimize(Lmil\/nga\/wkb\/geom\/MultiLineString;D)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:java.util.List) = (r1 I:mil.nga.wkb.geom.MultiLineString) mil.nga.wkb.geom.MultiLineString.getLineStrings():java.util.List type: VIRTUAL \l0x0004: INVOKE  (r1 I:java.util.Iterator) = (r1 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: INVOKE  (r0 I:boolean) = (r1 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0018 \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: INVOKE  (r0 I:java.lang.Object) = (r1 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0012: CHECK_CAST  (r0 I:mil.nga.wkb.geom.LineString) = (mil.nga.wkb.geom.LineString) (r0 I:?[OBJECT, ARRAY]) \l0x0014: INVOKE  (r0 I:mil.nga.wkb.geom.LineString), (r2 I:double) mil.nga.wkb.util.GeometryUtils.minimize(mil.nga.wkb.geom.LineString, double):void type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|0x0018: RETURN   \l}"];
MethodNode[shape=record,label="{private static void mil.nga.wkb.util.GeometryUtils.minimize((r1 I:mil.nga.wkb.geom.MultiLineString A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
}

