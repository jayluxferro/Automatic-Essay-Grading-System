digraph "CFG formil.nga.wkb.util.GeometryUtils.pointInPolygon(Lmil\/nga\/wkb\/geom\/Point;Lmil\/nga\/wkb\/geom\/Polygon;D)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.List r5 = r5.getRings()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|if (r5.isEmpty() != false) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|boolean r0 = pointInPolygon(r4, (mil.nga.wkb.geom.LineString) r5.get(0), r6)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|if (r0 == false) goto L_0x002e\l}"];
Node_4 [shape=record,label="{4\:\ 0x0017|r2 = 1\l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|LOOP_START\lPHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:4:0x0017, B:9:0x002b] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:5:0x0018\-\>B:9:0x002b\l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|if (r2 \>= r5.size()) goto L_0x002e\l}"];
Node_7 [shape=record,label="{7\:\ 0x001e}"];
Node_8 [shape=record,label="{8\:\ 0x0028|if (pointInPolygon(r4, (mil.nga.wkb.geom.LineString) r5.get(r2), r6) == false) goto L_0x002b\l}"];
Node_9 [shape=record,label="{9\:\ 0x002b|LOOP_END\lLOOP:0: B:5:0x0018\-\>B:9:0x002b\l|int r2 = r2 + 1\l}"];
Node_10 [shape=record,label="{10\:\ 0x002e}"];
Node_11 [shape=record,label="{11\:\ 0x002f|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ 0x002e|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return r0\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
MethodNode[shape=record,label="{public static boolean mil.nga.wkb.util.GeometryUtils.pointInPolygon((r4v0 mil.nga.wkb.geom.Point A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 mil.nga.wkb.geom.Polygon A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_14;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_10;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_12;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_11[style=dashed];
Node_9 -> Node_5;
Node_10 -> Node_13;
Node_11 -> Node_15;
Node_12 -> Node_10;
}

