digraph "CFG formil.nga.wkb.util.GeometryUtils.getDimension(Lmil\/nga\/wkb\/geom\/Geometry;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|mil.nga.wkb.geom.GeometryType r0 = r3.getGeometryType()\l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|switch(r0) \{\l    case mil.nga.wkb.geom.GeometryType.POINT :mil.nga.wkb.geom.GeometryType: goto L_0x004a;\l    case mil.nga.wkb.geom.GeometryType.MULTIPOINT :mil.nga.wkb.geom.GeometryType: goto L_0x004a;\l    case mil.nga.wkb.geom.GeometryType.LINESTRING :mil.nga.wkb.geom.GeometryType: goto L_0x0048;\l    case mil.nga.wkb.geom.GeometryType.MULTILINESTRING :mil.nga.wkb.geom.GeometryType: goto L_0x0048;\l    case mil.nga.wkb.geom.GeometryType.CIRCULARSTRING :mil.nga.wkb.geom.GeometryType: goto L_0x0048;\l    case mil.nga.wkb.geom.GeometryType.COMPOUNDCURVE :mil.nga.wkb.geom.GeometryType: goto L_0x0048;\l    case mil.nga.wkb.geom.GeometryType.POLYGON :mil.nga.wkb.geom.GeometryType: goto L_0x0046;\l    case mil.nga.wkb.geom.GeometryType.CURVEPOLYGON :mil.nga.wkb.geom.GeometryType: goto L_0x0046;\l    case mil.nga.wkb.geom.GeometryType.MULTIPOLYGON :mil.nga.wkb.geom.GeometryType: goto L_0x0046;\l    case mil.nga.wkb.geom.GeometryType.POLYHEDRALSURFACE :mil.nga.wkb.geom.GeometryType: goto L_0x0046;\l    case mil.nga.wkb.geom.GeometryType.TIN :mil.nga.wkb.geom.GeometryType: goto L_0x0046;\l    case mil.nga.wkb.geom.GeometryType.TRIANGLE :mil.nga.wkb.geom.GeometryType: goto L_0x0046;\l    case mil.nga.wkb.geom.GeometryType.GEOMETRYCOLLECTION :mil.nga.wkb.geom.GeometryType: goto L_0x0026;\l    default: goto L_0x000f;\l\}\l}"];
Node_2 [shape=record,label="{2\:\ 0x000f|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Unsupported Geometry Type: \")\lr1.append(r0)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0025|throw new mil.nga.wkb.util.WkbException(r1.toString())\l}"];
Node_4 [shape=record,label="{4\:\ 0x0026|java.util.Iterator r3 = ((mil.nga.wkb.geom.GeometryCollection) r3).getGeometries().iterator()\lr0 = \-1\l}"];
Node_5 [shape=record,label="{5\:\ 0x0031|LOOP_START\lPHI: r0 \l  PHI: (r0v5 int) = (r0v4 int), (r0v6 int) binds: [B:4:0x0026, B:7:0x0037] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:5:0x0031\-\>B:7:0x0037\l}"];
Node_6 [shape=record,label="{6\:\ 0x0035|if (r3.hasNext() == false) goto L_0x004b\l}"];
Node_7 [shape=record,label="{7\:\ 0x0037|LOOP_END\lLOOP:0: B:5:0x0031\-\>B:7:0x0037\l|int r0 = java.lang.Math.max(r0, getDimension((mil.nga.wkb.geom.Geometry) r3.next()))\l}"];
Node_8 [shape=record,label="{8\:\ 0x0046|SYNTHETIC\lRETURN\l|return 2\l}"];
Node_9 [shape=record,label="{9\:\ 0x0048|SYNTHETIC\lRETURN\l|return 1\l}"];
Node_10 [shape=record,label="{10\:\ 0x004a|SYNTHETIC\lRETURN\lORIG_RETURN\l|return 0\l}"];
Node_11 [shape=record,label="{11\:\ 0x004b|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\l|return r0\l}"];
MethodNode[shape=record,label="{public static int mil.nga.wkb.util.GeometryUtils.getDimension((r3v0 mil.nga.wkb.geom.Geometry A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_1 -> Node_8;
Node_1 -> Node_9;
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_11;
Node_7 -> Node_5;
Node_11 -> Node_12;
}

