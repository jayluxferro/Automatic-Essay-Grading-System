digraph "CFG formil.nga.wkb.util.GeometryUtils.minimize(Lmil\/nga\/wkb\/geom\/LineString;D)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r11 I:java.util.List) = (r11 I:mil.nga.wkb.geom.LineString) mil.nga.wkb.geom.LineString.getPoints():java.util.List type: VIRTUAL \l0x0004: INVOKE  (r0 I:int) = (r11 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x0008: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: IF  (r0 I:?[int, byte, short, char]) \<= (r1 I:?[int, byte, short, char])  \-\> B:16:0x007e \l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|0x000b: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000c: INVOKE  (r0 I:java.lang.Object) = (r11 I:java.util.List), (r0 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0010: CHECK_CAST  (r0 I:mil.nga.wkb.geom.Point) = (mil.nga.wkb.geom.Point) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|0x0012: INVOKE  (r2 I:int) = (r11 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|0x0016: IF  (r1 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:16:0x007e \l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|0x0018: INVOKE  (r2 I:java.lang.Object) = (r11 I:java.util.List), (r1 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x001c: CHECK_CAST  (r2 I:mil.nga.wkb.geom.Point) = (mil.nga.wkb.geom.Point) (r2 I:?[OBJECT, ARRAY]) \l0x001e: INVOKE  (r3 I:double) = (r0 I:mil.nga.wkb.geom.Point) mil.nga.wkb.geom.Point.getX():double type: VIRTUAL \l0x0022: INVOKE  (r5 I:double) = (r2 I:mil.nga.wkb.geom.Point) mil.nga.wkb.geom.Point.getX():double type: VIRTUAL \l0x0026: CONST  (r7 I:?[long, double]) = \l  (4611686018427387904(0x4000000000000000, double:2.0) ?[long, double])\l \l0x0028: CMP_G  (r3 I:int) = (r3 I:double), (r5 I:double) \l}"];
Node_6 [shape=record,label="{6\:\ 0x002a|0x002a: IF  (r3 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:10:0x004e \l}"];
Node_7 [shape=record,label="{7\:\ 0x002c|0x002c: INVOKE  (r3 I:double) = (r2 I:mil.nga.wkb.geom.Point) mil.nga.wkb.geom.Point.getX():double type: VIRTUAL \l0x0030: INVOKE  (r5 I:double) = (r0 I:mil.nga.wkb.geom.Point) mil.nga.wkb.geom.Point.getX():double type: VIRTUAL \l0x0034: ARITH  (r3 I:double) = (r3 I:double) \- (r5 I:double) \l0x0035: INVOKE  (r5 I:double) = (r0 I:mil.nga.wkb.geom.Point) mil.nga.wkb.geom.Point.getX():double type: VIRTUAL \l0x0039: INVOKE  (r9 I:double) = (r2 I:mil.nga.wkb.geom.Point) mil.nga.wkb.geom.Point.getX():double type: VIRTUAL \l0x003d: ARITH  (r5 I:double) = (r5 I:double) \- (r9 I:double) \l0x003e: ARITH  (r7 I:double) = (r7 I:double) * (r12 I:double) \l0x0040: ARITH  (r5 I:double) = (r5 I:double) + (r7 I:double) \l0x0041: CMP_L  (r3 I:int) = (r3 I:double), (r5 I:double) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0043|0x0043: IF  (r3 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:15:0x007b \l}"];
Node_9 [shape=record,label="{9\:\ 0x0045|0x0045: INVOKE  (r3 I:double) = (r2 I:mil.nga.wkb.geom.Point) mil.nga.wkb.geom.Point.getX():double type: VIRTUAL \l0x0049: ARITH  (r3 I:double) = (r3 I:double) \- (r7 I:double) \l0x004a: INVOKE  (r2 I:mil.nga.wkb.geom.Point), (r3 I:double) mil.nga.wkb.geom.Point.setX(double):void type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x004e|0x004e: INVOKE  (r3 I:double) = (r0 I:mil.nga.wkb.geom.Point) mil.nga.wkb.geom.Point.getX():double type: VIRTUAL \l0x0052: INVOKE  (r5 I:double) = (r2 I:mil.nga.wkb.geom.Point) mil.nga.wkb.geom.Point.getX():double type: VIRTUAL \l0x0056: CMP_L  (r3 I:int) = (r3 I:double), (r5 I:double) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0058|0x0058: IF  (r3 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:15:0x007b \l}"];
Node_12 [shape=record,label="{12\:\ 0x005a|0x005a: INVOKE  (r3 I:double) = (r0 I:mil.nga.wkb.geom.Point) mil.nga.wkb.geom.Point.getX():double type: VIRTUAL \l0x005e: INVOKE  (r5 I:double) = (r2 I:mil.nga.wkb.geom.Point) mil.nga.wkb.geom.Point.getX():double type: VIRTUAL \l0x0062: ARITH  (r3 I:double) = (r3 I:double) \- (r5 I:double) \l0x0063: INVOKE  (r5 I:double) = (r2 I:mil.nga.wkb.geom.Point) mil.nga.wkb.geom.Point.getX():double type: VIRTUAL \l0x0067: INVOKE  (r9 I:double) = (r0 I:mil.nga.wkb.geom.Point) mil.nga.wkb.geom.Point.getX():double type: VIRTUAL \l0x006b: ARITH  (r5 I:double) = (r5 I:double) \- (r9 I:double) \l0x006c: ARITH  (r7 I:double) = (r7 I:double) * (r12 I:double) \l0x006e: ARITH  (r5 I:double) = (r5 I:double) + (r7 I:double) \l0x006f: CMP_L  (r3 I:int) = (r3 I:double), (r5 I:double) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0071|0x0071: IF  (r3 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:15:0x007b \l}"];
Node_14 [shape=record,label="{14\:\ 0x0073|0x0073: INVOKE  (r3 I:double) = (r2 I:mil.nga.wkb.geom.Point) mil.nga.wkb.geom.Point.getX():double type: VIRTUAL \l0x0077: ARITH  (r3 I:double) = (r3 I:double) + (r7 I:double) \l0x0078: INVOKE  (r2 I:mil.nga.wkb.geom.Point), (r3 I:double) mil.nga.wkb.geom.Point.setX(double):void type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x007b|0x007b: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_16 [shape=record,label="{16\:\ 0x007e|0x007e: RETURN   \l}"];
MethodNode[shape=record,label="{private static void mil.nga.wkb.util.GeometryUtils.minimize((r11 I:mil.nga.wkb.geom.LineString A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_16;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_16;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_15;
Node_9 -> Node_15;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_15;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_3;
}

