digraph "CFG formil.nga.wkb.util.GeometryUtils.simplifyPoints(Ljava\/util\/List;DII)Ljava\/util\/List;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:java.lang.Object) = (r10 I:java.util.List), (r13 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0004: CHECK_CAST  (r0 I:mil.nga.wkb.geom.Point) = (mil.nga.wkb.geom.Point) (r0 I:?[OBJECT, ARRAY]) \l0x0006: INVOKE  (r1 I:java.lang.Object) = (r10 I:java.util.List), (r14 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x000a: CHECK_CAST  (r1 I:mil.nga.wkb.geom.Point) = (mil.nga.wkb.geom.Point) (r1 I:?[OBJECT, ARRAY]) \l0x000c: ARITH  (r2 I:int) = (r13 I:int) + (1 int) \l0x000e: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000f: CONST  (r4 I:?[long, double]) = (0 ?[long, double]) \l0x0011: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0012|0x0012: IF  (r2 I:?[int, byte, short, char]) \>= (r14 I:?[int, byte, short, char])  \-\> B:6:0x0027 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0014|0x0014: INVOKE  (r7 I:java.lang.Object) = (r10 I:java.util.List), (r2 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0018: CHECK_CAST  (r7 I:mil.nga.wkb.geom.Point) = (mil.nga.wkb.geom.Point) (r7 I:?[OBJECT, ARRAY]) \l0x001a: INVOKE  (r7 I:double) = \l  (r7 I:mil.nga.wkb.geom.Point)\l  (r0 I:mil.nga.wkb.geom.Point)\l  (r1 I:mil.nga.wkb.geom.Point)\l mil.nga.wkb.util.GeometryUtils.perpendicularDistance(mil.nga.wkb.geom.Point, mil.nga.wkb.geom.Point, mil.nga.wkb.geom.Point):double type: STATIC \l0x001e: CMP_L  (r9 I:int) = (r7 I:double), (r4 I:double) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0020|0x0020: IF  (r9 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:5:0x0024 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0022|0x0022: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0023: MOVE  (r4 I:?[long, double]) = (r7 I:?[long, double]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0024|0x0024: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0027|0x0027: CMP_L  (r2 I:int) = (r4 I:double), (r11 I:double) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0029|0x0029: IF  (r2 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:9:0x0041 \l}"];
Node_8 [shape=record,label="{8\:\ 0x002b|0x002b: INVOKE  (r13 I:java.util.List) = \l  (r10 I:java.util.List)\l  (r11 I:double)\l  (r13 I:int)\l  (r6 I:int)\l mil.nga.wkb.util.GeometryUtils.simplifyPoints(java.util.List, double, int, int):java.util.List type: STATIC \l0x002f: INVOKE  (r10 I:java.util.List) = \l  (r10 I:java.util.List)\l  (r11 I:double)\l  (r6 I:int)\l  (r14 I:int)\l mil.nga.wkb.util.GeometryUtils.simplifyPoints(java.util.List, double, int, int):java.util.List type: STATIC \l0x0033: INVOKE  (r11 I:int) = (r13 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x0037: ARITH  (r11 I:int) = (r11 I:int) + (\-1 int) \l0x0039: INVOKE  (r11 I:java.util.List) = (r13 I:java.util.List), (r3 I:int), (r11 I:int) java.util.List.subList(int, int):java.util.List type: INTERFACE \l0x003d: INVOKE  (r11 I:java.util.List), (r10 I:java.util.Collection) java.util.List.addAll(java.util.Collection):boolean type: INTERFACE \l}"];
Node_9 [shape=record,label="{9\:\ 0x0041|0x0041: NEW_INSTANCE  (r11 I:java.util.ArrayList) =  java.util.ArrayList \l0x0043: INVOKE  (r11 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x0046: INVOKE  (r11 I:java.util.List), (r0 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x0049: INVOKE  (r11 I:java.util.List), (r1 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_10 [shape=record,label="{10\:\ 0x004c|0x004c: RETURN  (r11 I:java.util.List\<mil.nga.wkb.geom.Point\>) \l}"];
MethodNode[shape=record,label="{private static java.util.List\<mil.nga.wkb.geom.Point\> mil.nga.wkb.util.GeometryUtils.simplifyPoints((r10 I:java.util.List\<mil.nga.wkb.geom.Point\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/List\<, Lmil\/nga\/wkb\/geom\/Point;, \>;DII), Ljava\/util\/List\<, Lmil\/nga\/wkb\/geom\/Point;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_10;
Node_9 -> Node_10;
}

