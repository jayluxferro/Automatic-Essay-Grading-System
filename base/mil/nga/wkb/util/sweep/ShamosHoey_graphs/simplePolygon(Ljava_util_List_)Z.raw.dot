digraph "CFG formil.nga.wkb.util.sweep.ShamosHoey.simplePolygon(Ljava\/util\/List;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:boolean) = (r13 I:java.util.List) java.util.List.isEmpty():boolean type: INTERFACE \l0x0004: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0005: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) ^ (r1 I:?[int, boolean, short, byte, char]) \l0x0006: NEW_INSTANCE  (r2 I:java.util.ArrayList) =  java.util.ArrayList \l0x0008: INVOKE  (r2 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x000b: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000c: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000d: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|0x000e: INVOKE  (r5 I:int) = (r13 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x0012|0x0012: IF  (r0 I:?[int, byte, short, char]) \>= (r5 I:?[int, byte, short, char])  \-\> B:29:0x00b2 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|0x0014: INVOKE  (r5 I:java.lang.Object) = (r13 I:java.util.List), (r0 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0018: CHECK_CAST  (r5 I:mil.nga.wkb.geom.LineString) = (mil.nga.wkb.geom.LineString) (r5 I:?[OBJECT, ARRAY]) \l0x001a: NEW_INSTANCE  (r6 I:mil.nga.wkb.geom.LineString) =  mil.nga.wkb.geom.LineString \l0x001c: INVOKE  (r6 I:mil.nga.wkb.geom.LineString) mil.nga.wkb.geom.LineString.\<init\>():void type: DIRECT \l0x001f: NEW_INSTANCE  (r7 I:java.util.ArrayList) =  java.util.ArrayList \l0x0021: INVOKE  (r5 I:java.util.List) = (r5 I:mil.nga.wkb.geom.LineString) mil.nga.wkb.geom.LineString.getPoints():java.util.List type: VIRTUAL \l0x0025: INVOKE  (r7 I:java.util.ArrayList), (r5 I:java.util.Collection) java.util.ArrayList.\<init\>(java.util.Collection):void type: DIRECT \l0x0028: INVOKE  (r6 I:mil.nga.wkb.geom.LineString), (r7 I:java.util.List) mil.nga.wkb.geom.LineString.setPoints(java.util.List):void type: VIRTUAL \l0x002b: INVOKE  (r2 I:java.util.List), (r6 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x002e: INVOKE  (r5 I:java.util.List) = (r6 I:mil.nga.wkb.geom.LineString) mil.nga.wkb.geom.LineString.getPoints():java.util.List type: VIRTUAL \l0x0032: INVOKE  (r6 I:int) = (r5 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x0036: CONST  (r7 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0037|0x0037: IF  (r6 I:?[int, byte, short, char]) \< (r7 I:?[int, byte, short, char])  \-\> B:10:0x006a \l}"];
Node_5 [shape=record,label="{5\:\ 0x0039|0x0039: INVOKE  (r6 I:java.lang.Object) = (r5 I:java.util.List), (r3 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x003d: CHECK_CAST  (r6 I:mil.nga.wkb.geom.Point) = (mil.nga.wkb.geom.Point) (r6 I:?[OBJECT, ARRAY]) \l0x003f: INVOKE  (r8 I:int) = (r5 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x0043: ARITH  (r8 I:int) = (r8 I:int) \- (r1 I:int) \l0x0044: INVOKE  (r8 I:java.lang.Object) = (r5 I:java.util.List), (r8 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0048: CHECK_CAST  (r8 I:mil.nga.wkb.geom.Point) = (mil.nga.wkb.geom.Point) (r8 I:?[OBJECT, ARRAY]) \l0x004a: INVOKE  (r9 I:double) = (r6 I:mil.nga.wkb.geom.Point) mil.nga.wkb.geom.Point.getX():double type: VIRTUAL \l0x004e: INVOKE  (r11 I:double) = (r8 I:mil.nga.wkb.geom.Point) mil.nga.wkb.geom.Point.getX():double type: VIRTUAL \l0x0052: CMP_L  (r9 I:int) = (r9 I:double), (r11 I:double) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0054|0x0054: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x006a \l}"];
Node_7 [shape=record,label="{7\:\ 0x0056|0x0056: INVOKE  (r9 I:double) = (r6 I:mil.nga.wkb.geom.Point) mil.nga.wkb.geom.Point.getY():double type: VIRTUAL \l0x005a: INVOKE  (r11 I:double) = (r8 I:mil.nga.wkb.geom.Point) mil.nga.wkb.geom.Point.getY():double type: VIRTUAL \l0x005e: CMP_L  (r6 I:int) = (r9 I:double), (r11 I:double) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0060|0x0060: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x006a \l}"];
Node_9 [shape=record,label="{9\:\ 0x0062|0x0062: INVOKE  (r6 I:int) = (r5 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x0066: ARITH  (r6 I:int) = (r6 I:int) \- (r1 I:int) \l0x0067: INVOKE  (r5 I:java.util.List), (r6 I:int) java.util.List.remove(int):java.lang.Object type: INTERFACE \l}"];
Node_10 [shape=record,label="{10\:\ 0x006a|0x006a: INVOKE  (r6 I:int) = (r5 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_11 [shape=record,label="{11\:\ 0x006e|0x006e: IF  (r6 I:?[int, byte, short, char]) \>= (r7 I:?[int, byte, short, char])  \-\> B:13:0x0072 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0070|0x0070: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x0072|0x0072: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:28:0x00ae \l}"];
Node_14 [shape=record,label="{14\:\ 0x0074|0x0074: INVOKE  (r6 I:java.lang.Object) = (r5 I:java.util.List), (r3 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0078: CHECK_CAST  (r6 I:mil.nga.wkb.geom.Point) = (mil.nga.wkb.geom.Point) (r6 I:?[OBJECT, ARRAY]) \l0x007a: INVOKE  (r7 I:java.lang.Object) = (r13 I:java.util.List), (r3 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x007e: CHECK_CAST  (r7 I:mil.nga.wkb.geom.LineString) = (mil.nga.wkb.geom.LineString) (r7 I:?[OBJECT, ARRAY]) \l0x0080: INVOKE  (r7 I:boolean) = \l  (r6 I:mil.nga.wkb.geom.Point)\l  (r7 I:mil.nga.wkb.geom.LineString)\l mil.nga.wkb.util.GeometryUtils.pointInPolygon(mil.nga.wkb.geom.Point, mil.nga.wkb.geom.LineString):boolean type: STATIC \l}"];
Node_15 [shape=record,label="{15\:\ 0x0084|0x0084: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0087 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0087|0x0087: CONST  (r7 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0088|0x0088: IF  (r7 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:26:0x00ab \l}"];
Node_19 [shape=record,label="{19\:\ 0x008a|0x008a: INVOKE  (r8 I:java.lang.Object) = (r13 I:java.util.List), (r7 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x008e: CHECK_CAST  (r8 I:mil.nga.wkb.geom.LineString) = (mil.nga.wkb.geom.LineString) (r8 I:?[OBJECT, ARRAY]) \l0x0090: INVOKE  (r8 I:java.util.List) = (r8 I:mil.nga.wkb.geom.LineString) mil.nga.wkb.geom.LineString.getPoints():java.util.List type: VIRTUAL \l0x0094: INVOKE  (r9 I:boolean) = (r6 I:mil.nga.wkb.geom.Point), (r8 I:java.util.List) mil.nga.wkb.util.GeometryUtils.pointInPolygon(mil.nga.wkb.geom.Point, java.util.List):boolean type: STATIC \l}"];
Node_20 [shape=record,label="{20\:\ 0x0098|0x0098: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x00aa \l}"];
Node_21 [shape=record,label="{21\:\ 0x009a|0x009a: INVOKE  (r8 I:java.lang.Object) = (r8 I:java.util.List), (r3 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x009e: CHECK_CAST  (r8 I:mil.nga.wkb.geom.Point) = (mil.nga.wkb.geom.Point) (r8 I:?[OBJECT, ARRAY]) \l0x00a0: INVOKE  (r8 I:boolean) = (r8 I:mil.nga.wkb.geom.Point), (r5 I:java.util.List) mil.nga.wkb.util.GeometryUtils.pointInPolygon(mil.nga.wkb.geom.Point, java.util.List):boolean type: STATIC \l}"];
Node_22 [shape=record,label="{22\:\ 0x00a4|0x00a4: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x00a7 \l}"];
Node_24 [shape=record,label="{24\:\ 0x00a7|0x00a7: ARITH  (r7 I:int) = (r7 I:int) + (1 int) \l}"];
Node_25 [shape=record,label="{25\:\ 0x00aa|0x00aa: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_26 [shape=record,label="{26\:\ 0x00ab|0x00ab: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x00ae \l}"];
Node_28 [shape=record,label="{28\:\ 0x00ae|0x00ae: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l}"];
Node_29 [shape=record,label="{29\:\ 0x00b2|0x00b2: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x0106 \l}"];
Node_30 [shape=record,label="{30\:\ 0x00b4|0x00b4: NEW_INSTANCE  (r13 I:mil.nga.wkb.util.sweep.EventQueue) =  mil.nga.wkb.util.sweep.EventQueue \l0x00b6: INVOKE  \l  (r13 I:mil.nga.wkb.util.sweep.EventQueue)\l  (r2 I:java.util.List)\l mil.nga.wkb.util.sweep.EventQueue.\<init\>(java.util.List):void type: DIRECT \l0x00b9: NEW_INSTANCE  (r0 I:mil.nga.wkb.util.sweep.SweepLine) =  mil.nga.wkb.util.sweep.SweepLine \l0x00bb: INVOKE  \l  (r0 I:mil.nga.wkb.util.sweep.SweepLine)\l  (r2 I:java.util.List)\l mil.nga.wkb.util.sweep.SweepLine.\<init\>(java.util.List):void type: DIRECT \l0x00be: INVOKE  (r13 I:java.util.Iterator) = (r13 I:mil.nga.wkb.util.sweep.EventQueue) mil.nga.wkb.util.sweep.EventQueue.iterator():java.util.Iterator type: VIRTUAL \l}"];
Node_31 [shape=record,label="{31\:\ 0x00c2|0x00c2: INVOKE  (r1 I:boolean) = (r13 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_32 [shape=record,label="{32\:\ 0x00c6|0x00c6: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x0106 \l}"];
Node_33 [shape=record,label="{33\:\ 0x00c8|0x00c8: INVOKE  (r1 I:java.lang.Object) = (r13 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x00cc: CHECK_CAST  (r1 I:mil.nga.wkb.util.sweep.Event) = (mil.nga.wkb.util.sweep.Event) (r1 I:?[OBJECT, ARRAY]) \l0x00ce: INVOKE  (r2 I:mil.nga.wkb.util.sweep.EventType) = (r1 I:mil.nga.wkb.util.sweep.Event) mil.nga.wkb.util.sweep.Event.getType():mil.nga.wkb.util.sweep.EventType type: VIRTUAL \l0x00d2: SGET  (r5 I:mil.nga.wkb.util.sweep.EventType) =  mil.nga.wkb.util.sweep.EventType.LEFT mil.nga.wkb.util.sweep.EventType \l}"];
Node_34 [shape=record,label="{34\:\ 0x00d4|0x00d4: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x00ef \l}"];
Node_35 [shape=record,label="{35\:\ 0x00d6|0x00d6: INVOKE  (r1 I:mil.nga.wkb.util.sweep.Segment) = \l  (r0 I:mil.nga.wkb.util.sweep.SweepLine)\l  (r1 I:mil.nga.wkb.util.sweep.Event)\l mil.nga.wkb.util.sweep.SweepLine.add(mil.nga.wkb.util.sweep.Event):mil.nga.wkb.util.sweep.Segment type: VIRTUAL \l0x00da: INVOKE  (r2 I:mil.nga.wkb.util.sweep.Segment) = (r1 I:mil.nga.wkb.util.sweep.Segment) mil.nga.wkb.util.sweep.Segment.getAbove():mil.nga.wkb.util.sweep.Segment type: VIRTUAL \l0x00de: INVOKE  (r2 I:boolean) = \l  (r0 I:mil.nga.wkb.util.sweep.SweepLine)\l  (r1 I:mil.nga.wkb.util.sweep.Segment)\l  (r2 I:mil.nga.wkb.util.sweep.Segment)\l mil.nga.wkb.util.sweep.SweepLine.intersect(mil.nga.wkb.util.sweep.Segment, mil.nga.wkb.util.sweep.Segment):boolean type: VIRTUAL \l}"];
Node_36 [shape=record,label="{36\:\ 0x00e2|0x00e2: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:45:0x0107 \l}"];
Node_37 [shape=record,label="{37\:\ 0x00e4|0x00e4: INVOKE  (r2 I:mil.nga.wkb.util.sweep.Segment) = (r1 I:mil.nga.wkb.util.sweep.Segment) mil.nga.wkb.util.sweep.Segment.getBelow():mil.nga.wkb.util.sweep.Segment type: VIRTUAL \l0x00e8: INVOKE  (r1 I:boolean) = \l  (r0 I:mil.nga.wkb.util.sweep.SweepLine)\l  (r1 I:mil.nga.wkb.util.sweep.Segment)\l  (r2 I:mil.nga.wkb.util.sweep.Segment)\l mil.nga.wkb.util.sweep.SweepLine.intersect(mil.nga.wkb.util.sweep.Segment, mil.nga.wkb.util.sweep.Segment):boolean type: VIRTUAL \l}"];
Node_38 [shape=record,label="{38\:\ 0x00ec|0x00ec: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x00c2 \l}"];
Node_40 [shape=record,label="{40\:\ 0x00ef|0x00ef: INVOKE  (r1 I:mil.nga.wkb.util.sweep.Segment) = \l  (r0 I:mil.nga.wkb.util.sweep.SweepLine)\l  (r1 I:mil.nga.wkb.util.sweep.Event)\l mil.nga.wkb.util.sweep.SweepLine.find(mil.nga.wkb.util.sweep.Event):mil.nga.wkb.util.sweep.Segment type: VIRTUAL \l0x00f3: INVOKE  (r2 I:mil.nga.wkb.util.sweep.Segment) = (r1 I:mil.nga.wkb.util.sweep.Segment) mil.nga.wkb.util.sweep.Segment.getAbove():mil.nga.wkb.util.sweep.Segment type: VIRTUAL \l0x00f7: INVOKE  (r5 I:mil.nga.wkb.util.sweep.Segment) = (r1 I:mil.nga.wkb.util.sweep.Segment) mil.nga.wkb.util.sweep.Segment.getBelow():mil.nga.wkb.util.sweep.Segment type: VIRTUAL \l0x00fb: INVOKE  (r2 I:boolean) = \l  (r0 I:mil.nga.wkb.util.sweep.SweepLine)\l  (r2 I:mil.nga.wkb.util.sweep.Segment)\l  (r5 I:mil.nga.wkb.util.sweep.Segment)\l mil.nga.wkb.util.sweep.SweepLine.intersect(mil.nga.wkb.util.sweep.Segment, mil.nga.wkb.util.sweep.Segment):boolean type: VIRTUAL \l}"];
Node_41 [shape=record,label="{41\:\ 0x00ff|0x00ff: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:43:0x0102 \l}"];
Node_43 [shape=record,label="{43\:\ 0x0102|0x0102: INVOKE  \l  (r0 I:mil.nga.wkb.util.sweep.SweepLine)\l  (r1 I:mil.nga.wkb.util.sweep.Segment)\l mil.nga.wkb.util.sweep.SweepLine.remove(mil.nga.wkb.util.sweep.Segment):void type: VIRTUAL \l}"];
Node_44 [shape=record,label="{44\:\ 0x0106|0x0106: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_45 [shape=record,label="{45\:\ 0x0107|0x0107: RETURN  (r3 I:boolean) \l}"];
MethodNode[shape=record,label="{public static boolean mil.nga.wkb.util.sweep.ShamosHoey.simplePolygon((r13 I:java.util.List\<mil.nga.wkb.geom.LineString\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/List\<, Lmil\/nga\/wkb\/geom\/LineString;, \>;)Z]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_29;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_10;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_29;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_28;
Node_14 -> Node_15;
Node_15 -> Node_17;
Node_15 -> Node_12[style=dashed];
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_26;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_25;
Node_21 -> Node_22;
Node_22 -> Node_24;
Node_22 -> Node_25[style=dashed];
Node_24 -> Node_18;
Node_25 -> Node_26;
Node_26 -> Node_28;
Node_26 -> Node_29[style=dashed];
Node_28 -> Node_1;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_44;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_44;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_40;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_45;
Node_37 -> Node_38;
Node_38 -> Node_31;
Node_38 -> Node_45[style=dashed];
Node_40 -> Node_41;
Node_41 -> Node_43;
Node_41 -> Node_45[style=dashed];
Node_43 -> Node_31;
Node_44 -> Node_45;
}

