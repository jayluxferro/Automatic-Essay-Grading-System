digraph "CFG formil.nga.wkb.util.sweep.SweepLine.intersect(Lmil\/nga\/wkb\/util\/sweep\/Segment;Lmil\/nga\/wkb\/util\/sweep\/Segment;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r7 == null) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|if (r8 == null) goto L_?\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|int r2 = r7.getRing()\l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|if (r2 != r8.getRing()) goto L_0x0012\l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|r3 = true\l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|r3 = false\l}"];
Node_7 [shape=record,label="{7\:\ 0x0013|PHI: r3 \l  PHI: (r3v1 boolean) = (r3v6 boolean), (r3v7 boolean) binds: [B:6:0x0012, B:5:0x0010] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 == false) goto L_0x0036\l}"];
Node_8 [shape=record,label="{8\:\ 0x0015|int r3 = r7.getEdge()\lint r4 = r8.getEdge()\lint r2 = r6.rings.get(r2).numPoints()\l}"];
Node_9 [shape=record,label="{9\:\ 0x002c|if (((r3 + 1) % r2) == r4) goto L_0x0035\l}"];
Node_10 [shape=record,label="{10\:\ 0x002e}"];
Node_11 [shape=record,label="{11\:\ 0x0030|if (r3 != ((r4 + 1) % r2)) goto L_0x0033\l}"];
Node_12 [shape=record,label="{12\:\ 0x0033|r3 = false\l}"];
Node_13 [shape=record,label="{13\:\ 0x0035|r3 = true\l}"];
Node_14 [shape=record,label="{14\:\ 0x0036|PHI: r3 \l  PHI: (r3v2 boolean) = (r3v1 boolean), (r3v4 boolean), (r3v5 boolean) binds: [B:7:0x0013, B:13:0x0035, B:12:0x0033] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 != false) goto L_?\l}"];
Node_15 [shape=record,label="{15\:\ 0x0038}"];
Node_16 [shape=record,label="{16\:\ 0x004e|if (((isLeft(r7, r8.getLeftPoint()) * isLeft(r7, r8.getRightPoint())) \> 0.0d ? 1 : ((isLeft(r7, r8.getLeftPoint()) * isLeft(r7, r8.getRightPoint())) == 0.0d ? 0 : \-1)) \> 0) goto L_?\l}"];
Node_17 [shape=record,label="{17\:\ 0x0050}"];
Node_18 [shape=record,label="{18\:\ 0x0064|if (((isLeft(r8, r7.getLeftPoint()) * isLeft(r8, r7.getRightPoint())) \> 0.0d ? 1 : ((isLeft(r8, r7.getLeftPoint()) * isLeft(r8, r7.getRightPoint())) == 0.0d ? 0 : \-1)) \> 0) goto L_?\l}"];
Node_19 [shape=record,label="{19\:\ 0x0066|SYNTHETIC\lRETURN\lORIG_RETURN\l|return true\l}"];
Node_20 [shape=record,label="{20\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
Node_22 [shape=record,label="{22\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
Node_24 [shape=record,label="{24\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
MethodNode[shape=record,label="{public boolean mil.nga.wkb.util.sweep.SweepLine.intersect((r6v0 'this' mil.nga.wkb.util.sweep.SweepLine A[IMMUTABLE_TYPE, THIS]), (r7v0 mil.nga.wkb.util.sweep.Segment A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 mil.nga.wkb.util.sweep.Segment A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_20;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_21;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_14;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_13;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_22;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_23;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_24;
}

