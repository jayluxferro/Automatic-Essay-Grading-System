digraph "CFG formil.nga.wkb.util.GeometryPrinter.addLineStringMessage(Ljava\/lang\/StringBuilder;Lmil\/nga\/wkb\/geom\/LineString;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0002: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0005: CONST_CLASS  (r1 I:java.lang.Class\<mil.nga.wkb.geom.Point\>) =  mil.nga.wkb.geom.Point.class \l0x0007: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.Class) java.lang.Class.getSimpleName():java.lang.String type: VIRTUAL \l0x000b: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x000e: CONST_STR  (r1 I:java.lang.String) =  \"s: \" \l0x0010: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0013: INVOKE  (r1 I:int) = (r3 I:mil.nga.wkb.geom.LineString) mil.nga.wkb.geom.LineString.numPoints():int type: VIRTUAL \l0x0017: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x001a: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x001e: INVOKE  (r2 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0021: INVOKE  (r3 I:java.util.List) = (r3 I:mil.nga.wkb.geom.LineString) mil.nga.wkb.geom.LineString.getPoints():java.util.List type: VIRTUAL \l0x0025: INVOKE  (r3 I:java.util.Iterator) = (r3 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0029|0x0029: INVOKE  (r0 I:boolean) = (r3 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x002d|0x002d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x003e \l}"];
Node_3 [shape=record,label="{3\:\ 0x002f|0x002f: INVOKE  (r0 I:java.lang.Object) = (r3 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0033: CHECK_CAST  (r0 I:mil.nga.wkb.geom.Point) = (mil.nga.wkb.geom.Point) (r0 I:?[OBJECT, ARRAY]) \l0x0035: CONST_STR  (r1 I:java.lang.String) =  \"\l\l\" \l0x0037: INVOKE  (r2 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x003a: INVOKE  \l  (r2 I:java.lang.StringBuilder)\l  (r0 I:mil.nga.wkb.geom.Point)\l mil.nga.wkb.util.GeometryPrinter.addPointMessage(java.lang.StringBuilder, mil.nga.wkb.geom.Point):void type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x003e|0x003e: RETURN   \l}"];
MethodNode[shape=record,label="{private static void mil.nga.wkb.util.GeometryPrinter.addLineStringMessage((r2 I:java.lang.StringBuilder A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:mil.nga.wkb.geom.LineString A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
}

