digraph "CFG formil.nga.wkb.util.GeometryJSONCompatible.1.\<clinit\>()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:mil.nga.wkb.geom.GeometryType[]) =  mil.nga.wkb.geom.GeometryType.values():mil.nga.wkb.geom.GeometryType[] type: STATIC \l0x0004: ARRAY_LENGTH  (r0 I:int) = (r0 I:?[]) \l0x0005: NEW_ARRAY  (r0 I:int[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x0007: SPUT  (r0 I:int[]) mil.nga.wkb.util.GeometryJSONCompatible.1.$SwitchMap$mil$nga$wkb$geom$GeometryType int[] \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|SYNTHETIC\lSplitter:B:1:0x0009\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0009\l|0x0009: SGET  (r0 I:int[]) =  mil.nga.wkb.util.GeometryJSONCompatible.1.$SwitchMap$mil$nga$wkb$geom$GeometryType int[] A[Catch:\{ NoSuchFieldError \-\> 0x0014 \}, TRY_ENTER]\l0x000b: SGET  (r1 I:mil.nga.wkb.geom.GeometryType) =  mil.nga.wkb.geom.GeometryType.POINT mil.nga.wkb.geom.GeometryType A[Catch:\{ NoSuchFieldError \-\> 0x0014 \}]\l0x000d: INVOKE  (r1 I:int) = (r1 I:mil.nga.wkb.geom.GeometryType) mil.nga.wkb.geom.GeometryType.ordinal():int type: VIRTUAL A[Catch:\{ NoSuchFieldError \-\> 0x0014 \}]\l0x0011: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ NoSuchFieldError \-\> 0x0014 \}]\l0x0012: APUT  \l  (r0 I:?[int, float][])\l  (r1 I:?[int, short, byte, char])\l  (r2 I:?[int, float])\l A[Catch:\{ NoSuchFieldError \-\> 0x0014 \}, TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|SYNTHETIC\lSplitter:B:3:0x0014\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x0014\l|0x0014: SGET  (r0 I:int[]) =  mil.nga.wkb.util.GeometryJSONCompatible.1.$SwitchMap$mil$nga$wkb$geom$GeometryType int[] A[Catch:\{ NoSuchFieldError \-\> 0x001f \}, ExcHandler: NoSuchFieldError null, TRY_ENTER]\l0x0016: SGET  (r1 I:mil.nga.wkb.geom.GeometryType) =  mil.nga.wkb.geom.GeometryType.LINESTRING mil.nga.wkb.geom.GeometryType A[Catch:\{ NoSuchFieldError \-\> 0x001f \}]\l0x0018: INVOKE  (r1 I:int) = (r1 I:mil.nga.wkb.geom.GeometryType) mil.nga.wkb.geom.GeometryType.ordinal():int type: VIRTUAL A[Catch:\{ NoSuchFieldError \-\> 0x001f \}]\l0x001c: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) A[Catch:\{ NoSuchFieldError \-\> 0x001f \}]\l0x001d: APUT  \l  (r0 I:?[int, float][])\l  (r1 I:?[int, short, byte, char])\l  (r2 I:?[int, float])\l A[Catch:\{ NoSuchFieldError \-\> 0x001f \}, TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x001f|SYNTHETIC\lSplitter:B:5:0x001f\l}"];
Node_6 [shape=record,label="{6\:\ ?|Splitter:B:5:0x001f\l|0x001f: SGET  (r0 I:int[]) =  mil.nga.wkb.util.GeometryJSONCompatible.1.$SwitchMap$mil$nga$wkb$geom$GeometryType int[] A[Catch:\{ NoSuchFieldError \-\> 0x002a \}, ExcHandler: NoSuchFieldError null, TRY_ENTER]\l0x0021: SGET  (r1 I:mil.nga.wkb.geom.GeometryType) =  mil.nga.wkb.geom.GeometryType.POLYGON mil.nga.wkb.geom.GeometryType A[Catch:\{ NoSuchFieldError \-\> 0x002a \}]\l0x0023: INVOKE  (r1 I:int) = (r1 I:mil.nga.wkb.geom.GeometryType) mil.nga.wkb.geom.GeometryType.ordinal():int type: VIRTUAL A[Catch:\{ NoSuchFieldError \-\> 0x002a \}]\l0x0027: CONST  (r2 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) A[Catch:\{ NoSuchFieldError \-\> 0x002a \}]\l0x0028: APUT  \l  (r0 I:?[int, float][])\l  (r1 I:?[int, short, byte, char])\l  (r2 I:?[int, float])\l A[Catch:\{ NoSuchFieldError \-\> 0x002a \}, TRY_LEAVE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x002a|SYNTHETIC\lSplitter:B:7:0x002a\l}"];
Node_8 [shape=record,label="{8\:\ ?|Splitter:B:7:0x002a\l|0x002a: SGET  (r0 I:int[]) =  mil.nga.wkb.util.GeometryJSONCompatible.1.$SwitchMap$mil$nga$wkb$geom$GeometryType int[] A[Catch:\{ NoSuchFieldError \-\> 0x0035 \}, ExcHandler: NoSuchFieldError null, TRY_ENTER]\l0x002c: SGET  (r1 I:mil.nga.wkb.geom.GeometryType) =  mil.nga.wkb.geom.GeometryType.MULTIPOINT mil.nga.wkb.geom.GeometryType A[Catch:\{ NoSuchFieldError \-\> 0x0035 \}]\l0x002e: INVOKE  (r1 I:int) = (r1 I:mil.nga.wkb.geom.GeometryType) mil.nga.wkb.geom.GeometryType.ordinal():int type: VIRTUAL A[Catch:\{ NoSuchFieldError \-\> 0x0035 \}]\l0x0032: CONST  (r2 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) A[Catch:\{ NoSuchFieldError \-\> 0x0035 \}]\l0x0033: APUT  \l  (r0 I:?[int, float][])\l  (r1 I:?[int, short, byte, char])\l  (r2 I:?[int, float])\l A[Catch:\{ NoSuchFieldError \-\> 0x0035 \}, TRY_LEAVE]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0035|SYNTHETIC\lSplitter:B:9:0x0035\l}"];
Node_10 [shape=record,label="{10\:\ ?|Splitter:B:9:0x0035\l|0x0035: SGET  (r0 I:int[]) =  mil.nga.wkb.util.GeometryJSONCompatible.1.$SwitchMap$mil$nga$wkb$geom$GeometryType int[] A[Catch:\{ NoSuchFieldError \-\> 0x0040 \}, ExcHandler: NoSuchFieldError null, TRY_ENTER]\l0x0037: SGET  (r1 I:mil.nga.wkb.geom.GeometryType) =  mil.nga.wkb.geom.GeometryType.MULTILINESTRING mil.nga.wkb.geom.GeometryType A[Catch:\{ NoSuchFieldError \-\> 0x0040 \}]\l0x0039: INVOKE  (r1 I:int) = (r1 I:mil.nga.wkb.geom.GeometryType) mil.nga.wkb.geom.GeometryType.ordinal():int type: VIRTUAL A[Catch:\{ NoSuchFieldError \-\> 0x0040 \}]\l0x003d: CONST  (r2 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) A[Catch:\{ NoSuchFieldError \-\> 0x0040 \}]\l0x003e: APUT  \l  (r0 I:?[int, float][])\l  (r1 I:?[int, short, byte, char])\l  (r2 I:?[int, float])\l A[Catch:\{ NoSuchFieldError \-\> 0x0040 \}, TRY_LEAVE]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0040|SYNTHETIC\lSplitter:B:11:0x0040\l}"];
Node_12 [shape=record,label="{12\:\ ?|Splitter:B:11:0x0040\l|0x0040: SGET  (r0 I:int[]) =  mil.nga.wkb.util.GeometryJSONCompatible.1.$SwitchMap$mil$nga$wkb$geom$GeometryType int[] A[Catch:\{ NoSuchFieldError \-\> 0x004b \}, ExcHandler: NoSuchFieldError null, TRY_ENTER]\l0x0042: SGET  (r1 I:mil.nga.wkb.geom.GeometryType) =  mil.nga.wkb.geom.GeometryType.MULTIPOLYGON mil.nga.wkb.geom.GeometryType A[Catch:\{ NoSuchFieldError \-\> 0x004b \}]\l0x0044: INVOKE  (r1 I:int) = (r1 I:mil.nga.wkb.geom.GeometryType) mil.nga.wkb.geom.GeometryType.ordinal():int type: VIRTUAL A[Catch:\{ NoSuchFieldError \-\> 0x004b \}]\l0x0048: CONST  (r2 I:?[int, float, short, byte, char]) = (6 ?[int, float, short, byte, char]) A[Catch:\{ NoSuchFieldError \-\> 0x004b \}]\l0x0049: APUT  \l  (r0 I:?[int, float][])\l  (r1 I:?[int, short, byte, char])\l  (r2 I:?[int, float])\l A[Catch:\{ NoSuchFieldError \-\> 0x004b \}, TRY_LEAVE]\l}"];
Node_13 [shape=record,label="{13\:\ 0x004b|SYNTHETIC\lSplitter:B:13:0x004b\l}"];
Node_14 [shape=record,label="{14\:\ ?|Splitter:B:13:0x004b\l|0x004b: SGET  (r0 I:int[]) =  mil.nga.wkb.util.GeometryJSONCompatible.1.$SwitchMap$mil$nga$wkb$geom$GeometryType int[] A[Catch:\{ NoSuchFieldError \-\> 0x0056 \}, ExcHandler: NoSuchFieldError null, TRY_ENTER]\l0x004d: SGET  (r1 I:mil.nga.wkb.geom.GeometryType) =  mil.nga.wkb.geom.GeometryType.CIRCULARSTRING mil.nga.wkb.geom.GeometryType A[Catch:\{ NoSuchFieldError \-\> 0x0056 \}]\l0x004f: INVOKE  (r1 I:int) = (r1 I:mil.nga.wkb.geom.GeometryType) mil.nga.wkb.geom.GeometryType.ordinal():int type: VIRTUAL A[Catch:\{ NoSuchFieldError \-\> 0x0056 \}]\l0x0053: CONST  (r2 I:?[int, float, short, byte, char]) = (7 ?[int, float, short, byte, char]) A[Catch:\{ NoSuchFieldError \-\> 0x0056 \}]\l0x0054: APUT  \l  (r0 I:?[int, float][])\l  (r1 I:?[int, short, byte, char])\l  (r2 I:?[int, float])\l A[Catch:\{ NoSuchFieldError \-\> 0x0056 \}, TRY_LEAVE]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0056|SYNTHETIC\lSplitter:B:15:0x0056\l}"];
Node_16 [shape=record,label="{16\:\ ?|Splitter:B:15:0x0056\l|0x0056: SGET  (r0 I:int[]) =  mil.nga.wkb.util.GeometryJSONCompatible.1.$SwitchMap$mil$nga$wkb$geom$GeometryType int[] A[Catch:\{ NoSuchFieldError \-\> 0x0062 \}, ExcHandler: NoSuchFieldError null, TRY_ENTER]\l0x0058: SGET  (r1 I:mil.nga.wkb.geom.GeometryType) =  mil.nga.wkb.geom.GeometryType.COMPOUNDCURVE mil.nga.wkb.geom.GeometryType A[Catch:\{ NoSuchFieldError \-\> 0x0062 \}]\l0x005a: INVOKE  (r1 I:int) = (r1 I:mil.nga.wkb.geom.GeometryType) mil.nga.wkb.geom.GeometryType.ordinal():int type: VIRTUAL A[Catch:\{ NoSuchFieldError \-\> 0x0062 \}]\l0x005e: CONST  (r2 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) A[Catch:\{ NoSuchFieldError \-\> 0x0062 \}]\l0x0060: APUT  \l  (r0 I:?[int, float][])\l  (r1 I:?[int, short, byte, char])\l  (r2 I:?[int, float])\l A[Catch:\{ NoSuchFieldError \-\> 0x0062 \}, TRY_LEAVE]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0062|SYNTHETIC\lSplitter:B:17:0x0062\l}"];
Node_18 [shape=record,label="{18\:\ ?|Splitter:B:17:0x0062\l|0x0062: SGET  (r0 I:int[]) =  mil.nga.wkb.util.GeometryJSONCompatible.1.$SwitchMap$mil$nga$wkb$geom$GeometryType int[] A[Catch:\{ NoSuchFieldError \-\> 0x006e \}, ExcHandler: NoSuchFieldError null, TRY_ENTER]\l0x0064: SGET  (r1 I:mil.nga.wkb.geom.GeometryType) =  mil.nga.wkb.geom.GeometryType.CURVEPOLYGON mil.nga.wkb.geom.GeometryType A[Catch:\{ NoSuchFieldError \-\> 0x006e \}]\l0x0066: INVOKE  (r1 I:int) = (r1 I:mil.nga.wkb.geom.GeometryType) mil.nga.wkb.geom.GeometryType.ordinal():int type: VIRTUAL A[Catch:\{ NoSuchFieldError \-\> 0x006e \}]\l0x006a: CONST  (r2 I:?[int, float, short, byte, char]) = (9 ?[int, float, short, byte, char]) A[Catch:\{ NoSuchFieldError \-\> 0x006e \}]\l0x006c: APUT  \l  (r0 I:?[int, float][])\l  (r1 I:?[int, short, byte, char])\l  (r2 I:?[int, float])\l A[Catch:\{ NoSuchFieldError \-\> 0x006e \}, TRY_LEAVE]\l}"];
Node_19 [shape=record,label="{19\:\ 0x006e|SYNTHETIC\lSplitter:B:19:0x006e\l}"];
Node_20 [shape=record,label="{20\:\ ?|Splitter:B:19:0x006e\l|0x006e: SGET  (r0 I:int[]) =  mil.nga.wkb.util.GeometryJSONCompatible.1.$SwitchMap$mil$nga$wkb$geom$GeometryType int[] A[Catch:\{ NoSuchFieldError \-\> 0x007a \}, ExcHandler: NoSuchFieldError null, TRY_ENTER]\l0x0070: SGET  (r1 I:mil.nga.wkb.geom.GeometryType) =  mil.nga.wkb.geom.GeometryType.POLYHEDRALSURFACE mil.nga.wkb.geom.GeometryType A[Catch:\{ NoSuchFieldError \-\> 0x007a \}]\l0x0072: INVOKE  (r1 I:int) = (r1 I:mil.nga.wkb.geom.GeometryType) mil.nga.wkb.geom.GeometryType.ordinal():int type: VIRTUAL A[Catch:\{ NoSuchFieldError \-\> 0x007a \}]\l0x0076: CONST  (r2 I:?[int, float, short, byte, char]) = (10 ?[int, float, short, byte, char]) A[Catch:\{ NoSuchFieldError \-\> 0x007a \}]\l0x0078: APUT  \l  (r0 I:?[int, float][])\l  (r1 I:?[int, short, byte, char])\l  (r2 I:?[int, float])\l A[Catch:\{ NoSuchFieldError \-\> 0x007a \}, TRY_LEAVE]\l}"];
Node_21 [shape=record,label="{21\:\ 0x007a|SYNTHETIC\lSplitter:B:21:0x007a\l}"];
Node_22 [shape=record,label="{22\:\ ?|Splitter:B:21:0x007a\l|0x007a: SGET  (r0 I:int[]) =  mil.nga.wkb.util.GeometryJSONCompatible.1.$SwitchMap$mil$nga$wkb$geom$GeometryType int[] A[Catch:\{ NoSuchFieldError \-\> 0x0086 \}, ExcHandler: NoSuchFieldError null, TRY_ENTER]\l0x007c: SGET  (r1 I:mil.nga.wkb.geom.GeometryType) =  mil.nga.wkb.geom.GeometryType.TIN mil.nga.wkb.geom.GeometryType A[Catch:\{ NoSuchFieldError \-\> 0x0086 \}]\l0x007e: INVOKE  (r1 I:int) = (r1 I:mil.nga.wkb.geom.GeometryType) mil.nga.wkb.geom.GeometryType.ordinal():int type: VIRTUAL A[Catch:\{ NoSuchFieldError \-\> 0x0086 \}]\l0x0082: CONST  (r2 I:?[int, float, short, byte, char]) = (11 ?[int, float, short, byte, char]) A[Catch:\{ NoSuchFieldError \-\> 0x0086 \}]\l0x0084: APUT  \l  (r0 I:?[int, float][])\l  (r1 I:?[int, short, byte, char])\l  (r2 I:?[int, float])\l A[Catch:\{ NoSuchFieldError \-\> 0x0086 \}, TRY_LEAVE]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0086|SYNTHETIC\lSplitter:B:23:0x0086\l}"];
Node_24 [shape=record,label="{24\:\ ?|Splitter:B:23:0x0086\l|0x0086: SGET  (r0 I:int[]) =  mil.nga.wkb.util.GeometryJSONCompatible.1.$SwitchMap$mil$nga$wkb$geom$GeometryType int[] A[Catch:\{ NoSuchFieldError \-\> 0x0092 \}, ExcHandler: NoSuchFieldError null, TRY_ENTER]\l0x0088: SGET  (r1 I:mil.nga.wkb.geom.GeometryType) =  mil.nga.wkb.geom.GeometryType.TRIANGLE mil.nga.wkb.geom.GeometryType A[Catch:\{ NoSuchFieldError \-\> 0x0092 \}]\l0x008a: INVOKE  (r1 I:int) = (r1 I:mil.nga.wkb.geom.GeometryType) mil.nga.wkb.geom.GeometryType.ordinal():int type: VIRTUAL A[Catch:\{ NoSuchFieldError \-\> 0x0092 \}]\l0x008e: CONST  (r2 I:?[int, float, short, byte, char]) = (12 ?[int, float, short, byte, char]) A[Catch:\{ NoSuchFieldError \-\> 0x0092 \}]\l0x0090: APUT  \l  (r0 I:?[int, float][])\l  (r1 I:?[int, short, byte, char])\l  (r2 I:?[int, float])\l A[Catch:\{ NoSuchFieldError \-\> 0x0092 \}, TRY_LEAVE]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0092|SYNTHETIC\lSplitter:B:25:0x0092\l}"];
Node_26 [shape=record,label="{26\:\ ?|Splitter:B:25:0x0092\l|0x0092: SGET  (r0 I:int[]) =  mil.nga.wkb.util.GeometryJSONCompatible.1.$SwitchMap$mil$nga$wkb$geom$GeometryType int[] A[Catch:\{ NoSuchFieldError \-\> 0x009e \}, ExcHandler: NoSuchFieldError null, TRY_ENTER]\l0x0094: SGET  (r1 I:mil.nga.wkb.geom.GeometryType) =  mil.nga.wkb.geom.GeometryType.GEOMETRYCOLLECTION mil.nga.wkb.geom.GeometryType A[Catch:\{ NoSuchFieldError \-\> 0x009e \}]\l0x0096: INVOKE  (r1 I:int) = (r1 I:mil.nga.wkb.geom.GeometryType) mil.nga.wkb.geom.GeometryType.ordinal():int type: VIRTUAL A[Catch:\{ NoSuchFieldError \-\> 0x009e \}]\l0x009a: CONST  (r2 I:?[int, float, short, byte, char]) = (13 ?[int, float, short, byte, char]) A[Catch:\{ NoSuchFieldError \-\> 0x009e \}]\l0x009c: APUT  \l  (r0 I:?[int, float][])\l  (r1 I:?[int, short, byte, char])\l  (r2 I:?[int, float])\l A[Catch:\{ NoSuchFieldError \-\> 0x009e \}, TRY_LEAVE]\l}"];
Node_27 [shape=record,label="{27\:\ 0x009e|0x009e: RETURN   \l}"];
Node_28 [shape=record,label="{28\:\ ?|SYNTHETIC\lExcHandler: NoSuchFieldError null\lSplitter:B:25:0x0092\l}"];
MethodNode[shape=record,label="{static void mil.nga.wkb.util.GeometryJSONCompatible.1.\<clinit\>() }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_23 -> Node_25;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_25 -> Node_28;
Node_26 -> Node_27;
Node_26 -> Node_28;
Node_28 -> Node_27;
}

