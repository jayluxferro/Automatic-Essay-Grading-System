digraph "CFG formil.nga.wkb.io.WkbGeometryReader.readCurvePolygon(Lmil\/nga\/wkb\/io\/ByteReader;ZZ)Lmil\/nga\/wkb\/geom\/CurvePolygon;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:mil.nga.wkb.geom.CurvePolygon) =  mil.nga.wkb.geom.CurvePolygon \l0x0002: INVOKE  \l  (r0 I:mil.nga.wkb.geom.CurvePolygon)\l  (r3 I:boolean)\l  (r4 I:boolean)\l mil.nga.wkb.geom.CurvePolygon.\<init\>(boolean, boolean):void type: DIRECT \l0x0005: INVOKE  (r3 I:int) = (r2 I:mil.nga.wkb.io.ByteReader) mil.nga.wkb.io.ByteReader.readInt():int type: VIRTUAL \l0x0009: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r4 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char])  \-\> B:3:0x001a \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: CONST_CLASS  (r1 I:java.lang.Class\<mil.nga.wkb.geom.Curve\>) =  mil.nga.wkb.geom.Curve.class \l0x000e: INVOKE  (r1 I:mil.nga.wkb.geom.Geometry) = (r2 I:mil.nga.wkb.io.ByteReader), (r1 I:java.lang.Class) mil.nga.wkb.io.WkbGeometryReader.readGeometry(mil.nga.wkb.io.ByteReader, java.lang.Class):mil.nga.wkb.geom.Geometry type: STATIC \l0x0012: CHECK_CAST  (r1 I:mil.nga.wkb.geom.Curve) = (mil.nga.wkb.geom.Curve) (r1 I:?[OBJECT, ARRAY]) \l0x0014: INVOKE  \l  (r0 I:mil.nga.wkb.geom.CurvePolygon)\l  (r1 I:mil.nga.wkb.geom.Curve)\l mil.nga.wkb.geom.CurvePolygon.addRing(mil.nga.wkb.geom.Curve):void type: VIRTUAL \l0x0017: ARITH  (r4 I:int) = (r4 I:int) + (1 int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x001a|0x001a: RETURN  \l  (r0 I:mil.nga.wkb.geom.CurvePolygon\<mil.nga.wkb.geom.Curve\>)\l \l}"];
MethodNode[shape=record,label="{public static mil.nga.wkb.geom.CurvePolygon\<mil.nga.wkb.geom.Curve\> mil.nga.wkb.io.WkbGeometryReader.readCurvePolygon((r2 I:mil.nga.wkb.io.ByteReader A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lmil\/nga\/wkb\/io\/ByteReader;, ZZ), Lmil\/nga\/wkb\/geom\/CurvePolygon\<, Lmil\/nga\/wkb\/geom\/Curve;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_1;
}

