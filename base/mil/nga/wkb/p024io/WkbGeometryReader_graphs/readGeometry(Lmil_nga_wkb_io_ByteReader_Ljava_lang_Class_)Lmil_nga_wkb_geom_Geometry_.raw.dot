digraph "CFG formil.nga.wkb.io.WkbGeometryReader.readGeometry(Lmil\/nga\/wkb\/io\/ByteReader;Ljava\/lang\/Class;)Lmil\/nga\/wkb\/geom\/Geometry;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:byte) = (r6 I:mil.nga.wkb.io.ByteReader) mil.nga.wkb.io.ByteReader.readByte():byte type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0009 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: SGET  (r0 I:java.nio.ByteOrder) =  java.nio.ByteOrder.BIG_ENDIAN java.nio.ByteOrder \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: SGET  (r0 I:java.nio.ByteOrder) =  java.nio.ByteOrder.LITTLE_ENDIAN java.nio.ByteOrder \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: INVOKE  (r1 I:java.nio.ByteOrder) = (r6 I:mil.nga.wkb.io.ByteReader) mil.nga.wkb.io.ByteReader.getByteOrder():java.nio.ByteOrder type: VIRTUAL \l0x000f: INVOKE  (r6 I:mil.nga.wkb.io.ByteReader), (r0 I:java.nio.ByteOrder) mil.nga.wkb.io.ByteReader.setByteOrder(java.nio.ByteOrder):void type: VIRTUAL \l0x0012: INVOKE  (r0 I:int) = (r6 I:mil.nga.wkb.io.ByteReader) mil.nga.wkb.io.ByteReader.readInt():int type: VIRTUAL \l0x0016: ARITH  (r2 I:int) = (r0 I:int) % (1000 int) \l0x0018: ARITH  (r0 I:int) = (r0 I:int) \/ (1000 int) \l0x001a: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001b: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|0x001c: SWITCH  \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[0, 1, 2, 3] t:[0x0023, 0x0022, 0x0024, 0x0020] \l}"];
Node_7 [shape=record,label="{7\:\ 0x0020|0x0020: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0022|0x0022: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0023|0x0023: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x0024|0x0024: INVOKE  (r0 I:mil.nga.wkb.geom.GeometryType) = (r2 I:int) mil.nga.wkb.geom.GeometryType.fromCode(int):mil.nga.wkb.geom.GeometryType type: STATIC \l0x0028: SGET  (r2 I:int[]) =  mil.nga.wkb.io.WkbGeometryReader.1.$SwitchMap$mil$nga$wkb$geom$GeometryType int[] \l0x002a: INVOKE  (r5 I:int) = (r0 I:mil.nga.wkb.geom.GeometryType) mil.nga.wkb.geom.GeometryType.ordinal():int type: VIRTUAL \l0x002e: AGET  (r2 I:?[int, float]) = (r2 I:?[int, float][]), (r5 I:?[int, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0030|0x0030: SWITCH  \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18] t:[0x014b, 0x0109, 0x0104, 0x00ff, 0x00fa, 0x00f5, 0x00f0, 0x00eb, 0x00e6, 0x00e1, 0x00dc, 0x00bc, 0x009c, 0x007c, 0x005c, 0x0056, 0x0050, 0x004a] \l}"];
Node_12 [shape=record,label="{12\:\ 0x0033|0x0033: NEW_INSTANCE  (r6 I:mil.nga.wkb.util.WkbException) =  mil.nga.wkb.util.WkbException \l0x0035: NEW_INSTANCE  (r7 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0037: INVOKE  (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x003a: CONST_STR  (r1 I:java.lang.String) =  \"Geometry Type not supported: \" \l0x003c: INVOKE  (r7 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x003f: INVOKE  (r7 I:java.lang.StringBuilder), (r0 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0042: INVOKE  (r7 I:java.lang.String) = (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0046: INVOKE  \l  (r6 I:mil.nga.wkb.util.WkbException)\l  (r7 I:java.lang.String)\l mil.nga.wkb.util.WkbException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_13 [shape=record,label="{13\:\ 0x0049|0x0049: THROW  (r6 I:java.lang.Throwable) \l}"];
Node_14 [shape=record,label="{14\:\ 0x004a|0x004a: INVOKE  (r0 I:mil.nga.wkb.geom.Triangle) = \l  (r6 I:mil.nga.wkb.io.ByteReader)\l  (r3 I:boolean)\l  (r4 I:boolean)\l mil.nga.wkb.io.WkbGeometryReader.readTriangle(mil.nga.wkb.io.ByteReader, boolean, boolean):mil.nga.wkb.geom.Triangle type: STATIC \l}"];
Node_15 [shape=record,label="{15\:\ 0x0050|0x0050: INVOKE  (r0 I:mil.nga.wkb.geom.TIN) = \l  (r6 I:mil.nga.wkb.io.ByteReader)\l  (r3 I:boolean)\l  (r4 I:boolean)\l mil.nga.wkb.io.WkbGeometryReader.readTIN(mil.nga.wkb.io.ByteReader, boolean, boolean):mil.nga.wkb.geom.TIN type: STATIC \l}"];
Node_16 [shape=record,label="{16\:\ 0x0056|0x0056: INVOKE  (r0 I:mil.nga.wkb.geom.PolyhedralSurface) = \l  (r6 I:mil.nga.wkb.io.ByteReader)\l  (r3 I:boolean)\l  (r4 I:boolean)\l mil.nga.wkb.io.WkbGeometryReader.readPolyhedralSurface(mil.nga.wkb.io.ByteReader, boolean, boolean):mil.nga.wkb.geom.PolyhedralSurface type: STATIC \l}"];
Node_17 [shape=record,label="{17\:\ 0x005c|0x005c: NEW_INSTANCE  (r6 I:mil.nga.wkb.util.WkbException) =  mil.nga.wkb.util.WkbException \l0x005e: NEW_INSTANCE  (r7 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0060: INVOKE  (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0063: CONST_STR  (r1 I:java.lang.String) =  \"Unexpected Geometry Type of \" \l0x0065: INVOKE  (r7 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0068: INVOKE  (r0 I:java.lang.String) = (r0 I:mil.nga.wkb.geom.GeometryType) mil.nga.wkb.geom.GeometryType.name():java.lang.String type: VIRTUAL \l0x006c: INVOKE  (r7 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x006f: CONST_STR  (r0 I:java.lang.String) =  \" which is abstract\" \l0x0071: INVOKE  (r7 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0074: INVOKE  (r7 I:java.lang.String) = (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0078: INVOKE  \l  (r6 I:mil.nga.wkb.util.WkbException)\l  (r7 I:java.lang.String)\l mil.nga.wkb.util.WkbException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_18 [shape=record,label="{18\:\ 0x007b|0x007b: THROW  (r6 I:java.lang.Throwable) \l}"];
Node_19 [shape=record,label="{19\:\ 0x007c|0x007c: NEW_INSTANCE  (r6 I:mil.nga.wkb.util.WkbException) =  mil.nga.wkb.util.WkbException \l0x007e: NEW_INSTANCE  (r7 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0080: INVOKE  (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0083: CONST_STR  (r1 I:java.lang.String) =  \"Unexpected Geometry Type of \" \l0x0085: INVOKE  (r7 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0088: INVOKE  (r0 I:java.lang.String) = (r0 I:mil.nga.wkb.geom.GeometryType) mil.nga.wkb.geom.GeometryType.name():java.lang.String type: VIRTUAL \l0x008c: INVOKE  (r7 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x008f: CONST_STR  (r0 I:java.lang.String) =  \" which is abstract\" \l0x0091: INVOKE  (r7 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0094: INVOKE  (r7 I:java.lang.String) = (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0098: INVOKE  \l  (r6 I:mil.nga.wkb.util.WkbException)\l  (r7 I:java.lang.String)\l mil.nga.wkb.util.WkbException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_20 [shape=record,label="{20\:\ 0x009b|0x009b: THROW  (r6 I:java.lang.Throwable) \l}"];
Node_21 [shape=record,label="{21\:\ 0x009c|0x009c: NEW_INSTANCE  (r6 I:mil.nga.wkb.util.WkbException) =  mil.nga.wkb.util.WkbException \l0x009e: NEW_INSTANCE  (r7 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x00a0: INVOKE  (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x00a3: CONST_STR  (r1 I:java.lang.String) =  \"Unexpected Geometry Type of \" \l0x00a5: INVOKE  (r7 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00a8: INVOKE  (r0 I:java.lang.String) = (r0 I:mil.nga.wkb.geom.GeometryType) mil.nga.wkb.geom.GeometryType.name():java.lang.String type: VIRTUAL \l0x00ac: INVOKE  (r7 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00af: CONST_STR  (r0 I:java.lang.String) =  \" which is abstract\" \l0x00b1: INVOKE  (r7 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00b4: INVOKE  (r7 I:java.lang.String) = (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x00b8: INVOKE  \l  (r6 I:mil.nga.wkb.util.WkbException)\l  (r7 I:java.lang.String)\l mil.nga.wkb.util.WkbException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_22 [shape=record,label="{22\:\ 0x00bb|0x00bb: THROW  (r6 I:java.lang.Throwable) \l}"];
Node_23 [shape=record,label="{23\:\ 0x00bc|0x00bc: NEW_INSTANCE  (r6 I:mil.nga.wkb.util.WkbException) =  mil.nga.wkb.util.WkbException \l0x00be: NEW_INSTANCE  (r7 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x00c0: INVOKE  (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x00c3: CONST_STR  (r1 I:java.lang.String) =  \"Unexpected Geometry Type of \" \l0x00c5: INVOKE  (r7 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00c8: INVOKE  (r0 I:java.lang.String) = (r0 I:mil.nga.wkb.geom.GeometryType) mil.nga.wkb.geom.GeometryType.name():java.lang.String type: VIRTUAL \l0x00cc: INVOKE  (r7 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00cf: CONST_STR  (r0 I:java.lang.String) =  \" which is abstract\" \l0x00d1: INVOKE  (r7 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00d4: INVOKE  (r7 I:java.lang.String) = (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x00d8: INVOKE  \l  (r6 I:mil.nga.wkb.util.WkbException)\l  (r7 I:java.lang.String)\l mil.nga.wkb.util.WkbException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_24 [shape=record,label="{24\:\ 0x00db|0x00db: THROW  (r6 I:java.lang.Throwable) \l}"];
Node_25 [shape=record,label="{25\:\ 0x00dc|0x00dc: INVOKE  (r0 I:mil.nga.wkb.geom.CurvePolygon) = \l  (r6 I:mil.nga.wkb.io.ByteReader)\l  (r3 I:boolean)\l  (r4 I:boolean)\l mil.nga.wkb.io.WkbGeometryReader.readCurvePolygon(mil.nga.wkb.io.ByteReader, boolean, boolean):mil.nga.wkb.geom.CurvePolygon type: STATIC \l}"];
Node_26 [shape=record,label="{26\:\ 0x00e1|0x00e1: INVOKE  (r0 I:mil.nga.wkb.geom.CompoundCurve) = \l  (r6 I:mil.nga.wkb.io.ByteReader)\l  (r3 I:boolean)\l  (r4 I:boolean)\l mil.nga.wkb.io.WkbGeometryReader.readCompoundCurve(mil.nga.wkb.io.ByteReader, boolean, boolean):mil.nga.wkb.geom.CompoundCurve type: STATIC \l}"];
Node_27 [shape=record,label="{27\:\ 0x00e6|0x00e6: INVOKE  (r0 I:mil.nga.wkb.geom.CircularString) = \l  (r6 I:mil.nga.wkb.io.ByteReader)\l  (r3 I:boolean)\l  (r4 I:boolean)\l mil.nga.wkb.io.WkbGeometryReader.readCircularString(mil.nga.wkb.io.ByteReader, boolean, boolean):mil.nga.wkb.geom.CircularString type: STATIC \l}"];
Node_28 [shape=record,label="{28\:\ 0x00eb|0x00eb: INVOKE  (r0 I:mil.nga.wkb.geom.GeometryCollection) = \l  (r6 I:mil.nga.wkb.io.ByteReader)\l  (r3 I:boolean)\l  (r4 I:boolean)\l mil.nga.wkb.io.WkbGeometryReader.readGeometryCollection(mil.nga.wkb.io.ByteReader, boolean, boolean):mil.nga.wkb.geom.GeometryCollection type: STATIC \l}"];
Node_29 [shape=record,label="{29\:\ 0x00f0|0x00f0: INVOKE  (r0 I:mil.nga.wkb.geom.MultiPolygon) = \l  (r6 I:mil.nga.wkb.io.ByteReader)\l  (r3 I:boolean)\l  (r4 I:boolean)\l mil.nga.wkb.io.WkbGeometryReader.readMultiPolygon(mil.nga.wkb.io.ByteReader, boolean, boolean):mil.nga.wkb.geom.MultiPolygon type: STATIC \l}"];
Node_30 [shape=record,label="{30\:\ 0x00f5|0x00f5: INVOKE  (r0 I:mil.nga.wkb.geom.MultiLineString) = \l  (r6 I:mil.nga.wkb.io.ByteReader)\l  (r3 I:boolean)\l  (r4 I:boolean)\l mil.nga.wkb.io.WkbGeometryReader.readMultiLineString(mil.nga.wkb.io.ByteReader, boolean, boolean):mil.nga.wkb.geom.MultiLineString type: STATIC \l}"];
Node_31 [shape=record,label="{31\:\ 0x00fa|0x00fa: INVOKE  (r0 I:mil.nga.wkb.geom.MultiPoint) = \l  (r6 I:mil.nga.wkb.io.ByteReader)\l  (r3 I:boolean)\l  (r4 I:boolean)\l mil.nga.wkb.io.WkbGeometryReader.readMultiPoint(mil.nga.wkb.io.ByteReader, boolean, boolean):mil.nga.wkb.geom.MultiPoint type: STATIC \l}"];
Node_32 [shape=record,label="{32\:\ 0x00ff|0x00ff: INVOKE  (r0 I:mil.nga.wkb.geom.Polygon) = \l  (r6 I:mil.nga.wkb.io.ByteReader)\l  (r3 I:boolean)\l  (r4 I:boolean)\l mil.nga.wkb.io.WkbGeometryReader.readPolygon(mil.nga.wkb.io.ByteReader, boolean, boolean):mil.nga.wkb.geom.Polygon type: STATIC \l}"];
Node_33 [shape=record,label="{33\:\ 0x0104|0x0104: INVOKE  (r0 I:mil.nga.wkb.geom.LineString) = \l  (r6 I:mil.nga.wkb.io.ByteReader)\l  (r3 I:boolean)\l  (r4 I:boolean)\l mil.nga.wkb.io.WkbGeometryReader.readLineString(mil.nga.wkb.io.ByteReader, boolean, boolean):mil.nga.wkb.geom.LineString type: STATIC \l}"];
Node_34 [shape=record,label="{34\:\ 0x0109|0x0109: INVOKE  (r0 I:mil.nga.wkb.geom.Point) = \l  (r6 I:mil.nga.wkb.io.ByteReader)\l  (r3 I:boolean)\l  (r4 I:boolean)\l mil.nga.wkb.io.WkbGeometryReader.readPoint(mil.nga.wkb.io.ByteReader, boolean, boolean):mil.nga.wkb.geom.Point type: STATIC \l}"];
Node_35 [shape=record,label="{35\:\ 0x010d|0x010d: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x0147 \l}"];
Node_36 [shape=record,label="{36\:\ 0x010f|0x010f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x0147 \l}"];
Node_37 [shape=record,label="{37\:\ 0x0111|0x0111: INVOKE  (r2 I:java.lang.Class) = (r0 I:java.lang.Object) java.lang.Object.getClass():java.lang.Class type: VIRTUAL \l0x0115: INVOKE  (r2 I:boolean) = (r7 I:java.lang.Class), (r2 I:java.lang.Class) java.lang.Class.isAssignableFrom(java.lang.Class):boolean type: VIRTUAL \l}"];
Node_38 [shape=record,label="{38\:\ 0x0119|0x0119: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x011c \l}"];
Node_40 [shape=record,label="{40\:\ 0x011c|0x011c: NEW_INSTANCE  (r6 I:mil.nga.wkb.util.WkbException) =  mil.nga.wkb.util.WkbException \l0x011e: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0120: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0123: CONST_STR  (r2 I:java.lang.String) =  \"Unexpected Geometry Type. Expected: \" \l0x0125: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0128: INVOKE  (r7 I:java.lang.String) = (r7 I:java.lang.Class) java.lang.Class.getSimpleName():java.lang.String type: VIRTUAL \l0x012c: INVOKE  (r1 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x012f: CONST_STR  (r7 I:java.lang.String) =  \", Actual: \" \l0x0131: INVOKE  (r1 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0134: INVOKE  (r7 I:java.lang.Class) = (r0 I:java.lang.Object) java.lang.Object.getClass():java.lang.Class type: VIRTUAL \l0x0138: INVOKE  (r7 I:java.lang.String) = (r7 I:java.lang.Class) java.lang.Class.getSimpleName():java.lang.String type: VIRTUAL \l0x013c: INVOKE  (r1 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x013f: INVOKE  (r7 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0143: INVOKE  \l  (r6 I:mil.nga.wkb.util.WkbException)\l  (r7 I:java.lang.String)\l mil.nga.wkb.util.WkbException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_41 [shape=record,label="{41\:\ 0x0146|0x0146: THROW  (r6 I:java.lang.Throwable) \l}"];
Node_42 [shape=record,label="{42\:\ 0x0147|0x0147: INVOKE  (r6 I:mil.nga.wkb.io.ByteReader), (r1 I:java.nio.ByteOrder) mil.nga.wkb.io.ByteReader.setByteOrder(java.nio.ByteOrder):void type: VIRTUAL \l}"];
Node_43 [shape=record,label="{43\:\ 0x014a|0x014a: RETURN  (r0 I:T) \l}"];
Node_44 [shape=record,label="{44\:\ 0x014b|0x014b: NEW_INSTANCE  (r6 I:mil.nga.wkb.util.WkbException) =  mil.nga.wkb.util.WkbException \l0x014d: NEW_INSTANCE  (r7 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x014f: INVOKE  (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0152: CONST_STR  (r1 I:java.lang.String) =  \"Unexpected Geometry Type of \" \l0x0154: INVOKE  (r7 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0157: INVOKE  (r0 I:java.lang.String) = (r0 I:mil.nga.wkb.geom.GeometryType) mil.nga.wkb.geom.GeometryType.name():java.lang.String type: VIRTUAL \l0x015b: INVOKE  (r7 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x015e: CONST_STR  (r0 I:java.lang.String) =  \" which is abstract\" \l0x0160: INVOKE  (r7 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0163: INVOKE  (r7 I:java.lang.String) = (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0167: INVOKE  \l  (r6 I:mil.nga.wkb.util.WkbException)\l  (r7 I:java.lang.String)\l mil.nga.wkb.util.WkbException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_45 [shape=record,label="{45\:\ 0x016a|0x016a: THROW  (r6 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static T mil.nga.wkb.io.WkbGeometryReader.readGeometry((r6 I:mil.nga.wkb.io.ByteReader A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.lang.Class\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Lmil\/nga\/wkb\/geom\/Geometry;, \>(, Lmil\/nga\/wkb\/io\/ByteReader;, Ljava\/lang\/Class\<, TT;\>;)TT;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_7;
Node_5 -> Node_8;
Node_5 -> Node_9;
Node_5 -> Node_10;
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_14;
Node_11 -> Node_15;
Node_11 -> Node_16;
Node_11 -> Node_17;
Node_11 -> Node_19;
Node_11 -> Node_21;
Node_11 -> Node_23;
Node_11 -> Node_25;
Node_11 -> Node_26;
Node_11 -> Node_27;
Node_11 -> Node_28;
Node_11 -> Node_29;
Node_11 -> Node_30;
Node_11 -> Node_31;
Node_11 -> Node_32;
Node_11 -> Node_33;
Node_11 -> Node_34;
Node_11 -> Node_44;
Node_12 -> Node_13;
Node_14 -> Node_35;
Node_15 -> Node_35;
Node_16 -> Node_35;
Node_17 -> Node_18;
Node_19 -> Node_20;
Node_21 -> Node_22;
Node_23 -> Node_24;
Node_25 -> Node_35;
Node_26 -> Node_35;
Node_27 -> Node_35;
Node_28 -> Node_35;
Node_29 -> Node_35;
Node_30 -> Node_35;
Node_31 -> Node_35;
Node_32 -> Node_35;
Node_33 -> Node_35;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_42;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_42;
Node_37 -> Node_38;
Node_38 -> Node_40;
Node_38 -> Node_42[style=dashed];
Node_40 -> Node_41;
Node_42 -> Node_43;
Node_44 -> Node_45;
}

