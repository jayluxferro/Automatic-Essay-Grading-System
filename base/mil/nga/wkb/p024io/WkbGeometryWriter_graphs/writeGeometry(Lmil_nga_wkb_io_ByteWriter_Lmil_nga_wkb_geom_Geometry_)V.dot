digraph "CFG formil.nga.wkb.io.WkbGeometryWriter.writeGeometry(Lmil\/nga\/wkb\/io\/ByteWriter;Lmil\/nga\/wkb\/geom\/Geometry;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r3.getByteOrder() != java.nio.ByteOrder.BIG_ENDIAN) goto L_0x000a\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|r0 = 0\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|r0 = 1\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|PHI: r0 \l  PHI: (r0v1 byte) = (r0v14 byte), (r0v15 byte) binds: [B:3:0x000a, B:2:0x0008] A[DONT_GENERATE, DONT_INLINE]\l|r3.writeByte(r0)\lr3.writeInt(r4.getWkbCode())\lmil.nga.wkb.geom.GeometryType r0 = r4.getGeometryType()\l}"];
Node_5 [shape=record,label="{5\:\ 0x0021|switch(r0) \{\l    case mil.nga.wkb.geom.GeometryType.GEOMETRY :mil.nga.wkb.geom.GeometryType: goto L_0x010c;\l    case mil.nga.wkb.geom.GeometryType.POINT :mil.nga.wkb.geom.GeometryType: goto L_0x0106;\l    case mil.nga.wkb.geom.GeometryType.LINESTRING :mil.nga.wkb.geom.GeometryType: goto L_0x0100;\l    case mil.nga.wkb.geom.GeometryType.POLYGON :mil.nga.wkb.geom.GeometryType: goto L_0x00fa;\l    case mil.nga.wkb.geom.GeometryType.MULTIPOINT :mil.nga.wkb.geom.GeometryType: goto L_0x00f4;\l    case mil.nga.wkb.geom.GeometryType.MULTILINESTRING :mil.nga.wkb.geom.GeometryType: goto L_0x00ee;\l    case mil.nga.wkb.geom.GeometryType.MULTIPOLYGON :mil.nga.wkb.geom.GeometryType: goto L_0x00e8;\l    case mil.nga.wkb.geom.GeometryType.GEOMETRYCOLLECTION :mil.nga.wkb.geom.GeometryType: goto L_0x00e2;\l    case mil.nga.wkb.geom.GeometryType.CIRCULARSTRING :mil.nga.wkb.geom.GeometryType: goto L_0x00dc;\l    case mil.nga.wkb.geom.GeometryType.COMPOUNDCURVE :mil.nga.wkb.geom.GeometryType: goto L_0x00d6;\l    case mil.nga.wkb.geom.GeometryType.CURVEPOLYGON :mil.nga.wkb.geom.GeometryType: goto L_0x00d0;\l    case mil.nga.wkb.geom.GeometryType.MULTICURVE :mil.nga.wkb.geom.GeometryType: goto L_0x00b0;\l    case mil.nga.wkb.geom.GeometryType.MULTISURFACE :mil.nga.wkb.geom.GeometryType: goto L_0x0090;\l    case mil.nga.wkb.geom.GeometryType.CURVE :mil.nga.wkb.geom.GeometryType: goto L_0x0070;\l    case mil.nga.wkb.geom.GeometryType.SURFACE :mil.nga.wkb.geom.GeometryType: goto L_0x0050;\l    case mil.nga.wkb.geom.GeometryType.POLYHEDRALSURFACE :mil.nga.wkb.geom.GeometryType: goto L_0x0049;\l    case mil.nga.wkb.geom.GeometryType.TIN :mil.nga.wkb.geom.GeometryType: goto L_0x0042;\l    case mil.nga.wkb.geom.GeometryType.TRIANGLE :mil.nga.wkb.geom.GeometryType: goto L_0x003b;\l    default: goto L_0x0024;\l\}\l}"];
Node_6 [shape=record,label="{6\:\ 0x0024|java.lang.StringBuilder r4 = new java.lang.StringBuilder()\lr4.append(\"Geometry Type not supported: \")\lr4.append(r0)\l}"];
Node_7 [shape=record,label="{7\:\ 0x003a|throw new mil.nga.wkb.util.WkbException(r4.toString())\l}"];
Node_8 [shape=record,label="{8\:\ 0x003b|writeTriangle(r3, (mil.nga.wkb.geom.Triangle) r4)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0042|writeTIN(r3, (mil.nga.wkb.geom.TIN) r4)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0049|writePolyhedralSurface(r3, (mil.nga.wkb.geom.PolyhedralSurface) r4)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0050|java.lang.StringBuilder r4 = new java.lang.StringBuilder()\lr4.append(\"Unexpected Geometry Type of \")\lr4.append(r0.name())\lr4.append(\" which is abstract\")\l}"];
Node_12 [shape=record,label="{12\:\ 0x006f|throw new mil.nga.wkb.util.WkbException(r4.toString())\l}"];
Node_13 [shape=record,label="{13\:\ 0x0070|java.lang.StringBuilder r4 = new java.lang.StringBuilder()\lr4.append(\"Unexpected Geometry Type of \")\lr4.append(r0.name())\lr4.append(\" which is abstract\")\l}"];
Node_14 [shape=record,label="{14\:\ 0x008f|throw new mil.nga.wkb.util.WkbException(r4.toString())\l}"];
Node_15 [shape=record,label="{15\:\ 0x0090|java.lang.StringBuilder r4 = new java.lang.StringBuilder()\lr4.append(\"Unexpected Geometry Type of \")\lr4.append(r0.name())\lr4.append(\" which is abstract\")\l}"];
Node_16 [shape=record,label="{16\:\ 0x00af|throw new mil.nga.wkb.util.WkbException(r4.toString())\l}"];
Node_17 [shape=record,label="{17\:\ 0x00b0|java.lang.StringBuilder r4 = new java.lang.StringBuilder()\lr4.append(\"Unexpected Geometry Type of \")\lr4.append(r0.name())\lr4.append(\" which is abstract\")\l}"];
Node_18 [shape=record,label="{18\:\ 0x00cf|throw new mil.nga.wkb.util.WkbException(r4.toString())\l}"];
Node_19 [shape=record,label="{19\:\ 0x00d0|writeCurvePolygon(r3, (mil.nga.wkb.geom.CurvePolygon) r4)\l}"];
Node_20 [shape=record,label="{20\:\ 0x00d6|writeCompoundCurve(r3, (mil.nga.wkb.geom.CompoundCurve) r4)\l}"];
Node_21 [shape=record,label="{21\:\ 0x00dc|writeCircularString(r3, (mil.nga.wkb.geom.CircularString) r4)\l}"];
Node_22 [shape=record,label="{22\:\ 0x00e2|writeGeometryCollection(r3, (mil.nga.wkb.geom.GeometryCollection) r4)\l}"];
Node_23 [shape=record,label="{23\:\ 0x00e8|writeMultiPolygon(r3, (mil.nga.wkb.geom.MultiPolygon) r4)\l}"];
Node_24 [shape=record,label="{24\:\ 0x00ee|writeMultiLineString(r3, (mil.nga.wkb.geom.MultiLineString) r4)\l}"];
Node_25 [shape=record,label="{25\:\ 0x00f4|writeMultiPoint(r3, (mil.nga.wkb.geom.MultiPoint) r4)\l}"];
Node_26 [shape=record,label="{26\:\ 0x00fa|writePolygon(r3, (mil.nga.wkb.geom.Polygon) r4)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0100|writeLineString(r3, (mil.nga.wkb.geom.LineString) r4)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0106|writePoint(r3, (mil.nga.wkb.geom.Point) r4)\l}"];
Node_29 [shape=record,label="{29\:\ 0x010c|java.lang.StringBuilder r4 = new java.lang.StringBuilder()\lr4.append(\"Unexpected Geometry Type of \")\lr4.append(r0.name())\lr4.append(\" which is abstract\")\l}"];
Node_30 [shape=record,label="{30\:\ 0x012b|throw new mil.nga.wkb.util.WkbException(r4.toString())\l}"];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_32 [shape=record,label="{32\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_34 [shape=record,label="{34\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_35 [shape=record,label="{35\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_36 [shape=record,label="{36\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_37 [shape=record,label="{37\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_38 [shape=record,label="{38\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_39 [shape=record,label="{39\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_40 [shape=record,label="{40\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_41 [shape=record,label="{41\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_42 [shape=record,label="{42\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_43 [shape=record,label="{43\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public static void mil.nga.wkb.io.WkbGeometryWriter.writeGeometry((r3v0 mil.nga.wkb.io.ByteWriter A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 mil.nga.wkb.geom.Geometry A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_8;
Node_5 -> Node_9;
Node_5 -> Node_10;
Node_5 -> Node_11;
Node_5 -> Node_13;
Node_5 -> Node_15;
Node_5 -> Node_17;
Node_5 -> Node_19;
Node_5 -> Node_20;
Node_5 -> Node_21;
Node_5 -> Node_22;
Node_5 -> Node_23;
Node_5 -> Node_24;
Node_5 -> Node_25;
Node_5 -> Node_26;
Node_5 -> Node_27;
Node_5 -> Node_28;
Node_5 -> Node_29;
Node_6 -> Node_7;
Node_8 -> Node_32;
Node_9 -> Node_33;
Node_10 -> Node_34;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_19 -> Node_35;
Node_20 -> Node_36;
Node_21 -> Node_37;
Node_22 -> Node_38;
Node_23 -> Node_39;
Node_24 -> Node_40;
Node_25 -> Node_41;
Node_26 -> Node_42;
Node_27 -> Node_43;
Node_28 -> Node_31;
Node_29 -> Node_30;
}

