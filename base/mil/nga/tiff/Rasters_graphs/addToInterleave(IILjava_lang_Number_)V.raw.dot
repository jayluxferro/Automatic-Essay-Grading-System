digraph "CFG formil.nga.tiff.Rasters.addToInterleave(IILjava\/lang\/Number;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = (r2 I:mil.nga.tiff.Rasters) mil.nga.tiff.Rasters.sizePixel():int type: VIRTUAL \l0x0004: ARITH  (r4 I:int) = (r4 I:int) * (r0 I:int) \l0x0006: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r0 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char])  \-\> B:3:0x0015 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: IGET  (r1 I:mil.nga.tiff.FieldType[]) = (r2 I:mil.nga.tiff.Rasters) mil.nga.tiff.Rasters.fieldTypes mil.nga.tiff.FieldType[] \l0x000b: AGET  (r1 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY][]), (r0 I:?[int, short, byte, char]) \l0x000d: INVOKE  (r1 I:int) = (r1 I:mil.nga.tiff.FieldType) mil.nga.tiff.FieldType.getBytes():int type: VIRTUAL \l0x0011: ARITH  (r4 I:int) = (r4 I:int) + (r1 I:int) \l0x0012: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|0x0015: IGET  (r0 I:java.nio.ByteBuffer) = (r2 I:mil.nga.tiff.Rasters) mil.nga.tiff.Rasters.interleaveValues java.nio.ByteBuffer \l0x0017: INVOKE  \l  (r2 I:mil.nga.tiff.Rasters)\l  (r0 I:java.nio.ByteBuffer)\l  (r4 I:int)\l  (r3 I:int)\l  (r5 I:java.lang.Number)\l mil.nga.tiff.Rasters.updateSampleInByteBuffer(java.nio.ByteBuffer, int, int, java.lang.Number):void type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x001a|0x001a: RETURN   \l}"];
MethodNode[shape=record,label="{public void mil.nga.tiff.Rasters.addToInterleave((r2 'this' I:mil.nga.tiff.Rasters A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.lang.Number A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_1;
Node_3 -> Node_4;
}

