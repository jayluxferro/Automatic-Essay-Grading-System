digraph "CFG formil.nga.tiff.Rasters.createFieldTypeArray([I[I)[Lmil\/nga\/tiff\/FieldType;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: ARRAY_LENGTH  (r0 I:int) = (r4 I:?[]) \l0x0001: ARRAY_LENGTH  (r1 I:int) = (r5 I:?[]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0019 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: ARRAY_LENGTH  (r0 I:int) = (r4 I:?[]) \l0x0005: NEW_ARRAY  (r0 I:mil.nga.tiff.FieldType[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: mil.nga.tiff.FieldType[] \l0x0007: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: ARRAY_LENGTH  (r2 I:int) = (r4 I:?[]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: IF  (r1 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:6:0x0018 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|0x000b: AGET  (r2 I:?[int, float]) = (r5 I:?[int, float][]), (r1 I:?[int, short, byte, char]) \l0x000d: AGET  (r3 I:?[int, float]) = (r4 I:?[int, float][]), (r1 I:?[int, short, byte, char]) \l0x000f: INVOKE  (r2 I:mil.nga.tiff.FieldType) = (r2 I:int), (r3 I:int) mil.nga.tiff.FieldType.getFieldType(int, int):mil.nga.tiff.FieldType type: STATIC \l0x0013: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r1 I:?[int, short, byte, char])\l  (r2 I:?[OBJECT, ARRAY])\l \l0x0015: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|0x0018: RETURN  (r0 I:mil.nga.tiff.FieldType[]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|0x0019: NEW_INSTANCE  (r0 I:mil.nga.tiff.util.TiffException) =  mil.nga.tiff.util.TiffException \l0x001b: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x001d: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0020: CONST_STR  (r2 I:java.lang.String) =  \"Equal number of bits per samples and sample formats expected. Bits Per Samples: \" \l0x0022: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0025: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0028: CONST_STR  (r4 I:java.lang.String) =  \", Sample Formats: \" \l0x002a: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x002d: INVOKE  (r1 I:java.lang.StringBuilder), (r5 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0030: INVOKE  (r4 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0034: INVOKE  \l  (r0 I:mil.nga.tiff.util.TiffException)\l  (r4 I:java.lang.String)\l mil.nga.tiff.util.TiffException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_8 [shape=record,label="{8\:\ 0x0037|0x0037: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private static mil.nga.tiff.FieldType[] mil.nga.tiff.Rasters.createFieldTypeArray((r4 I:int[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_3;
Node_7 -> Node_8;
}

