digraph "CFG formil.nga.tiff.Rasters.createFieldTypeArray([I[I)[Lmil\/nga\/tiff\/FieldType;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r4.length != r5.length) goto L_0x0019\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|mil.nga.tiff.FieldType[] r0 = new mil.nga.tiff.FieldType[r4.length]\lr1 = 0\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|LOOP_START\lPHI: r1 \l  PHI: (r1v3 int) = (r1v2 int), (r1v4 int) binds: [B:2:0x0004, B:5:0x000b] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:3:0x0008\-\>B:5:0x000b\l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|if (r1 \>= r4.length) goto L_0x0018\l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|LOOP_END\lLOOP:0: B:3:0x0008\-\>B:5:0x000b\l|r0[r1] = mil.nga.tiff.FieldType.getFieldType(r5[r1], r4[r1])\lint r1 = r1 + 1\l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|RETURN\l|return r0\l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Equal number of bits per samples and sample formats expected. Bits Per Samples: \")\lr1.append(r4)\lr1.append(\", Sample Formats: \")\lr1.append(r5)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0037|throw new mil.nga.tiff.util.TiffException(r1.toString())\l}"];
Node_9 [shape=record,label="{9\:\ 0x0018|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private static mil.nga.tiff.FieldType[] mil.nga.tiff.Rasters.createFieldTypeArray((r4v0 int[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 int[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_9;
Node_5 -> Node_3;
Node_7 -> Node_8;
Node_9 -> Node_6;
}

