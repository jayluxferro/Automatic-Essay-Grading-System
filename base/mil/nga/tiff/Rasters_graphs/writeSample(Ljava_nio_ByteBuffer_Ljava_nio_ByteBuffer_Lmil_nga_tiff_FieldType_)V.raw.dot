digraph "CFG formil.nga.tiff.Rasters.writeSample(Ljava\/nio\/ByteBuffer;Ljava\/nio\/ByteBuffer;Lmil\/nga\/tiff\/FieldType;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:int[]) =  mil.nga.tiff.Rasters.1.$SwitchMap$mil$nga$tiff$FieldType int[] \l0x0002: INVOKE  (r1 I:int) = (r5 I:mil.nga.tiff.FieldType) mil.nga.tiff.FieldType.ordinal():int type: VIRTUAL \l0x0006: AGET  (r0 I:?[int, float]) = (r0 I:?[int, float][]), (r1 I:?[int, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: SWITCH  \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[1, 2, 3, 4, 5, 6, 7, 8] t:[0x0042, 0x003a, 0x0032, 0x0042, 0x003a, 0x0032, 0x002a, 0x0022] \l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|0x000b: NEW_INSTANCE  (r3 I:mil.nga.tiff.util.TiffException) =  mil.nga.tiff.util.TiffException \l0x000d: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x000f: INVOKE  (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0012: CONST_STR  (r0 I:java.lang.String) =  \"Unsupported raster field type: \" \l0x0014: INVOKE  (r4 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0017: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x001a: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x001e: INVOKE  \l  (r3 I:mil.nga.tiff.util.TiffException)\l  (r4 I:java.lang.String)\l mil.nga.tiff.util.TiffException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x0021|0x0021: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0022|0x0022: INVOKE  (r4 I:double) = (r4 I:java.nio.ByteBuffer) java.nio.ByteBuffer.getDouble():double type: VIRTUAL \l0x0026: INVOKE  (r3 I:java.nio.ByteBuffer), (r4 I:double) java.nio.ByteBuffer.putDouble(double):java.nio.ByteBuffer type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x002a|0x002a: INVOKE  (r4 I:float) = (r4 I:java.nio.ByteBuffer) java.nio.ByteBuffer.getFloat():float type: VIRTUAL \l0x002e: INVOKE  (r3 I:java.nio.ByteBuffer), (r4 I:float) java.nio.ByteBuffer.putFloat(float):java.nio.ByteBuffer type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0032|0x0032: INVOKE  (r4 I:int) = (r4 I:java.nio.ByteBuffer) java.nio.ByteBuffer.getInt():int type: VIRTUAL \l0x0036: INVOKE  (r3 I:java.nio.ByteBuffer), (r4 I:int) java.nio.ByteBuffer.putInt(int):java.nio.ByteBuffer type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x003a|0x003a: INVOKE  (r4 I:short) = (r4 I:java.nio.ByteBuffer) java.nio.ByteBuffer.getShort():short type: VIRTUAL \l0x003e: INVOKE  (r3 I:java.nio.ByteBuffer), (r4 I:short) java.nio.ByteBuffer.putShort(short):java.nio.ByteBuffer type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0042|0x0042: INVOKE  (r4 I:byte) = (r4 I:java.nio.ByteBuffer) java.nio.ByteBuffer.get():byte type: VIRTUAL \l0x0046: INVOKE  (r3 I:java.nio.ByteBuffer), (r4 I:byte) java.nio.ByteBuffer.put(byte):java.nio.ByteBuffer type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0049|0x0049: RETURN   \l}"];
MethodNode[shape=record,label="{private void mil.nga.tiff.Rasters.writeSample((r2 'this' I:mil.nga.tiff.Rasters A[IMMUTABLE_TYPE, THIS]), (r3 I:java.nio.ByteBuffer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.nio.ByteBuffer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:mil.nga.tiff.FieldType A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_1 -> Node_5;
Node_1 -> Node_6;
Node_1 -> Node_7;
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_4 -> Node_9;
Node_5 -> Node_9;
Node_6 -> Node_9;
Node_7 -> Node_9;
Node_8 -> Node_9;
}

