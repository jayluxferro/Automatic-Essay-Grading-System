digraph "CFG formil.nga.tiff.Rasters.updateSampleInByteBuffer(Ljava\/nio\/ByteBuffer;IILjava\/lang\/Number;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r3 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:5:0x0013 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: INVOKE  (r0 I:int) = (r2 I:java.nio.ByteBuffer) java.nio.ByteBuffer.capacity():int type: VIRTUAL \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IF  (r3 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:5:0x0013 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: INVOKE  (r2 I:java.nio.ByteBuffer), (r3 I:int) java.nio.ByteBuffer.position(int):java.nio.Buffer type: VIRTUAL \l0x000b: IGET  (r3 I:mil.nga.tiff.FieldType[]) = (r1 I:mil.nga.tiff.Rasters) mil.nga.tiff.Rasters.fieldTypes mil.nga.tiff.FieldType[] \l0x000d: AGET  (r3 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY][]), (r4 I:?[int, short, byte, char]) \l0x000f: INVOKE  \l  (r1 I:mil.nga.tiff.Rasters)\l  (r2 I:java.nio.ByteBuffer)\l  (r3 I:mil.nga.tiff.FieldType)\l  (r5 I:java.lang.Number)\l mil.nga.tiff.Rasters.writeSample(java.nio.ByteBuffer, mil.nga.tiff.FieldType, java.lang.Number):void type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: NEW_INSTANCE  (r4 I:java.lang.IndexOutOfBoundsException) =  java.lang.IndexOutOfBoundsException \l0x0015: NEW_INSTANCE  (r5 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0017: INVOKE  (r5 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x001a: CONST_STR  (r0 I:java.lang.String) =  \"index: \" \l0x001c: INVOKE  (r5 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x001f: INVOKE  (r5 I:java.lang.StringBuilder), (r3 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x0022: CONST_STR  (r3 I:java.lang.String) =  \". Buffer capacity: \" \l0x0024: INVOKE  (r5 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0027: INVOKE  (r2 I:int) = (r2 I:java.nio.ByteBuffer) java.nio.ByteBuffer.capacity():int type: VIRTUAL \l0x002b: INVOKE  (r5 I:java.lang.StringBuilder), (r2 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x002e: INVOKE  (r2 I:java.lang.String) = (r5 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0032: INVOKE  \l  (r4 I:java.lang.IndexOutOfBoundsException)\l  (r2 I:java.lang.String)\l java.lang.IndexOutOfBoundsException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x0035|0x0035: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private void mil.nga.tiff.Rasters.updateSampleInByteBuffer((r1 'this' I:mil.nga.tiff.Rasters A[IMMUTABLE_TYPE, THIS]), (r2 I:java.nio.ByteBuffer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.lang.Number A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_5;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_5;
Node_3 -> Node_4;
Node_5 -> Node_6;
}

