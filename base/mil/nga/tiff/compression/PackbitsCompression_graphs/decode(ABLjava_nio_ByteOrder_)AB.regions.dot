digraph "CFG formil.nga.tiff.compression.PackbitsCompression.decode([BLjava\/nio\/ByteOrder;)[B" {
subgraph cluster_Region_1094444379 {
label = "R(3:0|(2:3|(2:5|(2:7|(1:9))(1:(1:11)))(0))|13)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|mil.nga.tiff.io.ByteReader mil.nga.tiff.p023io.ByteReader r0 = new mil.nga.tiff.p023io.ByteReader(r4, r5)\ljava.io.ByteArrayOutputStream java.io.ByteArrayOutputStream r4 = new java.io.ByteArrayOutputStream()\l}"];
subgraph cluster_LoopRegion_997111190 {
label = "LOOP:0: (2:3|(2:5|(2:7|(1:9))(1:(1:11)))(0))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000e|if (r0.hasByte() != false) goto L_0x0010\l}"];
subgraph cluster_Region_924537416 {
label = "R(2:3|(2:5|(2:7|(1:9))(1:(1:11)))(0))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0010|byte byte r5 = r0.readByte()\l}"];
subgraph cluster_IfRegion_1104506429 {
label = "IF [B:4:0x0016] THEN: R(2:5|(2:7|(1:9))(1:(1:11))) ELSE: R(0)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0016|if (r5 != Byte.MIN_VALUE) goto L_0x0018\l}"];
subgraph cluster_Region_87497248 {
label = "R(2:5|(2:7|(1:9))(1:(1:11)))";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0018|int r1 = 0\l}"];
subgraph cluster_IfRegion_768455410 {
label = "IF [B:6:0x0019] THEN: R(2:7|(1:9)) ELSE: R(1:(1:11))";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0019|if (r5 \< 0) goto L_0x001b\l}"];
subgraph cluster_Region_2083657925 {
label = "R(2:7|(1:9))";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x001b|short short r2 = r0.readUnsignedByte()\lint int r5 = \-r5\l}"];
subgraph cluster_LoopRegion_1878603837 {
label = "LOOP:1: (1:9)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0020|LOOP_START\lPHI: r1 \l  PHI: (r1v4 int) = (r1v1 int), (r1v5 int) binds: [B:7:0x001b, B:9:0x0022] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:8:0x0020\-\>B:9:0x0022\l|if (r1 \<= r5) goto L_0x0022\l}"];
subgraph cluster_Region_749859057 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0022|LOOP_END\lLOOP:1: B:8:0x0020\-\>B:9:0x0022\l|r4.write(r2)\lr1++\l}"];
}
}
}
subgraph cluster_Region_898434190 {
label = "R(1:(1:11))";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_648167549 {
label = "LOOP:2: (1:11)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0028|LOOP_START\lPHI: r1 \l  PHI: (r1v2 int) = (r1v1 int), (r1v3 int) binds: [B:6:0x0019, B:11:0x002a] A[DONT_GENERATE, DONT_INLINE]\lLOOP:2: B:10:0x0028\-\>B:11:0x002a\l|if (r1 \<= r5) goto L_0x002a\l}"];
subgraph cluster_Region_1648180005 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x002a|LOOP_END\lLOOP:2: B:10:0x0028\-\>B:11:0x002a\l|r4.write(r0.readUnsignedByte())\lr1++\l}"];
}
}
}
}
}
subgraph cluster_Region_475755677 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
Node_13 [shape=record,label="{13\:\ 0x0038|RETURN\l|return r4.toByteArray()\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x000a|LOOP_START\lLOOP:0: B:1:0x000a\-\>B:14:0x000a\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0034}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x000a|LOOP_END\lSYNTHETIC\lLOOP:0: B:1:0x000a\-\>B:14:0x000a\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0034|SYNTHETIC\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x000a|SYNTHETIC\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x000a|SYNTHETIC\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x000a|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public byte[] mil.nga.tiff.compression.PackbitsCompression.decode((r3v0 'this' mil.nga.tiff.compression.PackbitsCompression A[IMMUTABLE_TYPE, THIS]), (r4v0 byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 java.nio.ByteOrder A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_15[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_16[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_10[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_17[style=dashed];
Node_9 -> Node_8;
Node_10 -> Node_11;
Node_10 -> Node_18[style=dashed];
Node_11 -> Node_10;
Node_1 -> Node_2;
Node_12 -> Node_13;
Node_14 -> Node_1;
Node_15 -> Node_12;
Node_16 -> Node_14;
Node_17 -> Node_14;
Node_18 -> Node_14;
}

