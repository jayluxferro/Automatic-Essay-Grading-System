digraph "CFG formil.nga.tiff.compression.LZWCompression.addToTable(I[Ljava\/lang\/Integer;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.Map\<java.lang.Integer, java.lang.Integer[]\>) = (r2 I:mil.nga.tiff.compression.LZWCompression) mil.nga.tiff.compression.LZWCompression.table java.util.Map \l0x0002: INVOKE  (r1 I:java.lang.Integer) = (r3 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0006: INVOKE  \l  (r0 I:java.util.Map)\l  (r1 I:java.lang.Object)\l  (r4 I:java.lang.Object)\l java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE \l0x0009: IGET  (r4 I:int) = (r2 I:mil.nga.tiff.compression.LZWCompression) mil.nga.tiff.compression.LZWCompression.maxCode int \l0x000b: INVOKE  (r3 I:int) = (r4 I:int), (r3 I:int) java.lang.Math.max(int, int):int type: STATIC \l0x000f: IPUT  (r3 I:int), (r2 I:mil.nga.tiff.compression.LZWCompression) mil.nga.tiff.compression.LZWCompression.maxCode int \l0x0011: INVOKE  (r2 I:mil.nga.tiff.compression.LZWCompression) mil.nga.tiff.compression.LZWCompression.checkByteLength():void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0014|0x0014: RETURN   \l}"];
MethodNode[shape=record,label="{private void mil.nga.tiff.compression.LZWCompression.addToTable((r2 'this' I:mil.nga.tiff.compression.LZWCompression A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.Integer[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

