digraph "CFG formil.nga.tiff.compression.LZWCompression.getByte(Lmil\/nga\/tiff\/io\/ByteReader;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = (r14 I:mil.nga.tiff.compression.LZWCompression) mil.nga.tiff.compression.LZWCompression.position int \l0x0002: CONST  (r1 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l0x0004: ARITH  (r0 I:int) = (r0 I:int) % (r1 I:int) \l0x0005: IGET  (r2 I:int) = (r14 I:mil.nga.tiff.compression.LZWCompression) mil.nga.tiff.compression.LZWCompression.position int \l0x0007: CAST  (r2 I:double) = (double) (r2 I:int) \l0x0008: CONST  (r4 I:?[long, double]) = \l  (4620693217682128896(0x4020000000000000, double:8.0) ?[long, double])\l \l0x000a: ARITH  (r2 I:double) = (r2 I:double) \/ (r4 I:double) \l0x000b: INVOKE  (r2 I:double) = (r2 I:double) java.lang.Math.floor(double):double type: STATIC \l0x000f: CAST  (r2 I:int) = (int) (r2 I:double) \l0x0010: ARITH  (r0 I:int) = (8 int) \- (r0 I:int) \l0x0012: IGET  (r3 I:int) = (r14 I:mil.nga.tiff.compression.LZWCompression) mil.nga.tiff.compression.LZWCompression.position int \l0x0014: IGET  (r4 I:int) = (r14 I:mil.nga.tiff.compression.LZWCompression) mil.nga.tiff.compression.LZWCompression.byteLength int \l0x0016: ARITH  (r3 I:int) = (r3 I:int) + (r4 I:int) \l0x0017: ARITH  (r4 I:int) = (r2 I:int) + (1 int) \l0x0019: ARITH  (r5 I:int) = (r4 I:int) * (8 int) \l0x001b: ARITH  (r3 I:int) = (r3 I:int) \- (r5 I:int) \l0x001c: ARITH  (r5 I:int) = (r2 I:int) + (2 int) \l0x001e: ARITH  (r6 I:int) = (r5 I:int) * (8 int) \l0x0020: IGET  (r7 I:int) = (r14 I:mil.nga.tiff.compression.LZWCompression) mil.nga.tiff.compression.LZWCompression.position int \l0x0022: IGET  (r8 I:int) = (r14 I:mil.nga.tiff.compression.LZWCompression) mil.nga.tiff.compression.LZWCompression.byteLength int \l0x0024: ARITH  (r7 I:int) = (r7 I:int) + (r8 I:int) \l0x0025: ARITH  (r7 I:int) = (r6 I:int) \- (r7 I:int) \l0x0027: IGET  (r8 I:int) = (r14 I:mil.nga.tiff.compression.LZWCompression) mil.nga.tiff.compression.LZWCompression.position int \l0x0029: ARITH  (r6 I:int) = (r6 I:int) \- (r8 I:int) \l0x002a: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x002b: INVOKE  (r7 I:int) = (r8 I:int), (r7 I:int) java.lang.Math.max(int, int):int type: STATIC \l0x002f: INVOKE  (r9 I:int) = (r15 I:mil.nga.tiff.io.ByteReader) mil.nga.tiff.io.ByteReader.byteLength():int type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0033|0x0033: IF  (r2 I:?[int, byte, short, char]) \< (r9 I:?[int, byte, short, char])  \-\> B:4:0x0041 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0035|0x0035: SGET  (r15 I:java.util.logging.Logger) =  mil.nga.tiff.compression.LZWCompression.logger java.util.logging.Logger \l0x0037: SGET  (r0 I:java.util.logging.Level) =  java.util.logging.Level.WARNING java.util.logging.Level \l0x0039: CONST_STR  (r1 I:java.lang.String) =  \"End of data reached without an end of input code\" \l0x003b: INVOKE  \l  (r15 I:java.util.logging.Logger)\l  (r0 I:java.util.logging.Level)\l  (r1 I:java.lang.String)\l java.util.logging.Logger.log(java.util.logging.Level, java.lang.String):void type: VIRTUAL \l0x003e: CONST  (r15 I:?[int, float, short, byte, char]) = \l  (257(0x101, float:3.6E\-43) ?[int, float, short, byte, char])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0040|0x0040: RETURN  (r15 I:int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0041|0x0041: INVOKE  (r9 I:short) = (r15 I:mil.nga.tiff.io.ByteReader), (r2 I:int) mil.nga.tiff.io.ByteReader.readUnsignedByte(int):short type: VIRTUAL \l0x0045: CONST  (r10 I:?[long, double]) = \l  (4611686018427387904(0x4000000000000000, double:2.0) ?[long, double])\l \l0x0047: CAST  (r12 I:double) = (double) (r0 I:int) \l0x0048: INVOKE  (r10 I:double) = (r10 I:double), (r12 I:double) java.lang.Math.pow(double, double):double type: STATIC \l0x004c: CONST  (r12 I:?[long, double]) = \l  (4607182418800017408(0x3ff0000000000000, double:1.0) ?[long, double])\l \l0x004e: ARITH  (r10 I:double) = (r10 I:double) \- (r12 I:double) \l0x004f: CAST  (r10 I:int) = (int) (r10 I:double) \l0x0050: ARITH  (r9 I:?[int, boolean, short, byte, char]) = (r9 I:?[int, boolean, short, byte, char]) & (r10 I:?[int, boolean, short, byte, char]) \l0x0051: IGET  (r10 I:int) = (r14 I:mil.nga.tiff.compression.LZWCompression) mil.nga.tiff.compression.LZWCompression.byteLength int \l0x0053: ARITH  (r10 I:int) = (r10 I:int) \- (r0 I:int) \l0x0054: ARITH  (r0 I:int) = (r9 I:int) \<\< (r10 I:int) \l0x0056: INVOKE  (r9 I:int) = (r15 I:mil.nga.tiff.io.ByteReader) mil.nga.tiff.io.ByteReader.byteLength():int type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x005a|0x005a: IF  (r4 I:?[int, byte, short, char]) \>= (r9 I:?[int, byte, short, char])  \-\> B:7:0x006a \l}"];
Node_6 [shape=record,label="{6\:\ 0x005c|0x005c: INVOKE  (r4 I:short) = (r15 I:mil.nga.tiff.io.ByteReader), (r4 I:int) mil.nga.tiff.io.ByteReader.readUnsignedByte(int):short type: VIRTUAL \l0x0060: ARITH  (r4 I:int) = (r4 I:int) \>\>\> (r7 I:int) \l0x0061: IGET  (r7 I:int) = (r14 I:mil.nga.tiff.compression.LZWCompression) mil.nga.tiff.compression.LZWCompression.byteLength int \l0x0063: ARITH  (r7 I:int) = (r7 I:int) \- (r6 I:int) \l0x0064: INVOKE  (r6 I:int) = (r8 I:int), (r7 I:int) java.lang.Math.max(int, int):int type: STATIC \l0x0068: ARITH  (r4 I:int) = (r4 I:int) \<\< (r6 I:int) \l0x0069: ARITH  (r0 I:int) = (r0 I:int) + (r4 I:int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x006a|0x006a: IF  (r3 I:?[int, byte, short, char]) \<= (r1 I:?[int, byte, short, char])  \-\> B:11:0x0082 \l}"];
Node_8 [shape=record,label="{8\:\ 0x006c|0x006c: INVOKE  (r3 I:int) = (r15 I:mil.nga.tiff.io.ByteReader) mil.nga.tiff.io.ByteReader.byteLength():int type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0070|0x0070: IF  (r5 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char])  \-\> B:11:0x0082 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0072|0x0072: ARITH  (r2 I:int) = (r2 I:int) + (3 int) \l0x0074: ARITH  (r2 I:int) = (r2 I:int) * (8 int) \l0x0076: IGET  (r1 I:int) = (r14 I:mil.nga.tiff.compression.LZWCompression) mil.nga.tiff.compression.LZWCompression.position int \l0x0078: IGET  (r3 I:int) = (r14 I:mil.nga.tiff.compression.LZWCompression) mil.nga.tiff.compression.LZWCompression.byteLength int \l0x007a: ARITH  (r1 I:int) = (r1 I:int) + (r3 I:int) \l0x007b: ARITH  (r2 I:int) = (r2 I:int) \- (r1 I:int) \l0x007c: INVOKE  (r15 I:short) = (r15 I:mil.nga.tiff.io.ByteReader), (r5 I:int) mil.nga.tiff.io.ByteReader.readUnsignedByte(int):short type: VIRTUAL \l0x0080: ARITH  (r15 I:int) = (r15 I:int) \>\>\> (r2 I:int) \l0x0081: ARITH  (r0 I:int) = (r0 I:int) + (r15 I:int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0082|0x0082: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{private int mil.nga.tiff.compression.LZWCompression.getByte((r14 'this' I:mil.nga.tiff.compression.LZWCompression A[IMMUTABLE_TYPE, THIS]), (r15 I:mil.nga.tiff.io.ByteReader A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
}

