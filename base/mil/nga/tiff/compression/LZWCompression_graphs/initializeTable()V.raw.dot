digraph "CFG formil.nga.tiff.compression.LZWCompression.initializeTable()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.Map\<java.lang.Integer, java.lang.Integer[]\>) = (r6 I:mil.nga.tiff.compression.LZWCompression) mil.nga.tiff.compression.LZWCompression.table java.util.Map \l0x0002: INVOKE  (r0 I:java.util.Map) java.util.Map.clear():void type: INTERFACE \l0x0005: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0006: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: CONST  (r2 I:?[int, float, short, byte, char]) = \l  (257(0x101, float:3.6E\-43) ?[int, float, short, byte, char])\l \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: IF  (r1 I:?[int, byte, short, char]) \> (r2 I:?[int, byte, short, char])  \-\> B:4:0x0020 \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: IGET  (r2 I:java.util.Map\<java.lang.Integer, java.lang.Integer[]\>) = (r6 I:mil.nga.tiff.compression.LZWCompression) mil.nga.tiff.compression.LZWCompression.table java.util.Map \l0x000d: INVOKE  (r3 I:java.lang.Integer) = (r1 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0011: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0012: NEW_ARRAY  (r4 I:java.lang.Integer[]) = (r4 I:int A[IMMUTABLE_TYPE]) type: java.lang.Integer[] \l0x0014: INVOKE  (r5 I:java.lang.Integer) = (r1 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0018: APUT  \l  (r4 I:?[OBJECT, ARRAY][])\l  (r0 I:?[int, short, byte, char])\l  (r5 I:?[OBJECT, ARRAY])\l \l0x001a: INVOKE  \l  (r2 I:java.util.Map)\l  (r3 I:java.lang.Object)\l  (r4 I:java.lang.Object)\l java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE \l0x001d: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0020|0x0020: IPUT  (r2 I:int), (r6 I:mil.nga.tiff.compression.LZWCompression) mil.nga.tiff.compression.LZWCompression.maxCode int \l0x0022: CONST  (r0 I:?[int, float, short, byte, char]) = (9 ?[int, float, short, byte, char]) \l0x0024: IPUT  (r0 I:int), (r6 I:mil.nga.tiff.compression.LZWCompression) mil.nga.tiff.compression.LZWCompression.byteLength int \l}"];
Node_5 [shape=record,label="{5\:\ 0x0026|0x0026: RETURN   \l}"];
MethodNode[shape=record,label="{private void mil.nga.tiff.compression.LZWCompression.initializeTable((r6 'this' I:mil.nga.tiff.compression.LZWCompression A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
Node_4 -> Node_5;
}

