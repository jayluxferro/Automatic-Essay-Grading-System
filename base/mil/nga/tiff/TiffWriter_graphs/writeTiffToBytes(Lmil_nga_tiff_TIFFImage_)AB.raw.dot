digraph "CFG formil.nga.tiff.TiffWriter.writeTiffToBytes(Lmil\/nga\/tiff\/TIFFImage;)[B" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:mil.nga.tiff.io.ByteWriter) =  mil.nga.tiff.io.ByteWriter \l0x0002: INVOKE  (r0 I:mil.nga.tiff.io.ByteWriter) mil.nga.tiff.io.ByteWriter.\<init\>():void type: DIRECT \l0x0005: INVOKE  (r1 I:byte[]) = \l  (r0 I:mil.nga.tiff.io.ByteWriter)\l  (r1 I:mil.nga.tiff.TIFFImage)\l mil.nga.tiff.TiffWriter.writeTiffToBytes(mil.nga.tiff.io.ByteWriter, mil.nga.tiff.TIFFImage):byte[] type: STATIC \l0x0009: INVOKE  (r0 I:mil.nga.tiff.io.ByteWriter) mil.nga.tiff.io.ByteWriter.close():void type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|0x000c: RETURN  (r1 I:byte[]) \l}"];
MethodNode[shape=record,label="{public static byte[] mil.nga.tiff.TiffWriter.writeTiffToBytes((r1 I:mil.nga.tiff.TIFFImage A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

