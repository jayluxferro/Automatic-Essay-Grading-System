digraph "CFG formil.nga.tiff.TiffWriter.writeValues(Lmil\/nga\/tiff\/io\/ByteWriter;Lmil\/nga\/tiff\/FileDirectoryEntry;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:long) = (r7 I:mil.nga.tiff.FileDirectoryEntry) mil.nga.tiff.FileDirectoryEntry.getTypeCount():long type: VIRTUAL \l0x0004: CONST  (r2 I:?[long, double]) = (1 ?[long, double]) \l0x0006: CMP_L  (r0 I:int) = (r0 I:long), (r2 I:long) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0031 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: INVOKE  (r0 I:mil.nga.tiff.FieldTagType) = (r7 I:mil.nga.tiff.FileDirectoryEntry) mil.nga.tiff.FileDirectoryEntry.getFieldTag():mil.nga.tiff.FieldTagType type: VIRTUAL \l0x000e: INVOKE  (r0 I:boolean) = (r0 I:mil.nga.tiff.FieldTagType) mil.nga.tiff.FieldTagType.isArray():boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|0x0012: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0031 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|0x0014: INVOKE  (r0 I:mil.nga.tiff.FieldType) = (r7 I:mil.nga.tiff.FileDirectoryEntry) mil.nga.tiff.FileDirectoryEntry.getFieldType():mil.nga.tiff.FieldType type: VIRTUAL \l0x0018: SGET  (r1 I:mil.nga.tiff.FieldType) =  mil.nga.tiff.FieldType.RATIONAL mil.nga.tiff.FieldType \l}"];
Node_5 [shape=record,label="{5\:\ 0x001a|0x001a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0031 \l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|0x001c: INVOKE  (r0 I:mil.nga.tiff.FieldType) = (r7 I:mil.nga.tiff.FileDirectoryEntry) mil.nga.tiff.FileDirectoryEntry.getFieldType():mil.nga.tiff.FieldType type: VIRTUAL \l0x0020: SGET  (r1 I:mil.nga.tiff.FieldType) =  mil.nga.tiff.FieldType.SRATIONAL mil.nga.tiff.FieldType \l}"];
Node_7 [shape=record,label="{7\:\ 0x0022|0x0022: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0031 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0024|0x0024: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList \l0x0026: INVOKE  (r0 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x0029: INVOKE  (r1 I:java.lang.Object) = (r7 I:mil.nga.tiff.FileDirectoryEntry) mil.nga.tiff.FileDirectoryEntry.getValues():java.lang.Object type: VIRTUAL \l0x002d: INVOKE  (r0 I:java.util.List), (r1 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_9 [shape=record,label="{9\:\ 0x0031|0x0031: INVOKE  (r0 I:java.lang.Object) = (r7 I:mil.nga.tiff.FileDirectoryEntry) mil.nga.tiff.FileDirectoryEntry.getValues():java.lang.Object type: VIRTUAL \l0x0035: CHECK_CAST  (r0 I:java.util.List) = (java.util.List) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0037|0x0037: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0038: INVOKE  (r0 I:java.util.Iterator) = (r0 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_11 [shape=record,label="{11\:\ 0x003c|0x003c: INVOKE  (r2 I:boolean) = (r0 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_12 [shape=record,label="{12\:\ 0x0040|0x0040: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x0108 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0042|0x0042: INVOKE  (r2 I:java.lang.Object) = (r0 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0046: SGET  (r3 I:int[]) =  mil.nga.tiff.TiffWriter.1.$SwitchMap$mil$nga$tiff$FieldType int[] \l0x0048: INVOKE  (r4 I:mil.nga.tiff.FieldType) = (r7 I:mil.nga.tiff.FileDirectoryEntry) mil.nga.tiff.FileDirectoryEntry.getFieldType():mil.nga.tiff.FieldType type: VIRTUAL \l0x004c: INVOKE  (r4 I:int) = (r4 I:mil.nga.tiff.FieldType) mil.nga.tiff.FieldType.ordinal():int type: VIRTUAL \l0x0050: AGET  (r3 I:?[int, float]) = (r3 I:?[int, float][]), (r4 I:?[int, short, byte, char]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0052|0x0052: SWITCH  \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12] t:[0x00ec, 0x00df, 0x00df, 0x00d2, 0x00c5, 0x00b8, 0x00ac, 0x00a0, 0x0094, 0x0088, 0x007c, 0x0070] \l}"];
Node_15 [shape=record,label="{15\:\ 0x0055|0x0055: NEW_INSTANCE  (r6 I:mil.nga.tiff.util.TiffException) =  mil.nga.tiff.util.TiffException \l0x0057: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0059: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x005c: CONST_STR  (r1 I:java.lang.String) =  \"Invalid field type: \" \l0x005e: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0061: INVOKE  (r7 I:mil.nga.tiff.FieldType) = (r7 I:mil.nga.tiff.FileDirectoryEntry) mil.nga.tiff.FileDirectoryEntry.getFieldType():mil.nga.tiff.FieldType type: VIRTUAL \l0x0065: INVOKE  (r0 I:java.lang.StringBuilder), (r7 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0068: INVOKE  (r7 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x006c: INVOKE  \l  (r6 I:mil.nga.tiff.util.TiffException)\l  (r7 I:java.lang.String)\l mil.nga.tiff.util.TiffException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_16 [shape=record,label="{16\:\ 0x006f|0x006f: THROW  (r6 I:java.lang.Throwable) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0070|0x0070: CHECK_CAST  (r2 I:java.lang.Double) = (java.lang.Double) (r2 I:?[OBJECT, ARRAY]) \l0x0072: INVOKE  (r2 I:double) = (r2 I:java.lang.Double) java.lang.Double.doubleValue():double type: VIRTUAL \l0x0076: INVOKE  (r6 I:mil.nga.tiff.io.ByteWriter), (r2 I:double) mil.nga.tiff.io.ByteWriter.writeDouble(double):void type: VIRTUAL \l0x0079: ARITH  (r1 I:int) = (r1 I:int) + (8 int) \l}"];
Node_18 [shape=record,label="{18\:\ 0x007c|0x007c: CHECK_CAST  (r2 I:java.lang.Float) = (java.lang.Float) (r2 I:?[OBJECT, ARRAY]) \l0x007e: INVOKE  (r2 I:float) = (r2 I:java.lang.Float) java.lang.Float.floatValue():float type: VIRTUAL \l0x0082: INVOKE  (r6 I:mil.nga.tiff.io.ByteWriter), (r2 I:float) mil.nga.tiff.io.ByteWriter.writeFloat(float):void type: VIRTUAL \l0x0085: ARITH  (r1 I:int) = (r1 I:int) + (4 int) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0088|0x0088: CHECK_CAST  (r2 I:java.lang.Integer) = (java.lang.Integer) (r2 I:?[OBJECT, ARRAY]) \l0x008a: INVOKE  (r2 I:int) = (r2 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l0x008e: INVOKE  (r6 I:mil.nga.tiff.io.ByteWriter), (r2 I:int) mil.nga.tiff.io.ByteWriter.writeInt(int):void type: VIRTUAL \l0x0091: ARITH  (r1 I:int) = (r1 I:int) + (4 int) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0094|0x0094: CHECK_CAST  (r2 I:java.lang.Long) = (java.lang.Long) (r2 I:?[OBJECT, ARRAY]) \l0x0096: INVOKE  (r2 I:long) = (r2 I:java.lang.Long) java.lang.Long.longValue():long type: VIRTUAL \l0x009a: INVOKE  (r6 I:mil.nga.tiff.io.ByteWriter), (r2 I:long) mil.nga.tiff.io.ByteWriter.writeUnsignedInt(long):void type: VIRTUAL \l0x009d: ARITH  (r1 I:int) = (r1 I:int) + (4 int) \l}"];
Node_21 [shape=record,label="{21\:\ 0x00a0|0x00a0: CHECK_CAST  (r2 I:java.lang.Integer) = (java.lang.Integer) (r2 I:?[OBJECT, ARRAY]) \l0x00a2: INVOKE  (r2 I:int) = (r2 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l0x00a6: INVOKE  (r6 I:mil.nga.tiff.io.ByteWriter), (r2 I:int) mil.nga.tiff.io.ByteWriter.writeInt(int):void type: VIRTUAL \l0x00a9: ARITH  (r1 I:int) = (r1 I:int) + (4 int) \l}"];
Node_22 [shape=record,label="{22\:\ 0x00ac|0x00ac: CHECK_CAST  (r2 I:java.lang.Long) = (java.lang.Long) (r2 I:?[OBJECT, ARRAY]) \l0x00ae: INVOKE  (r2 I:long) = (r2 I:java.lang.Long) java.lang.Long.longValue():long type: VIRTUAL \l0x00b2: INVOKE  (r6 I:mil.nga.tiff.io.ByteWriter), (r2 I:long) mil.nga.tiff.io.ByteWriter.writeUnsignedInt(long):void type: VIRTUAL \l0x00b5: ARITH  (r1 I:int) = (r1 I:int) + (4 int) \l}"];
Node_23 [shape=record,label="{23\:\ 0x00b8|0x00b8: CHECK_CAST  (r2 I:java.lang.Short) = (java.lang.Short) (r2 I:?[OBJECT, ARRAY]) \l0x00ba: INVOKE  (r2 I:short) = (r2 I:java.lang.Short) java.lang.Short.shortValue():short type: VIRTUAL \l0x00be: INVOKE  (r6 I:mil.nga.tiff.io.ByteWriter), (r2 I:short) mil.nga.tiff.io.ByteWriter.writeShort(short):void type: VIRTUAL \l0x00c1: ARITH  (r1 I:int) = (r1 I:int) + (2 int) \l}"];
Node_24 [shape=record,label="{24\:\ 0x00c5|0x00c5: CHECK_CAST  (r2 I:java.lang.Integer) = (java.lang.Integer) (r2 I:?[OBJECT, ARRAY]) \l0x00c7: INVOKE  (r2 I:int) = (r2 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l0x00cb: INVOKE  (r6 I:mil.nga.tiff.io.ByteWriter), (r2 I:int) mil.nga.tiff.io.ByteWriter.writeUnsignedShort(int):void type: VIRTUAL \l0x00ce: ARITH  (r1 I:int) = (r1 I:int) + (2 int) \l}"];
Node_25 [shape=record,label="{25\:\ 0x00d2|0x00d2: CHECK_CAST  (r2 I:java.lang.Byte) = (java.lang.Byte) (r2 I:?[OBJECT, ARRAY]) \l0x00d4: INVOKE  (r2 I:byte) = (r2 I:java.lang.Byte) java.lang.Byte.byteValue():byte type: VIRTUAL \l0x00d8: INVOKE  (r6 I:mil.nga.tiff.io.ByteWriter), (r2 I:byte) mil.nga.tiff.io.ByteWriter.writeByte(byte):void type: VIRTUAL \l0x00db: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_26 [shape=record,label="{26\:\ 0x00df|0x00df: CHECK_CAST  (r2 I:java.lang.Short) = (java.lang.Short) (r2 I:?[OBJECT, ARRAY]) \l0x00e1: INVOKE  (r2 I:short) = (r2 I:java.lang.Short) java.lang.Short.shortValue():short type: VIRTUAL \l0x00e5: INVOKE  (r6 I:mil.nga.tiff.io.ByteWriter), (r2 I:short) mil.nga.tiff.io.ByteWriter.writeUnsignedByte(short):void type: VIRTUAL \l0x00e8: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_27 [shape=record,label="{27\:\ 0x00ec|0x00ec: CHECK_CAST  (r2 I:java.lang.String) = (java.lang.String) (r2 I:?[OBJECT, ARRAY]) \l0x00ee: INVOKE  (r2 I:int) = (r6 I:mil.nga.tiff.io.ByteWriter), (r2 I:java.lang.String) mil.nga.tiff.io.ByteWriter.writeString(java.lang.String):int type: VIRTUAL \l0x00f2: ARITH  (r1 I:int) = (r1 I:int) + (r2 I:int) \l0x00f3: CAST  (r2 I:long) = (long) (r1 I:int) \l0x00f4: INVOKE  (r4 I:long) = (r7 I:mil.nga.tiff.FileDirectoryEntry) mil.nga.tiff.FileDirectoryEntry.getTypeCount():long type: VIRTUAL \l0x00f8: CMP_L  (r4 I:int) = (r2 I:long), (r4 I:long) \l}"];
Node_28 [shape=record,label="{28\:\ 0x00fa|0x00fa: IF  (r4 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:11:0x003c \l}"];
Node_29 [shape=record,label="{29\:\ 0x00fc|0x00fc: INVOKE  (r4 I:long) = (r7 I:mil.nga.tiff.FileDirectoryEntry) mil.nga.tiff.FileDirectoryEntry.getTypeCount():long type: VIRTUAL \l0x0100: ARITH  (r4 I:long) = (r4 I:long) \- (r2 I:long) \l0x0101: INVOKE  (r6 I:mil.nga.tiff.io.ByteWriter), (r4 I:long) mil.nga.tiff.TiffWriter.writeFillerBytes(mil.nga.tiff.io.ByteWriter, long):void type: STATIC \l0x0104: ARITH  (r2 I:long) = (r2 I:long) + (r4 I:long) \l0x0105: CAST  (r1 I:int) = (int) (r2 I:long) \l}"];
Node_30 [shape=record,label="{30\:\ 0x0108|0x0108: RETURN  (r1 I:int) \l}"];
MethodNode[shape=record,label="{private static int mil.nga.tiff.TiffWriter.writeValues((r6 I:mil.nga.tiff.io.ByteWriter A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:mil.nga.tiff.FileDirectoryEntry A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_30;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_17;
Node_14 -> Node_18;
Node_14 -> Node_19;
Node_14 -> Node_20;
Node_14 -> Node_21;
Node_14 -> Node_22;
Node_14 -> Node_23;
Node_14 -> Node_24;
Node_14 -> Node_25;
Node_14 -> Node_26;
Node_14 -> Node_27;
Node_15 -> Node_16;
Node_17 -> Node_11;
Node_18 -> Node_11;
Node_19 -> Node_11;
Node_20 -> Node_11;
Node_21 -> Node_11;
Node_22 -> Node_11;
Node_23 -> Node_11;
Node_24 -> Node_11;
Node_25 -> Node_11;
Node_26 -> Node_11;
Node_27 -> Node_28;
Node_28 -> Node_11;
Node_28 -> Node_29[style=dashed];
Node_29 -> Node_11;
}

