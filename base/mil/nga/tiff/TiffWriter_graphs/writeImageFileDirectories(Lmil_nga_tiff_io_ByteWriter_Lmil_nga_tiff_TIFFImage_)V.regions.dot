digraph "CFG formil.nga.tiff.TiffWriter.writeImageFileDirectories(Lmil\/nga\/tiff\/io\/ByteWriter;Lmil\/nga\/tiff\/TIFFImage;)V" {
subgraph cluster_Region_2093719234 {
label = "R(2:0|(2:3|(7:5|(3:8|(1:10)(2:11|(1:13)(2:15|16))|14)|17|(1:19)(1:20)|21|(2:24|(2:26|(1:28)(2:29|30))(2:31|32))|33)(1:35))) | DECL_VAR: int null\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|mil.nga.tiff.p023io.ByteWriter r0 = r19\lint r2 = 0\l}"];
subgraph cluster_LoopRegion_630420454 {
label = "LOOP:0: (2:3|(7:5|(3:8|(1:10)(2:11|(1:13)(2:15|16))|14)|17|(1:19)(1:20)|21|(2:24|(2:26|(1:28)(2:29|30))(2:31|32))|33)(1:35))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000b|if (r2 \< r20.getFileDirectories().size()) goto L_0x000d\l}"];
subgraph cluster_Region_767202993 {
label = "R(2:3|(7:5|(3:8|(1:10)(2:11|(1:13)(2:15|16))|14)|17|(1:19)(1:20)|21|(2:24|(2:26|(1:28)(2:29|30))(2:31|32))|33)(1:35))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000d|mil.nga.tiff.FileDirectory mil.nga.tiff.FileDirectory r3 = r20.getFileDirectories().get(r2)\lpopulateRasterEntries(r3)\llong long r4 = (long) r19.size()\llong long r6 = r3.size() + r4\llong long r4 = r4 + r3.sizeWithValues()\lr0.writeUnsignedShort(r3.numEntries())\ljava.util.ArrayList java.util.ArrayList r8 = new java.util.ArrayList()\ljava.util.ArrayList java.util.ArrayList r9 = new java.util.ArrayList()\l}"];
subgraph cluster_IfRegion_1124211062 {
label = "IF [B:4:0x003e] THEN: R(7:5|(3:8|(1:10)(2:11|(1:13)(2:15|16))|14)|17|(1:19)(1:20)|21|(2:24|(2:26|(1:28)(2:29|30))(2:31|32))|33) ELSE: R(1:35)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x003e|if (r3.isTiled() == false) goto L_0x0040\l}"];
subgraph cluster_Region_1594886950 {
label = "R(7:5|(3:8|(1:10)(2:11|(1:13)(2:15|16))|14)|17|(1:19)(1:20)|21|(2:24|(2:26|(1:28)(2:29|30))(2:31|32))|33)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0040|byte[] byte[] r10 = writeRasters(r19.getByteOrder(), r3, r4)\ljava.util.Iterator r3 = r3.getEntries().iterator()\l}"];
subgraph cluster_LoopRegion_1038731526 {
label = "LOOP:1: (3:8|(1:10)(2:11|(1:13)(2:15|16))|14)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0056|if (r3.hasNext() != false) goto L_0x0058\l}"];
subgraph cluster_Region_926463326 {
label = "R(3:8|(1:10)(2:11|(1:13)(2:15|16))|14)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0058|mil.nga.tiff.FileDirectoryEntry r11 = r3.next()\lr0.writeUnsignedShort(r11.getFieldTag().getId())\lr0.writeUnsignedShort(r11.getFieldType().getValue())\lr0.writeUnsignedInt(r11.getTypeCount())\llong long r14 = ((long) r11.getFieldType().getBytes()) * r11.getTypeCount()\l}"];
subgraph cluster_IfRegion_1000826628 {
label = "IF [B:9:0x008c] THEN: R(1:10) ELSE: R(2:11|(1:13)(2:15|16))";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x008c|if (r14 \> 4) goto L_0x008e\l}"];
subgraph cluster_Region_933734026 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x008e|r8.add(r11)\lr0.writeUnsignedInt(r6)\lr9.add(java.lang.Long.valueOf(r6))\lr6 += r11.sizeOfValues()\lr18 = r2\l}"];
}
subgraph cluster_Region_398066482 {
label = "R(2:11|(1:13)(2:15|16))";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x00a3|int int r11 = writeValues(r0, r11)\lr18 = r2\l}"];
subgraph cluster_IfRegion_178498897 {
label = "IF [B:12:0x00ac] THEN: R(1:13) ELSE: R(2:15|16)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x00ac|if (((long) r11) == r14) goto L_0x00ae\l}"];
subgraph cluster_Region_1858863210 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x00ae|writeFillerBytes(r0, 4 \- r14)\l}"];
}
subgraph cluster_Region_1220001644 {
label = "R(2:15|16)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x00b5}"];
Node_16 [shape=record,label="{16\:\ 0x00d3|throw new mil.nga.tiff.util.TiffException(\"Unexpected bytes written. Expected: \" + r14 + \", Actual: \" + r11)\l}"];
}
}
}
}
Node_14 [shape=record,label="{14\:\ 0x00b2|LOOP_END\lPHI: r6 r18 \l  PHI: (r6v7 long) = (r6v2 long), (r6v8 long) binds: [B:43:0x00b2, B:44:0x00b2] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r18v1 int) = (r18v2 int), (r18v3 int) binds: [B:43:0x00b2, B:44:0x00b2] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:6:0x0050\-\>B:14:0x00b2\l|r2 = r18\l}"];
}
}
Node_17 [shape=record,label="{17\:\ 0x00d4|r2++\l}"];
subgraph cluster_IfRegion_511640753 {
label = "IF [B:18:0x00e0] THEN: R(1:19) ELSE: R(1:20)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x00e0|if (r2 == r20.getFileDirectories().size()) goto L_0x00e2\l}"];
subgraph cluster_Region_481086120 {
label = "R(1:19)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x00e2|writeFillerBytes(r0, 4)\l}"];
}
subgraph cluster_Region_381004865 {
label = "R(1:20)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x00e6|r0.writeUnsignedInt(r4 + ((long) r10.length))\l}"];
}
}
Node_21 [shape=record,label="{21\:\ 0x00ec|int r1 = 0\l}"];
subgraph cluster_LoopRegion_479486731 {
label = "LOOP:2: (2:24|(2:26|(1:28)(2:29|30))(2:31|32))";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x00f1|if (r1 \< r8.size()) goto L_0x00f3\l}"];
subgraph cluster_Region_572931900 {
label = "R(2:24|(2:26|(1:28)(2:29|30))(2:31|32))";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x00f3|mil.nga.tiff.FileDirectoryEntry mil.nga.tiff.FileDirectoryEntry r3 = (mil.nga.tiff.FileDirectoryEntry) r8.get(r1)\llong long r4 = ((java.lang.Long) r9.get(r1)).longValue()\l}"];
subgraph cluster_IfRegion_385914121 {
label = "IF [B:25:0x010a] THEN: R(2:26|(1:28)(2:29|30)) ELSE: R(2:31|32)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x010a|if (r4 == ((long) r19.size())) goto L_0x010c\l}"];
subgraph cluster_Region_1364299318 {
label = "R(2:26|(1:28)(2:29|30))";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x010c|int int r4 = writeValues(r0, r3)\llong long r5 = ((long) r3.getFieldType().getBytes()) * r3.getTypeCount()\l}"];
subgraph cluster_IfRegion_998188332 {
label = "IF [B:27:0x0122] THEN: R(1:28) ELSE: R(2:29|30)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0122|if (((long) r4) == r5) goto L_0x0124\l}"];
subgraph cluster_Region_1151003973 {
label = "R(1:28)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0124|LOOP_END\lLOOP:2: B:22:0x00ed\-\>B:28:0x0124\l|r1++\l}"];
}
subgraph cluster_Region_681314243 {
label = "R(2:29|30)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0127}"];
Node_30 [shape=record,label="{30\:\ 0x0145|throw new mil.nga.tiff.util.TiffException(\"Unexpected bytes written. Expected: \" + r5 + \", Actual: \" + r4)\l}"];
}
}
}
subgraph cluster_Region_682832089 {
label = "R(2:31|32)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x0146}"];
Node_32 [shape=record,label="{32\:\ 0x0168|throw new mil.nga.tiff.util.TiffException(\"Entry values byte does not match the write location. Entry Values Byte: \" + r4 + \", Current Byte: \" + r19.size())\l}"];
}
}
}
}
Node_33 [shape=record,label="{33\:\ 0x0169|LOOP_END\lLOOP:0: B:1:0x0003\-\>B:33:0x0169\l|r0.writeBytes(r10)\l}"];
}
subgraph cluster_Region_2090214498 {
label = "R(1:35)";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x0175|throw new mil.nga.tiff.util.TiffException(\"Tiled images are not supported\")\l}"];
}
}
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0003|LOOP_START\lPHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v3 int) binds: [B:0:0x0000, B:33:0x0169] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0003\-\>B:33:0x0169\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0050|LOOP_START\lPHI: r2 r6 \l  PHI: (r2v2 int) = (r2v1 int), (r2v7 int) binds: [B:5:0x0040, B:14:0x00b2] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v2 long) = (r6v1 long), (r6v7 long) binds: [B:5:0x0040, B:14:0x00b2] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:6:0x0050\-\>B:14:0x00b2\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x00ed|LOOP_START\lPHI: r1 \l  PHI: (r1v4 int) = (r1v3 int), (r1v8 int) binds: [B:21:0x00ec, B:28:0x0124] A[DONT_GENERATE, DONT_INLINE]\lLOOP:2: B:22:0x00ed\-\>B:28:0x0124\l}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x016e}"];
Node_36 [shape=record,color=red,label="{36\:\ 0x0176}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x0146|SYNTHETIC\l}"];
Node_38 [shape=record,color=red,label="{38\:\ 0x0176|SYNTHETIC\l}"];
Node_39 [shape=record,color=red,label="{39\:\ 0x0127|SYNTHETIC\l}"];
Node_40 [shape=record,color=red,label="{40\:\ 0x00b5|SYNTHETIC\l}"];
Node_41 [shape=record,color=red,label="{41\:\ 0x016e|SYNTHETIC\l}"];
Node_42 [shape=record,color=red,label="{42\:\ 0x00d4|SYNTHETIC\l}"];
Node_43 [shape=record,color=red,label="{43\:\ 0x00b2|SYNTHETIC\l}"];
Node_44 [shape=record,color=red,label="{44\:\ 0x00b2|SYNTHETIC\l}"];
Node_45 [shape=record,color=red,label="{45\:\ 0x0169|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private static void mil.nga.tiff.TiffWriter.writeImageFileDirectories((r19v0 mil.nga.tiff.io.ByteWriter A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20v0 mil.nga.tiff.TIFFImage A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_38[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_41[style=dashed];
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_7 -> Node_42[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_11[style=dashed];
Node_10 -> Node_44;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_40[style=dashed];
Node_13 -> Node_43;
Node_15 -> Node_16;
Node_14 -> Node_6;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_18 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_23 -> Node_24;
Node_23 -> Node_45[style=dashed];
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_25 -> Node_37[style=dashed];
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_27 -> Node_39[style=dashed];
Node_28 -> Node_22;
Node_29 -> Node_30;
Node_31 -> Node_32;
Node_33 -> Node_1;
Node_1 -> Node_2;
Node_6 -> Node_7;
Node_22 -> Node_23;
Node_34 -> Node_35;
Node_37 -> Node_31;
Node_38 -> Node_36;
Node_39 -> Node_29;
Node_40 -> Node_15;
Node_41 -> Node_34;
Node_42 -> Node_17;
Node_43 -> Node_14;
Node_44 -> Node_14;
Node_45 -> Node_33;
}

