digraph "CFG formil.nga.tiff.TiffReader.getValues(Lmil\/nga\/tiff\/io\/ByteReader;Lmil\/nga\/tiff\/FieldType;J)Ljava\/util\/List;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.ArrayList r0 = new java.util.ArrayList()\lr1 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|LOOP_START\lPHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:0:0x0000, B:20:0x00c5] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0006\-\>B:20:0x00c5\l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|if ((((long) r1) \> r6 ? 1 : (((long) r1) == r6 ? 0 : \-1)) \>= 0) goto L_0x00d2\l}"];
Node_3 [shape=record,label="{3\:\ 0x000b}"];
Node_4 [shape=record,label="{4\:\ 0x0013|switch(r5) \{\l    case mil.nga.tiff.FieldType.ASCII :mil.nga.tiff.FieldType: goto L_0x00bd;\l    case mil.nga.tiff.FieldType.BYTE :mil.nga.tiff.FieldType: goto L_0x00b1;\l    case mil.nga.tiff.FieldType.UNDEFINED :mil.nga.tiff.FieldType: goto L_0x00b1;\l    case mil.nga.tiff.FieldType.SBYTE :mil.nga.tiff.FieldType: goto L_0x00a5;\l    case mil.nga.tiff.FieldType.SHORT :mil.nga.tiff.FieldType: goto L_0x0099;\l    case mil.nga.tiff.FieldType.SSHORT :mil.nga.tiff.FieldType: goto L_0x008d;\l    case mil.nga.tiff.FieldType.LONG :mil.nga.tiff.FieldType: goto L_0x0081;\l    case mil.nga.tiff.FieldType.SLONG :mil.nga.tiff.FieldType: goto L_0x0075;\l    case mil.nga.tiff.FieldType.RATIONAL :mil.nga.tiff.FieldType: goto L_0x005e;\l    case mil.nga.tiff.FieldType.SRATIONAL :mil.nga.tiff.FieldType: goto L_0x0047;\l    case mil.nga.tiff.FieldType.FLOAT :mil.nga.tiff.FieldType: goto L_0x003a;\l    case mil.nga.tiff.FieldType.DOUBLE :mil.nga.tiff.FieldType: goto L_0x002d;\l    default: goto L_0x0016;\l\}\l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|java.lang.StringBuilder r6 = new java.lang.StringBuilder()\lr6.append(\"Invalid field type: \")\lr6.append(r5)\l}"];
Node_6 [shape=record,label="{6\:\ 0x002c|throw new mil.nga.tiff.util.TiffException(r6.toString())\l}"];
Node_7 [shape=record,label="{7\:\ 0x002d|r0.add(java.lang.Double.valueOf(r4.readDouble()))\l}"];
Node_8 [shape=record,label="{8\:\ 0x003a|r0.add(java.lang.Float.valueOf(r4.readFloat()))\l}"];
Node_9 [shape=record,label="{9\:\ 0x0047|r0.add(java.lang.Integer.valueOf(r4.readInt()))\lr0.add(java.lang.Integer.valueOf(r4.readInt()))\l}"];
Node_10 [shape=record,label="{10\:\ 0x005e|r0.add(java.lang.Long.valueOf(r4.readUnsignedInt()))\lr0.add(java.lang.Long.valueOf(r4.readUnsignedInt()))\l}"];
Node_11 [shape=record,label="{11\:\ 0x0075|r0.add(java.lang.Integer.valueOf(r4.readInt()))\l}"];
Node_12 [shape=record,label="{12\:\ 0x0081|r0.add(java.lang.Long.valueOf(r4.readUnsignedInt()))\l}"];
Node_13 [shape=record,label="{13\:\ 0x008d|r0.add(java.lang.Short.valueOf(r4.readShort()))\l}"];
Node_14 [shape=record,label="{14\:\ 0x0099|r0.add(java.lang.Integer.valueOf(r4.readUnsignedShort()))\l}"];
Node_15 [shape=record,label="{15\:\ 0x00a5|r0.add(java.lang.Byte.valueOf(r4.readByte()))\l}"];
Node_16 [shape=record,label="{16\:\ 0x00b1|r0.add(java.lang.Short.valueOf(r4.readUnsignedByte()))\l}"];
Node_17 [shape=record,label="{17\:\ 0x00bd}"];
Node_18 [shape=record,label="{18\:\ 0x00be|SYNTHETIC\lSplitter:B:18:0x00be\l}"];
Node_19 [shape=record,label="{19\:\ ?|Catch:\{ UnsupportedEncodingException \-\> 0x00c9 \}\lSplitter:B:18:0x00be\l|r0.add(r4.readString(1))     \/\/ Catch:\{ UnsupportedEncodingException \-\> 0x00c9 \}\l}"];
Node_20 [shape=record,label="{20\:\ 0x00c5|LOOP_END\lLOOP:0: B:1:0x0006\-\>B:20:0x00c5\l|int r1 = r1 + 1\l}"];
Node_21 [shape=record,label="{21\:\ 0x00c9|ExcHandler: UnsupportedEncodingException (r4v5 'e' java.io.UnsupportedEncodingException A[CUSTOM_DECLARE])\lSplitter:B:18:0x00be\l|java.io.UnsupportedEncodingException r4 = move\-exception\l}"];
Node_22 [shape=record,label="{22\:\ 0x00ca}"];
Node_23 [shape=record,label="{23\:\ 0x00d1|throw new mil.nga.tiff.util.TiffException(\"Failed to read ASCII character\", r4)\l}"];
Node_24 [shape=record,label="{24\:\ 0x00d2}"];
Node_25 [shape=record,label="{25\:\ 0x00d4|if (r5 != mil.nga.tiff.FieldType.ASCII) goto L_0x010b\l}"];
Node_26 [shape=record,label="{26\:\ 0x00d6|java.util.ArrayList r4 = new java.util.ArrayList()\ljava.lang.StringBuilder r5 = new java.lang.StringBuilder()\ljava.util.Iterator r6 = r0.iterator()\l}"];
Node_27 [shape=record,label="{27\:\ 0x00e4|LOOP_START\lPHI: r5 \l  PHI: (r5v2 java.lang.StringBuilder) = (r5v1 java.lang.StringBuilder), (r5v3 java.lang.StringBuilder) binds: [B:26:0x00d6, B:49:0x00e4] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:27:0x00e4\-\>B:49:0x00e4\l}"];
Node_28 [shape=record,label="{28\:\ 0x00e8|if (r6.hasNext() == false) goto L_0x010c\l}"];
Node_29 [shape=record,label="{29\:\ 0x00ea|java.lang.Object r7 = r6.next()\l}"];
Node_30 [shape=record,label="{30\:\ 0x00ee|if (r7 != null) goto L_0x0103\l}"];
Node_31 [shape=record,label="{31\:\ 0x00f0}"];
Node_32 [shape=record,label="{32\:\ 0x00f4|if (r5.length() \<= 0) goto L_0x00e4\l}"];
Node_33 [shape=record,label="{33\:\ 0x00f6|r4.add(r5.toString())\ljava.lang.StringBuilder r5 = new java.lang.StringBuilder()\l}"];
Node_34 [shape=record,label="{34\:\ 0x0103|r5.append(r7.toString())\l}"];
Node_35 [shape=record,label="{35\:\ 0x010b}"];
Node_36 [shape=record,label="{36\:\ 0x00d2|SYNTHETIC\l}"];
Node_37 [shape=record,label="{37\:\ 0x0016|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x00c5|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x00c5|SYNTHETIC\l}"];
Node_40 [shape=record,label="{40\:\ 0x00c5|SYNTHETIC\l}"];
Node_41 [shape=record,label="{41\:\ 0x00c5|SYNTHETIC\l}"];
Node_42 [shape=record,label="{42\:\ 0x00c5|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x00c5|SYNTHETIC\l}"];
Node_44 [shape=record,label="{44\:\ 0x00c5|SYNTHETIC\l}"];
Node_45 [shape=record,label="{45\:\ 0x00c5|SYNTHETIC\l}"];
Node_46 [shape=record,label="{46\:\ 0x00c5|SYNTHETIC\l}"];
Node_47 [shape=record,label="{47\:\ 0x00c5|SYNTHETIC\l}"];
Node_48 [shape=record,label="{48\:\ 0x00c5|SYNTHETIC\l}"];
Node_49 [shape=record,label="{49\:\ 0x00e4|LOOP_END\lSYNTHETIC\lPHI: r5 \l  PHI: (r5v3 java.lang.StringBuilder) = (r5v2 java.lang.StringBuilder), (r5v2 java.lang.StringBuilder), (r5v5 java.lang.StringBuilder) binds: [B:53:0x00e4, B:51:0x00e4, B:52:0x00e4] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:27:0x00e4\-\>B:49:0x00e4\l}"];
Node_50 [shape=record,label="{50\:\ 0x010c|SYNTHETIC\l}"];
Node_51 [shape=record,label="{51\:\ 0x00e4|SYNTHETIC\l}"];
Node_52 [shape=record,label="{52\:\ 0x00e4|SYNTHETIC\l}"];
Node_53 [shape=record,label="{53\:\ 0x00e4|SYNTHETIC\l}"];
Node_54 [shape=record,label="{54\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return r0\l}"];
Node_55 [shape=record,label="{55\:\ ?|SYNTHETIC\lRETURN\l|return r4\l}"];
MethodNode[shape=record,label="{private static java.util.List\<java.lang.Object\> mil.nga.tiff.TiffReader.getValues((r4v0 mil.nga.tiff.io.ByteReader A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 mil.nga.tiff.FieldType A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lmil\/nga\/tiff\/io\/ByteReader;, Lmil\/nga\/tiff\/FieldType;, J), Ljava\/util\/List\<, Ljava\/lang\/Object;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_36;
Node_3 -> Node_4;
Node_4 -> Node_7;
Node_4 -> Node_8;
Node_4 -> Node_9;
Node_4 -> Node_10;
Node_4 -> Node_11;
Node_4 -> Node_12;
Node_4 -> Node_13;
Node_4 -> Node_14;
Node_4 -> Node_15;
Node_4 -> Node_16;
Node_4 -> Node_17;
Node_4 -> Node_37;
Node_5 -> Node_6;
Node_7 -> Node_39;
Node_8 -> Node_40;
Node_9 -> Node_41;
Node_10 -> Node_42;
Node_11 -> Node_43;
Node_12 -> Node_44;
Node_13 -> Node_45;
Node_14 -> Node_46;
Node_15 -> Node_47;
Node_16 -> Node_48;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_18 -> Node_21;
Node_19 -> Node_21;
Node_19 -> Node_38;
Node_20 -> Node_1;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_35;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_50;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_34;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_51;
Node_33 -> Node_52;
Node_34 -> Node_53;
Node_35 -> Node_54;
Node_36 -> Node_24;
Node_37 -> Node_5;
Node_38 -> Node_20;
Node_39 -> Node_20;
Node_40 -> Node_20;
Node_41 -> Node_20;
Node_42 -> Node_20;
Node_43 -> Node_20;
Node_44 -> Node_20;
Node_45 -> Node_20;
Node_46 -> Node_20;
Node_47 -> Node_20;
Node_48 -> Node_20;
Node_49 -> Node_27;
Node_50 -> Node_55;
Node_51 -> Node_49;
Node_52 -> Node_49;
Node_53 -> Node_49;
}

