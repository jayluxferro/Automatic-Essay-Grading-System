digraph "CFG formil.nga.tiff.FileDirectory.\<init\>(Ljava\/util\/SortedSet;Lmil\/nga\/tiff\/io\/ByteReader;Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r3.fieldTagTypeMapping = new java.util.HashMap()\lr3.cache = null\lr3.writeRasters = null\lr3.lastBlockIndex = \-1\lr3.entries = r4\ljava.util.Iterator r4 = r4.iterator()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0018|LOOP_START\lLOOP:0: B:1:0x0018\-\>B:3:0x001e\l}"];
Node_2 [shape=record,label="{2\:\ 0x001c|if (r4.hasNext() == false) goto L_0x002e\l}"];
Node_3 [shape=record,label="{3\:\ 0x001e|LOOP_END\lLOOP:0: B:1:0x0018\-\>B:3:0x001e\l|mil.nga.tiff.FileDirectoryEntry r0 = (mil.nga.tiff.FileDirectoryEntry) r4.next()\lr3.fieldTagTypeMapping.put(r0.getFieldTag(), r0)\l}"];
Node_4 [shape=record,label="{4\:\ 0x002e|r3.reader = r5\lsetCache(r6)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0038|if (getRowsPerStrip() != null) goto L_0x003c\l}"];
Node_6 [shape=record,label="{6\:\ 0x003a|r4 = true\l}"];
Node_7 [shape=record,label="{7\:\ 0x003c|r4 = false\l}"];
Node_8 [shape=record,label="{8\:\ 0x003d|PHI: r4 \l  PHI: (r4v3 boolean) = (r4v23 boolean), (r4v24 boolean) binds: [B:7:0x003c, B:6:0x003a] A[DONT_GENERATE, DONT_INLINE]\l|r3.tiled = r4\ljava.lang.Integer r4 = getPlanarConfiguration()\l}"];
Node_9 [shape=record,label="{9\:\ 0x0043|if (r4 == null) goto L_0x004a\l}"];
Node_10 [shape=record,label="{10\:\ 0x0045|int r4 = r4.intValue()\l}"];
Node_11 [shape=record,label="{11\:\ 0x004a|r4 = 1\l}"];
Node_12 [shape=record,label="{12\:\ 0x004b|PHI: r4 \l  PHI: (r4v5 int) = (r4v21 int), (r4v22 int) binds: [B:11:0x004a, B:10:0x0045] A[DONT_GENERATE, DONT_INLINE]\l|r3.planarConfiguration = r4\l}"];
Node_13 [shape=record,label="{13\:\ 0x004f|if (r3.planarConfiguration == 1) goto L_0x0070\l}"];
Node_14 [shape=record,label="{14\:\ 0x0051}"];
Node_15 [shape=record,label="{15\:\ 0x0054|if (r3.planarConfiguration != 2) goto L_0x0057\l}"];
Node_16 [shape=record,label="{16\:\ 0x0057|java.lang.StringBuilder r5 = new java.lang.StringBuilder()\lr5.append(\"Invalid planar configuration: \")\lr5.append(r3.planarConfiguration)\l}"];
Node_17 [shape=record,label="{17\:\ 0x006f|throw new mil.nga.tiff.util.TiffException(r5.toString())\l}"];
Node_18 [shape=record,label="{18\:\ 0x0070|java.lang.Integer r4 = getCompression()\l}"];
Node_19 [shape=record,label="{19\:\ 0x0074|if (r4 != null) goto L_0x007a\l}"];
Node_20 [shape=record,label="{20\:\ 0x0076|java.lang.Integer r4 = 1\l}"];
Node_21 [shape=record,label="{21\:\ 0x007a|PHI: r4 \l  PHI: (r4v8 java.lang.Integer) = (r4v7 java.lang.Integer), (r4v18 java.lang.Integer) binds: [B:19:0x0074, B:20:0x0076] A[DONT_GENERATE, DONT_INLINE]\l|int r5 = r4.intValue()\l}"];
Node_22 [shape=record,label="{22\:\ 0x0081|if (r5 == 32773) goto L_0x0116\l}"];
Node_23 [shape=record,label="{23\:\ 0x0083}"];
Node_24 [shape=record,label="{24\:\ 0x0086|if (r5 == 32946) goto L_0x010e\l}"];
Node_25 [shape=record,label="{25\:\ 0x0088|switch(r5) \{\l    case 1: goto L_0x0106;\l    case 2: goto L_0x00ef;\l    case 3: goto L_0x00d8;\l    case 4: goto L_0x00c1;\l    case 5: goto L_0x00b9;\l    case 6: goto L_0x00a2;\l    case 7: goto L_0x00a2;\l    case 8: goto L_0x010e;\l    default: goto L_0x008b;\l\}\l}"];
Node_26 [shape=record,label="{26\:\ 0x008b|java.lang.StringBuilder r6 = new java.lang.StringBuilder()\lr6.append(\"Unknown compression method identifier: \")\lr6.append(r4)\l}"];
Node_27 [shape=record,label="{27\:\ 0x00a1|throw new mil.nga.tiff.util.TiffException(r6.toString())\l}"];
Node_28 [shape=record,label="{28\:\ 0x00a2|java.lang.StringBuilder r6 = new java.lang.StringBuilder()\lr6.append(\"JPEG compression not supported: \")\lr6.append(r4)\l}"];
Node_29 [shape=record,label="{29\:\ 0x00b8|throw new mil.nga.tiff.util.TiffException(r6.toString())\l}"];
Node_30 [shape=record,label="{30\:\ 0x00b9|r3.decoder = new mil.nga.tiff.compression.LZWCompression()\l}"];
Node_31 [shape=record,label="{31\:\ 0x00c1|java.lang.StringBuilder r6 = new java.lang.StringBuilder()\lr6.append(\"T6\-encoding compression not supported: \")\lr6.append(r4)\l}"];
Node_32 [shape=record,label="{32\:\ 0x00d7|throw new mil.nga.tiff.util.TiffException(r6.toString())\l}"];
Node_33 [shape=record,label="{33\:\ 0x00d8|java.lang.StringBuilder r6 = new java.lang.StringBuilder()\lr6.append(\"T4\-encoding compression not supported: \")\lr6.append(r4)\l}"];
Node_34 [shape=record,label="{34\:\ 0x00ee|throw new mil.nga.tiff.util.TiffException(r6.toString())\l}"];
Node_35 [shape=record,label="{35\:\ 0x00ef|java.lang.StringBuilder r6 = new java.lang.StringBuilder()\lr6.append(\"CCITT Huffman compression not supported: \")\lr6.append(r4)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0105|throw new mil.nga.tiff.util.TiffException(r6.toString())\l}"];
Node_37 [shape=record,label="{37\:\ 0x0106|r3.decoder = new mil.nga.tiff.compression.RawCompression()\l}"];
Node_38 [shape=record,label="{38\:\ 0x010e|r3.decoder = new mil.nga.tiff.compression.DeflateCompression()\l}"];
Node_39 [shape=record,label="{39\:\ 0x0116|r3.decoder = new mil.nga.tiff.compression.PackbitsCompression()\l}"];
Node_40 [shape=record,label="{40\:\ 0x002e|SYNTHETIC\l}"];
Node_41 [shape=record,label="{41\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_42 [shape=record,label="{42\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_43 [shape=record,label="{43\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_44 [shape=record,label="{44\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void mil.nga.tiff.FileDirectory.\<init\>((r3v0 'this' mil.nga.tiff.FileDirectory A[IMMUTABLE_TYPE, THIS]), (r4v0 java.util.SortedSet\<mil.nga.tiff.FileDirectoryEntry\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 mil.nga.tiff.io.ByteReader A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/SortedSet\<, Lmil\/nga\/tiff\/FileDirectoryEntry;, \>;, Lmil\/nga\/tiff\/io\/ByteReader;, Z)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_40;
Node_3 -> Node_1;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_18;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_18[style=dashed];
Node_16 -> Node_17;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_39;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_38;
Node_25 -> Node_26;
Node_25 -> Node_28;
Node_25 -> Node_30;
Node_25 -> Node_31;
Node_25 -> Node_33;
Node_25 -> Node_35;
Node_25 -> Node_37;
Node_25 -> Node_38;
Node_26 -> Node_27;
Node_28 -> Node_29;
Node_30 -> Node_42;
Node_31 -> Node_32;
Node_33 -> Node_34;
Node_35 -> Node_36;
Node_37 -> Node_43;
Node_38 -> Node_44;
Node_39 -> Node_41;
Node_40 -> Node_4;
}

