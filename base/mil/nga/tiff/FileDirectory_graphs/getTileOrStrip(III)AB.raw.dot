digraph "CFG formil.nga.tiff.FileDirectory.getTileOrStrip(III)[B" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:java.lang.Number) = (r5 I:mil.nga.tiff.FileDirectory) mil.nga.tiff.FileDirectory.getImageWidth():java.lang.Number type: VIRTUAL \l0x0004: INVOKE  (r0 I:int) = (r0 I:java.lang.Number) java.lang.Number.intValue():int type: VIRTUAL \l0x0008: INVOKE  (r1 I:java.lang.Number) = (r5 I:mil.nga.tiff.FileDirectory) mil.nga.tiff.FileDirectory.getImageHeight():java.lang.Number type: VIRTUAL \l0x000c: INVOKE  (r1 I:int) = (r1 I:java.lang.Number) java.lang.Number.intValue():int type: VIRTUAL \l0x0010: INVOKE  (r2 I:java.lang.Number) = (r5 I:mil.nga.tiff.FileDirectory) mil.nga.tiff.FileDirectory.getTileWidth():java.lang.Number type: VIRTUAL \l0x0014: INVOKE  (r2 I:int) = (r2 I:java.lang.Number) java.lang.Number.intValue():int type: VIRTUAL \l0x0018: INVOKE  (r3 I:java.lang.Number) = (r5 I:mil.nga.tiff.FileDirectory) mil.nga.tiff.FileDirectory.getTileHeight():java.lang.Number type: VIRTUAL \l0x001c: INVOKE  (r3 I:int) = (r3 I:java.lang.Number) java.lang.Number.intValue():int type: VIRTUAL \l0x0020: ARITH  (r0 I:int) = (r0 I:int) + (r2 I:int) \l0x0021: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0022: ARITH  (r0 I:int) = (r0 I:int) \- (r4 I:int) \l0x0023: ARITH  (r0 I:int) = (r0 I:int) \/ (r2 I:int) \l0x0024: ARITH  (r1 I:int) = (r1 I:int) + (r3 I:int) \l0x0025: ARITH  (r1 I:int) = (r1 I:int) \- (r4 I:int) \l0x0026: ARITH  (r1 I:int) = (r1 I:int) \/ (r3 I:int) \l0x0027: IGET  (r2 I:int) = (r5 I:mil.nga.tiff.FileDirectory) mil.nga.tiff.FileDirectory.planarConfiguration int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0029|0x0029: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x002f \l}"];
Node_2 [shape=record,label="{2\:\ 0x002b|0x002b: ARITH  (r7 I:int) = (r7 I:int) * (r0 I:int) \l0x002d: ARITH  (r7 I:int) = (r7 I:int) + (r6 I:int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x002f|0x002f: IGET  (r2 I:int) = (r5 I:mil.nga.tiff.FileDirectory) mil.nga.tiff.FileDirectory.planarConfiguration int \l0x0031: CONST  (r3 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0032|0x0032: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x003e \l}"];
Node_5 [shape=record,label="{5\:\ 0x0034|0x0034: ARITH  (r8 I:int) = (r8 I:int) * (r0 I:int) \l0x0036: ARITH  (r8 I:int) = (r8 I:int) * (r1 I:int) \l0x0038: ARITH  (r7 I:int) = (r7 I:int) * (r0 I:int) \l0x003a: ARITH  (r8 I:int) = (r8 I:int) + (r7 I:int) \l0x003b: ARITH  (r7 I:int) = (r8 I:int) + (r6 I:int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x003e|0x003e: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x003f|0x003f: IGET  (r6 I:java.util.Map\<java.lang.Integer, byte[]\>) = (r5 I:mil.nga.tiff.FileDirectory) mil.nga.tiff.FileDirectory.cache java.util.Map \l}"];
Node_8 [shape=record,label="{8\:\ 0x0041|0x0041: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x005c \l}"];
Node_9 [shape=record,label="{9\:\ 0x0043|0x0043: IGET  (r6 I:java.util.Map\<java.lang.Integer, byte[]\>) = (r5 I:mil.nga.tiff.FileDirectory) mil.nga.tiff.FileDirectory.cache java.util.Map \l0x0045: INVOKE  (r8 I:java.lang.Integer) = (r7 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0049: INVOKE  (r6 I:boolean) = (r6 I:java.util.Map), (r8 I:java.lang.Object) java.util.Map.containsKey(java.lang.Object):boolean type: INTERFACE \l}"];
Node_10 [shape=record,label="{10\:\ 0x004d|0x004d: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x005c \l}"];
Node_11 [shape=record,label="{11\:\ 0x004f|0x004f: IGET  (r6 I:java.util.Map\<java.lang.Integer, byte[]\>) = (r5 I:mil.nga.tiff.FileDirectory) mil.nga.tiff.FileDirectory.cache java.util.Map \l0x0051: INVOKE  (r7 I:java.lang.Integer) = (r7 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0055: INVOKE  (r6 I:java.lang.Object) = (r6 I:java.util.Map), (r7 I:java.lang.Object) java.util.Map.get(java.lang.Object):java.lang.Object type: INTERFACE \l0x0059: CHECK_CAST  (r6 I:byte[]) = (byte[]) (r6 I:?[OBJECT, ARRAY]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x005c|0x005c: IGET  (r6 I:int) = (r5 I:mil.nga.tiff.FileDirectory) mil.nga.tiff.FileDirectory.lastBlockIndex int \l}"];
Node_13 [shape=record,label="{13\:\ 0x005e|0x005e: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0067 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0060|0x0060: IGET  (r6 I:byte[]) = (r5 I:mil.nga.tiff.FileDirectory) mil.nga.tiff.FileDirectory.lastBlock byte[] \l}"];
Node_15 [shape=record,label="{15\:\ 0x0062|0x0062: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0067 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0064|0x0064: IGET  (r6 I:byte[]) = (r5 I:mil.nga.tiff.FileDirectory) mil.nga.tiff.FileDirectory.lastBlock byte[] \l}"];
Node_17 [shape=record,label="{17\:\ 0x0067|0x0067: IGET  (r6 I:boolean) = (r5 I:mil.nga.tiff.FileDirectory) mil.nga.tiff.FileDirectory.tiled boolean \l}"];
Node_18 [shape=record,label="{18\:\ 0x0069|0x0069: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0088 \l}"];
Node_19 [shape=record,label="{19\:\ 0x006b|0x006b: INVOKE  (r6 I:java.util.List) = (r5 I:mil.nga.tiff.FileDirectory) mil.nga.tiff.FileDirectory.getTileOffsets():java.util.List type: VIRTUAL \l0x006f: INVOKE  (r6 I:java.lang.Object) = (r6 I:java.util.List), (r7 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0073: CHECK_CAST  (r6 I:java.lang.Long) = (java.lang.Long) (r6 I:?[OBJECT, ARRAY]) \l0x0075: INVOKE  (r6 I:int) = (r6 I:java.lang.Long) java.lang.Long.intValue():int type: VIRTUAL \l0x0079: INVOKE  (r8 I:java.util.List) = (r5 I:mil.nga.tiff.FileDirectory) mil.nga.tiff.FileDirectory.getTileByteCounts():java.util.List type: VIRTUAL \l0x007d: INVOKE  (r8 I:java.lang.Object) = (r8 I:java.util.List), (r7 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0081: CHECK_CAST  (r8 I:java.lang.Number) = (java.lang.Number) (r8 I:?[OBJECT, ARRAY]) \l0x0083: INVOKE  (r8 I:int) = (r8 I:java.lang.Number) java.lang.Number.intValue():int type: VIRTUAL \l}"];
Node_20 [shape=record,label="{20\:\ 0x0088|0x0088: INVOKE  (r6 I:java.util.List) = (r5 I:mil.nga.tiff.FileDirectory) mil.nga.tiff.FileDirectory.getStripOffsets():java.util.List type: VIRTUAL \l0x008c: INVOKE  (r6 I:java.lang.Object) = (r6 I:java.util.List), (r7 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0090: CHECK_CAST  (r6 I:java.lang.Number) = (java.lang.Number) (r6 I:?[OBJECT, ARRAY]) \l0x0092: INVOKE  (r6 I:int) = (r6 I:java.lang.Number) java.lang.Number.intValue():int type: VIRTUAL \l0x0096: INVOKE  (r8 I:java.util.List) = (r5 I:mil.nga.tiff.FileDirectory) mil.nga.tiff.FileDirectory.getStripByteCounts():java.util.List type: VIRTUAL \l0x009a: INVOKE  (r8 I:java.lang.Object) = (r8 I:java.util.List), (r7 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x009e: CHECK_CAST  (r8 I:java.lang.Number) = (java.lang.Number) (r8 I:?[OBJECT, ARRAY]) \l0x00a0: INVOKE  (r8 I:int) = (r8 I:java.lang.Number) java.lang.Number.intValue():int type: VIRTUAL \l}"];
Node_21 [shape=record,label="{21\:\ 0x00a4|0x00a4: IGET  (r0 I:mil.nga.tiff.io.ByteReader) = (r5 I:mil.nga.tiff.FileDirectory) mil.nga.tiff.FileDirectory.reader mil.nga.tiff.io.ByteReader \l0x00a6: INVOKE  (r0 I:mil.nga.tiff.io.ByteReader), (r6 I:int) mil.nga.tiff.io.ByteReader.setNextByte(int):void type: VIRTUAL \l0x00a9: IGET  (r6 I:mil.nga.tiff.io.ByteReader) = (r5 I:mil.nga.tiff.FileDirectory) mil.nga.tiff.FileDirectory.reader mil.nga.tiff.io.ByteReader \l0x00ab: INVOKE  (r6 I:byte[]) = (r6 I:mil.nga.tiff.io.ByteReader), (r8 I:int) mil.nga.tiff.io.ByteReader.readBytes(int):byte[] type: VIRTUAL \l0x00af: IGET  (r8 I:mil.nga.tiff.compression.CompressionDecoder) = (r5 I:mil.nga.tiff.FileDirectory) mil.nga.tiff.FileDirectory.decoder mil.nga.tiff.compression.CompressionDecoder \l0x00b1: IGET  (r0 I:mil.nga.tiff.io.ByteReader) = (r5 I:mil.nga.tiff.FileDirectory) mil.nga.tiff.FileDirectory.reader mil.nga.tiff.io.ByteReader \l0x00b3: INVOKE  (r0 I:java.nio.ByteOrder) = (r0 I:mil.nga.tiff.io.ByteReader) mil.nga.tiff.io.ByteReader.getByteOrder():java.nio.ByteOrder type: VIRTUAL \l0x00b7: INVOKE  (r6 I:byte[]) = \l  (r8 I:mil.nga.tiff.compression.CompressionDecoder)\l  (r6 I:byte[])\l  (r0 I:java.nio.ByteOrder)\l mil.nga.tiff.compression.CompressionDecoder.decode(byte[], java.nio.ByteOrder):byte[] type: INTERFACE \l0x00bb: IGET  (r8 I:java.util.Map\<java.lang.Integer, byte[]\>) = (r5 I:mil.nga.tiff.FileDirectory) mil.nga.tiff.FileDirectory.cache java.util.Map \l}"];
Node_22 [shape=record,label="{22\:\ 0x00bd|0x00bd: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x00c9 \l}"];
Node_23 [shape=record,label="{23\:\ 0x00bf|0x00bf: IGET  (r8 I:java.util.Map\<java.lang.Integer, byte[]\>) = (r5 I:mil.nga.tiff.FileDirectory) mil.nga.tiff.FileDirectory.cache java.util.Map \l0x00c1: INVOKE  (r7 I:java.lang.Integer) = (r7 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x00c5: INVOKE  \l  (r8 I:java.util.Map)\l  (r7 I:java.lang.Object)\l  (r6 I:java.lang.Object)\l java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE \l}"];
Node_24 [shape=record,label="{24\:\ 0x00c9|0x00c9: IPUT  (r7 I:int), (r5 I:mil.nga.tiff.FileDirectory) mil.nga.tiff.FileDirectory.lastBlockIndex int \l0x00cb: IPUT  (r6 I:byte[]), (r5 I:mil.nga.tiff.FileDirectory) mil.nga.tiff.FileDirectory.lastBlock byte[] \l}"];
Node_25 [shape=record,label="{25\:\ 0x00cd|0x00cd: RETURN  (r6 I:byte[]) \l}"];
MethodNode[shape=record,label="{private byte[] mil.nga.tiff.FileDirectory.getTileOrStrip((r5 'this' I:mil.nga.tiff.FileDirectory A[IMMUTABLE_TYPE, THIS]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_12;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_25;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_25;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_25;
Node_24 -> Node_25;
}

