digraph "CFG formil.nga.tiff.FileDirectory.setCache(Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000e \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IGET  (r1 I:java.util.Map\<java.lang.Integer, byte[]\>) = (r0 I:mil.nga.tiff.FileDirectory) mil.nga.tiff.FileDirectory.cache java.util.Map \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0011 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: NEW_INSTANCE  (r1 I:java.util.HashMap) =  java.util.HashMap \l0x0008: INVOKE  (r1 I:java.util.HashMap) java.util.HashMap.\<init\>():void type: DIRECT \l0x000b: IPUT  \l  (r1 I:java.util.Map\<java.lang.Integer, byte[]\>)\l  (r0 I:mil.nga.tiff.FileDirectory)\l mil.nga.tiff.FileDirectory.cache java.util.Map \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000f: IPUT  \l  (r1 I:java.util.Map\<java.lang.Integer, byte[]\>)\l  (r0 I:mil.nga.tiff.FileDirectory)\l mil.nga.tiff.FileDirectory.cache java.util.Map \l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: RETURN   \l}"];
MethodNode[shape=record,label="{public void mil.nga.tiff.FileDirectory.setCache((r0 'this' I:mil.nga.tiff.FileDirectory A[IMMUTABLE_TYPE, THIS]), (r1 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_4;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_5;
Node_3 -> Node_5;
Node_4 -> Node_5;
}

