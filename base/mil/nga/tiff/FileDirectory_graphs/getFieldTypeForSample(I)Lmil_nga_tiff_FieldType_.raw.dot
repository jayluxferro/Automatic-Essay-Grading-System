digraph "CFG formil.nga.tiff.FileDirectory.getFieldTypeForSample(I)Lmil\/nga\/tiff\/FieldType;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:java.util.List) = (r2 I:mil.nga.tiff.FileDirectory) mil.nga.tiff.FileDirectory.getSampleFormat():java.util.List type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0008 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: INVOKE  (r1 I:int) = (r0 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: IF  (r3 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:6:0x0010 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|0x0011: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.List), (r1 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0015: CHECK_CAST  (r0 I:java.lang.Integer) = (java.lang.Integer) (r0 I:?[OBJECT, ARRAY]) \l0x0017: INVOKE  (r0 I:int) = (r0 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x001b|0x001b: INVOKE  (r1 I:java.util.List) = (r2 I:mil.nga.tiff.FileDirectory) mil.nga.tiff.FileDirectory.getBitsPerSample():java.util.List type: VIRTUAL \l0x001f: INVOKE  (r3 I:java.lang.Object) = (r1 I:java.util.List), (r3 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0023: CHECK_CAST  (r3 I:java.lang.Integer) = (java.lang.Integer) (r3 I:?[OBJECT, ARRAY]) \l0x0025: INVOKE  (r3 I:int) = (r3 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l0x0029: INVOKE  (r3 I:mil.nga.tiff.FieldType) = (r0 I:int), (r3 I:int) mil.nga.tiff.FieldType.getFieldType(int, int):mil.nga.tiff.FieldType type: STATIC \l}"];
Node_9 [shape=record,label="{9\:\ 0x002d|0x002d: RETURN  (r3 I:mil.nga.tiff.FieldType) \l}"];
MethodNode[shape=record,label="{public mil.nga.tiff.FieldType mil.nga.tiff.FileDirectory.getFieldTypeForSample((r2 'this' I:mil.nga.tiff.FileDirectory A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_8;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9;
}

