digraph "CFG formil.nga.tiff.FileDirectory.readRaster(Lmil\/nga\/tiff\/ImageWindow;[ILmil\/nga\/tiff\/Rasters;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r26 I:?[OBJECT, ARRAY]) \l0x0002: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r28 I:?[OBJECT, ARRAY]) \l0x0004: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r29 I:?[OBJECT, ARRAY]) \l0x0006: INVOKE  (r3 I:java.lang.Number) = (r26 I:mil.nga.tiff.FileDirectory) mil.nga.tiff.FileDirectory.getTileWidth():java.lang.Number type: VIRTUAL \l0x000a: INVOKE  (r3 I:int) = (r3 I:java.lang.Number) java.lang.Number.intValue():int type: VIRTUAL \l0x000e: INVOKE  (r4 I:java.lang.Number) = (r26 I:mil.nga.tiff.FileDirectory) mil.nga.tiff.FileDirectory.getTileHeight():java.lang.Number type: VIRTUAL \l0x0012: INVOKE  (r4 I:int) = (r4 I:java.lang.Number) java.lang.Number.intValue():int type: VIRTUAL \l0x0016: INVOKE  (r5 I:int) = (r27 I:mil.nga.tiff.ImageWindow) mil.nga.tiff.ImageWindow.getMinX():int type: VIRTUAL \l0x001a: ARITH  (r5 I:int) = (r5 I:int) \/ (r3 I:int) \l0x001b: INVOKE  (r6 I:int) = (r27 I:mil.nga.tiff.ImageWindow) mil.nga.tiff.ImageWindow.getMaxX():int type: VIRTUAL \l0x001f: ARITH  (r6 I:int) = (r6 I:int) + (r3 I:int) \l0x0020: CONST  (r7 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0021: ARITH  (r6 I:int) = (r6 I:int) \- (r7 I:int) \l0x0022: ARITH  (r6 I:int) = (r6 I:int) \/ (r3 I:int) \l0x0023: INVOKE  (r8 I:int) = (r27 I:mil.nga.tiff.ImageWindow) mil.nga.tiff.ImageWindow.getMinY():int type: VIRTUAL \l0x0027: ARITH  (r8 I:int) = (r8 I:int) \/ (r4 I:int) \l0x0028: INVOKE  (r9 I:int) = (r27 I:mil.nga.tiff.ImageWindow) mil.nga.tiff.ImageWindow.getMaxY():int type: VIRTUAL \l0x002c: ARITH  (r9 I:int) = (r9 I:int) + (r4 I:int) \l0x002d: ARITH  (r9 I:int) = (r9 I:int) \- (r7 I:int) \l0x002e: ARITH  (r9 I:int) = (r9 I:int) \/ (r4 I:int) \l0x002f: INVOKE  (r10 I:int) = (r27 I:mil.nga.tiff.ImageWindow) mil.nga.tiff.ImageWindow.getMaxX():int type: VIRTUAL \l0x0033: INVOKE  (r11 I:int) = (r27 I:mil.nga.tiff.ImageWindow) mil.nga.tiff.ImageWindow.getMinX():int type: VIRTUAL \l0x0037: ARITH  (r10 I:int) = (r10 I:int) \- (r11 I:int) \l0x0038: INVOKE  (r11 I:int) = (r26 I:mil.nga.tiff.FileDirectory) mil.nga.tiff.FileDirectory.getBytesPerPixel():int type: DIRECT \l0x003c: ARRAY_LENGTH  (r12 I:int) = (r1 I:?[]) \l0x003d: NEW_ARRAY  (r12 I:int[]) = (r12 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x003f: ARRAY_LENGTH  (r13 I:int) = (r1 I:?[]) \l0x0040: NEW_ARRAY  (r13 I:mil.nga.tiff.FieldType[]) = (r13 I:int A[IMMUTABLE_TYPE]) type: mil.nga.tiff.FieldType[] \l0x0042: CONST  (r15 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0043|0x0043: ARRAY_LENGTH  (r14 I:int) = (r1 I:?[]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0044|0x0044: IF  (r15 I:?[int, byte, short, char]) \>= (r14 I:?[int, byte, short, char])  \-\> B:8:0x006d \l}"];
Node_3 [shape=record,label="{3\:\ 0x0046|0x0046: IGET  (r14 I:int) = (r0 I:mil.nga.tiff.FileDirectory) mil.nga.tiff.FileDirectory.planarConfiguration int \l}"];
Node_4 [shape=record,label="{4\:\ 0x0048|0x0048: IF  (r14 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x005a \l}"];
Node_5 [shape=record,label="{5\:\ 0x004a|0x004a: INVOKE  (r14 I:java.util.List) = (r26 I:mil.nga.tiff.FileDirectory) mil.nga.tiff.FileDirectory.getBitsPerSample():java.util.List type: VIRTUAL \l0x004e: AGET  (r7 I:?[int, float]) = (r1 I:?[int, float][]), (r15 I:?[int, short, byte, char]) \l0x0050: MOVE  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0052: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0053: INVOKE  (r7 I:int) = \l  (r0 I:mil.nga.tiff.FileDirectory)\l  (r14 I:java.util.List)\l  (r5 I:int)\l  (r7 I:int)\l mil.nga.tiff.FileDirectory.sum(java.util.List, int, int):int type: DIRECT \l0x0057: ARITH  (r14 I:int) = (r7 I:int) \/ (8 int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x005a|0x005a: MOVE  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x005c: CONST  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x005d|0x005d: APUT  \l  (r12 I:?[int, float][])\l  (r15 I:?[int, short, byte, char])\l  (r14 I:?[int, float])\l \l0x005f: AGET  (r5 I:?[int, float]) = (r1 I:?[int, float][]), (r15 I:?[int, short, byte, char]) \l0x0061: INVOKE  (r5 I:mil.nga.tiff.FieldType) = (r0 I:mil.nga.tiff.FileDirectory), (r5 I:int) mil.nga.tiff.FileDirectory.getFieldTypeForSample(int):mil.nga.tiff.FieldType type: VIRTUAL \l0x0065: APUT  \l  (r13 I:?[OBJECT, ARRAY][])\l  (r15 I:?[int, short, byte, char])\l  (r5 I:?[OBJECT, ARRAY])\l \l0x0067: ARITH  (r15 I:int) = (r15 I:int) + (1 int) \l0x0069: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x006b: CONST  (r7 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x006d|0x006d: MOVE  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x006f|0x006f: IF  (r8 I:?[int, byte, short, char]) \>= (r9 I:?[int, byte, short, char])  \-\> B:35:0x0157 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0071|0x0071: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_11 [shape=record,label="{11\:\ 0x0073|0x0073: IF  (r5 I:?[int, byte, short, char]) \>= (r6 I:?[int, byte, short, char])  \-\> B:34:0x0149 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0075|0x0075: ARITH  (r7 I:int) = (r8 I:int) * (r4 I:int) \l0x0077: ARITH  (r14 I:int) = (r5 I:int) * (r3 I:int) \l0x0079: ARITH  (r15 I:int) = (r8 I:int) + (1 int) \l0x007b: ARITH  (r15 I:int) = (r15 I:int) * (r4 I:int) \l0x007d: ARITH  (r17 I:int) = (r5 I:int) + (1 int) \l0x007f: ARITH  (r19 I:int) = (r17 I:int) * (r3 I:int) \l0x0081: MOVE  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0083: MOVE  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0085: CONST  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x0086|0x0086: ARRAY_LENGTH  (r6 I:int) = (r1 I:?[]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0087|0x0087: IF  (r11 I:?[int, byte, short, char]) \>= (r6 I:?[int, byte, short, char])  \-\> B:33:0x013d \l}"];
Node_15 [shape=record,label="{15\:\ 0x0089|0x0089: AGET  (r6 I:?[int, float]) = (r1 I:?[int, float][]), (r11 I:?[int, short, byte, char]) \l0x008b: IGET  (r1 I:int) = (r0 I:mil.nga.tiff.FileDirectory) mil.nga.tiff.FileDirectory.planarConfiguration int \l0x008d: MOVE  (r22 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x008f: CONST  (r9 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0090|0x0090: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0098 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0092|0x0092: INVOKE  (r1 I:int) = (r0 I:mil.nga.tiff.FileDirectory), (r6 I:int) mil.nga.tiff.FileDirectory.getSampleByteSize(int):int type: DIRECT \l0x0096: MOVE  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_18 [shape=record,label="{18\:\ 0x0098|0x0098: INVOKE  (r1 I:byte[]) = \l  (r0 I:mil.nga.tiff.FileDirectory)\l  (r5 I:int)\l  (r8 I:int)\l  (r6 I:int)\l mil.nga.tiff.FileDirectory.getTileOrStrip(int, int, int):byte[] type: DIRECT \l0x009c: NEW_INSTANCE  (r6 I:mil.nga.tiff.io.ByteReader) =  mil.nga.tiff.io.ByteReader \l0x009e: IGET  (r9 I:mil.nga.tiff.io.ByteReader) = (r0 I:mil.nga.tiff.FileDirectory) mil.nga.tiff.FileDirectory.reader mil.nga.tiff.io.ByteReader \l0x00a0: INVOKE  (r9 I:java.nio.ByteOrder) = (r9 I:mil.nga.tiff.io.ByteReader) mil.nga.tiff.io.ByteReader.getByteOrder():java.nio.ByteOrder type: VIRTUAL \l0x00a4: INVOKE  \l  (r6 I:mil.nga.tiff.io.ByteReader)\l  (r1 I:byte[])\l  (r9 I:java.nio.ByteOrder)\l mil.nga.tiff.io.ByteReader.\<init\>(byte[], java.nio.ByteOrder):void type: DIRECT \l0x00a7: INVOKE  (r1 I:int) = (r27 I:mil.nga.tiff.ImageWindow) mil.nga.tiff.ImageWindow.getMinY():int type: VIRTUAL \l0x00ab: ARITH  (r1 I:int) = (r1 I:int) \- (r7 I:int) \l0x00ac: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00ad: INVOKE  (r1 I:int) = (r9 I:int), (r1 I:int) java.lang.Math.max(int, int):int type: STATIC \l}"];
Node_19 [shape=record,label="{19\:\ 0x00b1|0x00b1: INVOKE  (r16 I:int) = (r27 I:mil.nga.tiff.ImageWindow) mil.nga.tiff.ImageWindow.getMaxY():int type: VIRTUAL \l0x00b5: ARITH  (r16 I:int) = (r15 I:int) \- (r16 I:int) \l0x00b7: ARITH  (r9 I:int) = (r4 I:int) \- (r16 I:int) \l0x00b9: INVOKE  (r9 I:int) = (r4 I:int), (r9 I:int) java.lang.Math.min(int, int):int type: STATIC \l}"];
Node_20 [shape=record,label="{20\:\ 0x00bd|0x00bd: IF  (r1 I:?[int, byte, short, char]) \>= (r9 I:?[int, byte, short, char])  \-\> B:32:0x0131 \l}"];
Node_21 [shape=record,label="{21\:\ 0x00bf|0x00bf: INVOKE  (r9 I:int) = (r27 I:mil.nga.tiff.ImageWindow) mil.nga.tiff.ImageWindow.getMinX():int type: VIRTUAL \l0x00c3: ARITH  (r9 I:int) = (r9 I:int) \- (r14 I:int) \l0x00c4: MOVE  (r24 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00c6: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00c7: INVOKE  (r9 I:int) = (r4 I:int), (r9 I:int) java.lang.Math.max(int, int):int type: STATIC \l}"];
Node_22 [shape=record,label="{22\:\ 0x00cb|0x00cb: INVOKE  (r16 I:int) = (r27 I:mil.nga.tiff.ImageWindow) mil.nga.tiff.ImageWindow.getMaxX():int type: VIRTUAL \l0x00cf: ARITH  (r16 I:int) = (r19 I:int) \- (r16 I:int) \l0x00d1: ARITH  (r4 I:int) = (r3 I:int) \- (r16 I:int) \l0x00d3: INVOKE  (r4 I:int) = (r3 I:int), (r4 I:int) java.lang.Math.min(int, int):int type: STATIC \l}"];
Node_23 [shape=record,label="{23\:\ 0x00d7|0x00d7: IF  (r9 I:?[int, byte, short, char]) \>= (r4 I:?[int, byte, short, char])  \-\> B:31:0x0129 \l}"];
Node_24 [shape=record,label="{24\:\ 0x00d9|0x00d9: ARITH  (r4 I:int) = (r1 I:int) * (r3 I:int) \l0x00db: ARITH  (r4 I:int) = (r4 I:int) + (r9 I:int) \l0x00dc: ARITH  (r4 I:int) = (r4 I:int) * (r20 I:int) \l0x00de: AGET  (r16 I:?[int, float]) = (r12 I:?[int, float][]), (r11 I:?[int, short, byte, char]) \l0x00e0: ARITH  (r4 I:int) = (r4 I:int) + (r16 I:int) \l0x00e2: INVOKE  (r6 I:mil.nga.tiff.io.ByteReader), (r4 I:int) mil.nga.tiff.io.ByteReader.setNextByte(int):void type: VIRTUAL \l0x00e5: AGET  (r4 I:?[OBJECT, ARRAY]) = \l  (r13 I:?[OBJECT, ARRAY][])\l  (r11 I:?[int, short, byte, char])\l \l0x00e7: INVOKE  (r4 I:java.lang.Number) = \l  (r0 I:mil.nga.tiff.FileDirectory)\l  (r6 I:mil.nga.tiff.io.ByteReader)\l  (r4 I:mil.nga.tiff.FieldType)\l mil.nga.tiff.FileDirectory.readValue(mil.nga.tiff.io.ByteReader, mil.nga.tiff.FieldType):java.lang.Number type: DIRECT \l0x00eb: INVOKE  (r16 I:boolean) = (r29 I:mil.nga.tiff.Rasters) mil.nga.tiff.Rasters.hasInterleaveValues():boolean type: VIRTUAL \l}"];
Node_25 [shape=record,label="{25\:\ 0x00ef|0x00ef: IF  (r16 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0108 \l}"];
Node_26 [shape=record,label="{26\:\ 0x00f1|0x00f1: ARITH  (r16 I:int) = (r1 I:int) + (r7 I:int) \l0x00f3: INVOKE  (r23 I:int) = (r27 I:mil.nga.tiff.ImageWindow) mil.nga.tiff.ImageWindow.getMinY():int type: VIRTUAL \l0x00f7: ARITH  (r16 I:int) = (r16 I:int) \- (r23 I:int) \l0x00f9: ARITH  (r16 I:int) = (r16 I:int) * (r10 I:int) \l0x00fb: ARITH  (r23 I:int) = (r9 I:int) + (r14 I:int) \l0x00fd: INVOKE  (r25 I:int) = (r27 I:mil.nga.tiff.ImageWindow) mil.nga.tiff.ImageWindow.getMinX():int type: VIRTUAL \l0x0101: ARITH  (r23 I:int) = (r23 I:int) \- (r25 I:int) \l0x0103: ARITH  (r0 I:int) = (r16 I:int) + (r23 I:int) \l0x0105: INVOKE  \l  (r2 I:mil.nga.tiff.Rasters)\l  (r11 I:int)\l  (r0 I:int)\l  (r4 I:java.lang.Number)\l mil.nga.tiff.Rasters.addToInterleave(int, int, java.lang.Number):void type: VIRTUAL \l}"];
Node_27 [shape=record,label="{27\:\ 0x0108|0x0108: INVOKE  (r0 I:boolean) = (r29 I:mil.nga.tiff.Rasters) mil.nga.tiff.Rasters.hasSampleValues():boolean type: VIRTUAL \l}"];
Node_28 [shape=record,label="{28\:\ 0x010c|0x010c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x0123 \l}"];
Node_29 [shape=record,label="{29\:\ 0x010e|0x010e: ARITH  (r0 I:int) = (r1 I:int) + (r7 I:int) \l0x0110: INVOKE  (r16 I:int) = (r27 I:mil.nga.tiff.ImageWindow) mil.nga.tiff.ImageWindow.getMinY():int type: VIRTUAL \l0x0114: ARITH  (r0 I:int) = (r0 I:int) \- (r16 I:int) \l0x0116: ARITH  (r0 I:int) = (r0 I:int) * (r10 I:int) \l0x0118: ARITH  (r0 I:int) = (r0 I:int) + (r9 I:int) \l0x0119: ARITH  (r0 I:int) = (r0 I:int) + (r14 I:int) \l0x011a: INVOKE  (r16 I:int) = (r27 I:mil.nga.tiff.ImageWindow) mil.nga.tiff.ImageWindow.getMinX():int type: VIRTUAL \l0x011e: ARITH  (r0 I:int) = (r0 I:int) \- (r16 I:int) \l0x0120: INVOKE  \l  (r2 I:mil.nga.tiff.Rasters)\l  (r11 I:int)\l  (r0 I:int)\l  (r4 I:java.lang.Number)\l mil.nga.tiff.Rasters.addToSample(int, int, java.lang.Number):void type: VIRTUAL \l}"];
Node_30 [shape=record,label="{30\:\ 0x0123|0x0123: ARITH  (r9 I:int) = (r9 I:int) + (1 int) \l0x0125: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r26 I:?[OBJECT, ARRAY]) \l0x0127: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_31 [shape=record,label="{31\:\ 0x0129|0x0129: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l0x012b: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r24 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x012d: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r26 I:?[OBJECT, ARRAY]) \l0x012f: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_32 [shape=record,label="{32\:\ 0x0131|0x0131: MOVE  (r24 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0133: ARITH  (r11 I:int) = (r11 I:int) + (1 int) \l0x0135: MOVE  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r22 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0137: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r26 I:?[OBJECT, ARRAY]) \l0x0139: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r28 I:?[OBJECT, ARRAY]) \l}"];
Node_33 [shape=record,label="{33\:\ 0x013d|0x013d: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x013f: MOVE  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0141: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0143: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r26 I:?[OBJECT, ARRAY]) \l0x0145: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r28 I:?[OBJECT, ARRAY]) \l}"];
Node_34 [shape=record,label="{34\:\ 0x0149|0x0149: MOVE  (r24 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x014b: MOVE  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x014d: MOVE  (r22 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x014f: ARITH  (r8 I:int) = (r8 I:int) + (1 int) \l0x0151: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r26 I:?[OBJECT, ARRAY]) \l0x0153: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r28 I:?[OBJECT, ARRAY]) \l}"];
Node_35 [shape=record,label="{35\:\ 0x0157|0x0157: RETURN   \l}"];
MethodNode[shape=record,label="{private void mil.nga.tiff.FileDirectory.readRaster((r26 'this' I:mil.nga.tiff.FileDirectory A[IMMUTABLE_TYPE, THIS]), (r27 I:mil.nga.tiff.ImageWindow A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r28 I:int[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r29 I:mil.nga.tiff.Rasters A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_8;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_1;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_35;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_34;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_33;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_32;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_31;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_30;
Node_30 -> Node_22;
Node_31 -> Node_19;
Node_32 -> Node_13;
Node_33 -> Node_11;
Node_34 -> Node_9;
}

