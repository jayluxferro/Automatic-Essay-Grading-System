digraph "CFG formil.nga.tiff.FileDirectory.readRasters(Lmil\/nga\/tiff\/ImageWindow;[IZZ)Lmil\/nga\/tiff\/Rasters;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = getImageWidth().intValue()\lint r1 = getImageHeight().intValue()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0014|if (r10.getMinX() \< 0) goto L_0x0112\l}"];
Node_2 [shape=record,label="{2\:\ 0x0016}"];
Node_3 [shape=record,label="{3\:\ 0x001a|if (r10.getMinY() \< 0) goto L_0x0112\l}"];
Node_4 [shape=record,label="{4\:\ 0x001c}"];
Node_5 [shape=record,label="{5\:\ 0x0020|if (r10.getMaxX() \> r0) goto L_0x0112\l}"];
Node_6 [shape=record,label="{6\:\ 0x0022}"];
Node_7 [shape=record,label="{7\:\ 0x0026|if (r10.getMaxY() \> r1) goto L_0x0112\l}"];
Node_8 [shape=record,label="{8\:\ 0x0028}"];
Node_9 [shape=record,label="{9\:\ 0x0030|if (r10.getMinX() \> r10.getMaxX()) goto L_0x00fb\l}"];
Node_10 [shape=record,label="{10\:\ 0x0032}"];
Node_11 [shape=record,label="{11\:\ 0x003a|if (r10.getMinY() \> r10.getMaxY()) goto L_0x00fb\l}"];
Node_12 [shape=record,label="{12\:\ 0x003c|int r3 = r10.getMaxX() \- r10.getMinX()\lint r4 = r10.getMaxY() \- r10.getMinY()\lint r0 = r3 * r4\lint r1 = getSamplesPerPixel()\lr2 = 0\l}"];
Node_13 [shape=record,label="{13\:\ 0x0057|if (r11 != null) goto L_0x0064\l}"];
Node_14 [shape=record,label="{14\:\ 0x0059|int[] r11 = new int[r1]\lr5 = 0\l}"];
Node_15 [shape=record,label="{15\:\ 0x005c|LOOP_START\lPHI: r5 \l  PHI: (r5v6 int) = (r5v5 int), (r5v7 int) binds: [B:14:0x0059, B:17:0x005f] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:15:0x005c\-\>B:17:0x005f\l}"];
Node_16 [shape=record,label="{16\:\ 0x005d|if (r5 \>= r11.length) goto L_0x0088\l}"];
Node_17 [shape=record,label="{17\:\ 0x005f|LOOP_END\lLOOP:0: B:15:0x005c\-\>B:17:0x005f\l|r11[r5] = r5\lint r5 = r5 + 1\l}"];
Node_18 [shape=record,label="{18\:\ 0x0064|r5 = 0\l}"];
Node_19 [shape=record,label="{19\:\ 0x0065|LOOP_START\lPHI: r5 \l  PHI: (r5v3 int) = (r5v2 int), (r5v4 int) binds: [B:18:0x0064, B:23:0x006c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:19:0x0065\-\>B:23:0x006c\l}"];
Node_20 [shape=record,label="{20\:\ 0x0066|if (r5 \>= r11.length) goto L_0x0088\l}"];
Node_21 [shape=record,label="{21\:\ 0x0068}"];
Node_22 [shape=record,label="{22\:\ 0x006a|if (r11[r5] \>= r1) goto L_0x006f\l}"];
Node_23 [shape=record,label="{23\:\ 0x006c|LOOP_END\lLOOP:1: B:19:0x0065\-\>B:23:0x006c\l|int r5 = r5 + 1\l}"];
Node_24 [shape=record,label="{24\:\ 0x006f|java.lang.StringBuilder r12 = new java.lang.StringBuilder()\lr12.append(\"Invalid sample index: \")\lr12.append(r11[r5])\l}"];
Node_25 [shape=record,label="{25\:\ 0x0087|throw new mil.nga.tiff.util.TiffException(r12.toString())\l}"];
Node_26 [shape=record,label="{26\:\ 0x0088|PHI: r11 \l  PHI: (r11v3 int[]) = (r11v0 int[]), (r11v6 int[]) binds: [B:50:0x0088, B:49:0x0088] A[DONT_GENERATE, DONT_INLINE]\l|java.util.List r5 = getBitsPerSample()\lr6 = 0\lr7 = 0\l}"];
Node_27 [shape=record,label="{27\:\ 0x008e|LOOP_START\lPHI: r6 r7 \l  PHI: (r6v1 int) = (r6v0 int), (r6v7 int) binds: [B:26:0x0088, B:28:0x0090] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r7v1 int) = (r7v0 int), (r7v8 int) binds: [B:26:0x0088, B:28:0x0090] A[DONT_GENERATE, DONT_INLINE]\lLOOP:2: B:27:0x008e\-\>B:28:0x0090\l|if (r6 \>= r1) goto L_0x00a0\l}"];
Node_28 [shape=record,label="{28\:\ 0x0090|LOOP_END\lLOOP:2: B:27:0x008e\-\>B:28:0x0090\l|int r7 = r7 + (r5.get(r6).intValue() \/ 8)\lint r6 = r6 + 1\l}"];
Node_29 [shape=record,label="{29\:\ 0x00a0|r6 = null\l}"];
Node_30 [shape=record,label="{30\:\ 0x00a1|if (r13 == false) goto L_0x00b4\l}"];
Node_31 [shape=record,label="{31\:\ 0x00a3|java.nio.ByteBuffer r13 = java.nio.ByteBuffer.allocateDirect(r7 * r0)\lr13.order(r9.reader.getByteOrder())\lr7 = r13\l}"];
Node_32 [shape=record,label="{32\:\ 0x00b4|r7 = null\l}"];
Node_33 [shape=record,label="{33\:\ 0x00b5|PHI: r7 \l  PHI: (r7v2 java.nio.ByteBuffer) = (r7v3 java.nio.ByteBuffer), (r7v7 java.nio.ByteBuffer) binds: [B:32:0x00b4, B:31:0x00a3] A[DONT_GENERATE, DONT_INLINE]\l|if (r12 == false) goto L_0x00e0\l}"];
Node_34 [shape=record,label="{34\:\ 0x00b7|java.nio.ByteBuffer[] r12 = new java.nio.ByteBuffer[r1]\lr13 = 0\l}"];
Node_35 [shape=record,label="{35\:\ 0x00ba|LOOP_START\lPHI: r13 \l  PHI: (r13v6 int) = (r13v5 int), (r13v7 int) binds: [B:34:0x00b7, B:37:0x00bd] A[DONT_GENERATE, DONT_INLINE]\lLOOP:3: B:35:0x00ba\-\>B:37:0x00bd\l}"];
Node_36 [shape=record,label="{36\:\ 0x00bb|if (r13 \>= r12.length) goto L_0x00df\l}"];
Node_37 [shape=record,label="{37\:\ 0x00bd|LOOP_END\lLOOP:3: B:35:0x00ba\-\>B:37:0x00bd\l|r12[r13] = java.nio.ByteBuffer.allocateDirect((r5.get(r13).intValue() * r0) \/ 8)\lr12[r13].order(r9.reader.getByteOrder())\lint r13 = r13 + 1\l}"];
Node_38 [shape=record,label="{38\:\ 0x00df|r6 = r12\l}"];
Node_39 [shape=record,label="{39\:\ 0x00e0|PHI: r6 \l  PHI: (r6v3 java.nio.ByteBuffer[]) = (r6v2 java.nio.ByteBuffer[]), (r6v4 java.nio.ByteBuffer[]) binds: [B:33:0x00b5, B:38:0x00df] A[DONT_GENERATE, DONT_INLINE]\l|mil.nga.tiff.FieldType[] r5 = new mil.nga.tiff.FieldType[r11.length]\l}"];
Node_40 [shape=record,label="{40\:\ 0x00e3|LOOP_START\lPHI: r2 \l  PHI: (r2v5 int) = (r2v4 int), (r2v7 int) binds: [B:39:0x00e0, B:42:0x00e6] A[DONT_GENERATE, DONT_INLINE]\lLOOP:4: B:40:0x00e3\-\>B:42:0x00e6\l}"];
Node_41 [shape=record,label="{41\:\ 0x00e4|if (r2 \>= r11.length) goto L_0x00f1\l}"];
Node_42 [shape=record,label="{42\:\ 0x00e6|LOOP_END\lLOOP:4: B:40:0x00e3\-\>B:42:0x00e6\l|r5[r2] = getFieldTypeForSample(r11[r2])\lint r2 = r2 + 1\l}"];
Node_43 [shape=record,label="{43\:\ 0x00f1|mil.nga.tiff.Rasters r2 = new mil.nga.tiff.Rasters(r3, r4, r5, r6, r7)\lreadRaster(r10, r11, r2)\l}"];
Node_44 [shape=record,label="{44\:\ 0x00fa|RETURN\l|return r2\l}"];
Node_45 [shape=record,label="{45\:\ 0x00fb|java.lang.StringBuilder r12 = new java.lang.StringBuilder()\lr12.append(\"Invalid window range: \")\lr12.append(r10)\l}"];
Node_46 [shape=record,label="{46\:\ 0x0111|throw new mil.nga.tiff.util.TiffException(r12.toString())\l}"];
Node_47 [shape=record,label="{47\:\ 0x0112|java.lang.StringBuilder r12 = new java.lang.StringBuilder()\lr12.append(\"Window is out of the image bounds. Width: \")\lr12.append(r0)\lr12.append(\", Height: \")\lr12.append(r1)\lr12.append(\", Window: \")\lr12.append(r10)\l}"];
Node_48 [shape=record,label="{48\:\ 0x0138|throw new mil.nga.tiff.util.TiffException(r12.toString())\l}"];
Node_49 [shape=record,label="{49\:\ 0x0088|SYNTHETIC\l}"];
Node_50 [shape=record,label="{50\:\ 0x0088|SYNTHETIC\l}"];
Node_51 [shape=record,label="{51\:\ 0x006f|SYNTHETIC\l}"];
Node_52 [shape=record,label="{52\:\ 0x00a0|SYNTHETIC\l}"];
Node_53 [shape=record,label="{53\:\ 0x00df|SYNTHETIC\l}"];
Node_54 [shape=record,label="{54\:\ 0x00f1|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public mil.nga.tiff.Rasters mil.nga.tiff.FileDirectory.readRasters((r9v0 'this' mil.nga.tiff.FileDirectory A[IMMUTABLE_TYPE, THIS]), (r10v0 mil.nga.tiff.ImageWindow A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 int[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_47;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_47;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_47;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_47;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_45;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_45;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_18;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_49;
Node_17 -> Node_15;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_50;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_51;
Node_23 -> Node_19;
Node_24 -> Node_25;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_52;
Node_28 -> Node_27;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_33;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_39;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_53;
Node_37 -> Node_35;
Node_38 -> Node_39;
Node_39 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_54;
Node_42 -> Node_40;
Node_43 -> Node_44;
Node_45 -> Node_46;
Node_47 -> Node_48;
Node_49 -> Node_26;
Node_50 -> Node_26;
Node_51 -> Node_24;
Node_52 -> Node_29;
Node_53 -> Node_38;
Node_54 -> Node_43;
}

