digraph "CFG formil.nga.tiff.io.IOUtils.copyStream(Ljava\/io\/InputStream;Ljava\/io\/OutputStream;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|byte[] r0 = new byte[1024]\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|LOOP_START\lLOOP:0: B:1:0x0004\-\>B:3:0x000a\l|int r1 = r3.read(r0)\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|if (r1 \<= 0) goto L_0x000f\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|LOOP_END\lLOOP:0: B:1:0x0004\-\>B:3:0x000a\l|r4.write(r0, 0, r1)\l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|r4.flush()\lr4.close()\lr3.close()\l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|RETURN\l|return\l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static void mil.nga.tiff.io.IOUtils.copyStream((r3v0 java.io.InputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.io.OutputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_6;
Node_3 -> Node_1;
Node_4 -> Node_5;
Node_6 -> Node_4;
}

