digraph "CFG forokio.Buffer.UnsafeCursor.seek(J)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = (r11 \> \-1 ? 1 : (r11 == \-1 ? 0 : \-1))\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r0 \< 0) goto L_0x00b5\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006}"];
Node_3 [shape=record,label="{3\:\ 0x000c|if ((r11 \> r10.buffer.size ? 1 : (r11 == r10.buffer.size ? 0 : \-1)) \> 0) goto L_0x00b5\l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|if (r0 == 0) goto L_0x00a8\l}"];
Node_5 [shape=record,label="{5\:\ 0x0010}"];
Node_6 [shape=record,label="{6\:\ 0x0016|if ((r11 \> r10.buffer.size ? 1 : (r11 == r10.buffer.size ? 0 : \-1)) != 0) goto L_0x001a\l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|r0 = 0\llong r2 = r10.buffer.size\lokio.Segment r4 = r10.buffer.head\lokio.Segment r5 = r10.buffer.head\l}"];
Node_8 [shape=record,label="{8\:\ 0x002a|if (r10.segment == null) goto L_0x0042\l}"];
Node_9 [shape=record,label="{9\:\ 0x002c|long r6 = r10.offset \- ((long) (r10.start \- r10.segment.pos))\l}"];
Node_10 [shape=record,label="{10\:\ 0x0039|if ((r6 \> r11 ? 1 : (r6 == r11 ? 0 : \-1)) \<= 0) goto L_0x003f\l}"];
Node_11 [shape=record,label="{11\:\ 0x003b|okio.Segment r5 = r10.segment\lr2 = r6\l}"];
Node_12 [shape=record,label="{12\:\ 0x003f|okio.Segment r4 = r10.segment\lr0 = r6\l}"];
Node_13 [shape=record,label="{13\:\ 0x0042|PHI: r0 r2 r4 r5 \l  PHI: (r0v8 long) = (r0v7 long), (r0v15 long), (r0v7 long) binds: [B:8:0x002a, B:12:0x003f, B:11:0x003b] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v4 long) = (r2v3 long), (r2v3 long), (r2v24 long) binds: [B:8:0x002a, B:12:0x003f, B:11:0x003b] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v2 okio.Segment) = (r4v1 okio.Segment), (r4v11 okio.Segment), (r4v1 okio.Segment) binds: [B:8:0x002a, B:12:0x003f, B:11:0x003b] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v2 okio.Segment) = (r5v1 okio.Segment), (r5v1 okio.Segment), (r5v3 okio.Segment) binds: [B:8:0x002a, B:12:0x003f, B:11:0x003b] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0049|if (((r2 \- r11) \> (r11 \- r0) ? 1 : ((r2 \- r11) == (r11 \- r0) ? 0 : \-1)) \<= 0) goto L_0x0060\l}"];
Node_15 [shape=record,label="{15\:\ 0x004b|LOOP_START\lPHI: r0 r4 \l  PHI: (r0v13 long) = (r0v8 long), (r0v14 long) binds: [B:14:0x0049, B:17:0x0056] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v9 okio.Segment) = (r4v2 okio.Segment), (r4v10 okio.Segment) binds: [B:14:0x0049, B:17:0x0056] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:15:0x004b\-\>B:17:0x0056\l}"];
Node_16 [shape=record,label="{16\:\ 0x0054|if ((r11 \> (((long) (r4.limit \- r4.pos)) + r0) ? 1 : (r11 == (((long) (r4.limit \- r4.pos)) + r0) ? 0 : \-1)) \< 0) goto L_0x0070\l}"];
Node_17 [shape=record,label="{17\:\ 0x0056|LOOP_END\lLOOP:0: B:15:0x004b\-\>B:17:0x0056\l|long r0 = r0 + ((long) (r4.limit \- r4.pos))\lokio.Segment r4 = r4.next\l}"];
Node_18 [shape=record,label="{18\:\ 0x0060|r0 = r2\lr4 = r5\l}"];
Node_19 [shape=record,label="{19\:\ 0x0062|LOOP_START\lPHI: r0 r4 \l  PHI: (r0v11 long) = (r0v10 long), (r0v12 long) binds: [B:18:0x0060, B:21:0x0066] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v7 okio.Segment) = (r4v6 okio.Segment), (r4v8 okio.Segment) binds: [B:18:0x0060, B:21:0x0066] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:19:0x0062\-\>B:21:0x0066\l}"];
Node_20 [shape=record,label="{20\:\ 0x0064|if ((r0 \> r11 ? 1 : (r0 == r11 ? 0 : \-1)) \<= 0) goto L_0x0070\l}"];
Node_21 [shape=record,label="{21\:\ 0x0066|LOOP_END\lLOOP:1: B:19:0x0062\-\>B:21:0x0066\l|okio.Segment r4 = r4.prev\llong r0 = r0 \- ((long) (r4.limit \- r4.pos))\l}"];
Node_22 [shape=record,label="{22\:\ 0x0070|PHI: r0 r4 \l  PHI: (r0v9 long) = (r0v11 long), (r0v13 long) binds: [B:37:0x0070, B:36:0x0070] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v3 okio.Segment) = (r4v7 okio.Segment), (r4v9 okio.Segment) binds: [B:37:0x0070, B:36:0x0070] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0072|if (r10.readWrite == false) goto L_0x008f\l}"];
Node_24 [shape=record,label="{24\:\ 0x0074}"];
Node_25 [shape=record,label="{25\:\ 0x0076|if (r4.shared == false) goto L_0x008f\l}"];
Node_26 [shape=record,label="{26\:\ 0x0078|okio.Segment r2 = r4.unsharedCopy()\l}"];
Node_27 [shape=record,label="{27\:\ 0x0080|if (r10.buffer.head != r4) goto L_0x0086\l}"];
Node_28 [shape=record,label="{28\:\ 0x0082|r10.buffer.head = r2\l}"];
Node_29 [shape=record,label="{29\:\ 0x0086|okio.Segment r4 = r4.push(r2)\lr4.prev.pop()\l}"];
Node_30 [shape=record,label="{30\:\ 0x008f|PHI: r4 \l  PHI: (r4v4 okio.Segment) = (r4v3 okio.Segment), (r4v3 okio.Segment), (r4v5 okio.Segment) binds: [B:23:0x0072, B:25:0x0076, B:29:0x0086] A[DONT_GENERATE, DONT_INLINE]\l|r10.segment = r4\lr10.offset = r11\lr10.data = r4.data\lr10.start = r4.pos + ((int) (r11 \- r0))\lr10.end = r4.limit\l}"];
Node_31 [shape=record,label="{31\:\ 0x00a7|RETURN\l|return r10.end \- r10.start\l}"];
Node_32 [shape=record,label="{32\:\ 0x00a8|r10.segment = null\lr10.offset = r11\lr10.data = null\lr10.start = \-1\lr10.end = \-1\l}"];
Node_33 [shape=record,label="{33\:\ 0x00b4|RETURN\l|return \-1\l}"];
Node_34 [shape=record,label="{34\:\ 0x00b5|java.lang.Object[] r1 = new java.lang.Object[]\{java.lang.Long.valueOf(r11), java.lang.Long.valueOf(r10.buffer.size)\}\l}"];
Node_35 [shape=record,label="{35\:\ 0x00d5|throw new java.lang.ArrayIndexOutOfBoundsException(java.lang.String.format(\"offset=%s \> size=%s\", r1))\l}"];
Node_36 [shape=record,label="{36\:\ 0x0070|SYNTHETIC\l}"];
Node_37 [shape=record,label="{37\:\ 0x0070|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public int okio.Buffer.UnsafeCursor.seek((r10v0 'this' okio.Buffer$UnsafeCursor A[IMMUTABLE_TYPE, THIS]), (r11v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_34;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_34;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_32;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_32[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_13;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_18;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_36;
Node_17 -> Node_15;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_37;
Node_21 -> Node_19;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_30;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_30;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_32 -> Node_33;
Node_34 -> Node_35;
Node_36 -> Node_22;
Node_37 -> Node_22;
}

