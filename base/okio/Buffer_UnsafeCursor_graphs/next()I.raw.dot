digraph "CFG forokio.Buffer.UnsafeCursor.next()I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:long) = (r4 I:okio.Buffer$UnsafeCursor) okio.Buffer.UnsafeCursor.offset long \l0x0002: IGET  (r2 I:okio.Buffer) = (r4 I:okio.Buffer$UnsafeCursor) okio.Buffer.UnsafeCursor.buffer okio.Buffer \l0x0004: IGET  (r2 I:long) = (r2 I:okio.Buffer) okio.Buffer.size long \l0x0006: CMP_L  (r0 I:int) = (r0 I:long), (r2 I:long) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0027 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: IGET  (r0 I:long) = (r4 I:okio.Buffer$UnsafeCursor) okio.Buffer.UnsafeCursor.offset long \l0x000c: CONST  (r2 I:?[long, double]) = (\-1 ?[long, double]) \l0x000e: CMP_L  (r0 I:int) = (r0 I:long), (r2 I:long) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0019 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: CONST  (r0 I:?[long, double]) = (0 ?[long, double]) \l0x0014: INVOKE  (r0 I:int) = (r4 I:okio.Buffer$UnsafeCursor), (r0 I:long) okio.Buffer.UnsafeCursor.seek(long):int type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|0x0018: RETURN  (r0 I:int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|0x0019: IGET  (r0 I:long) = (r4 I:okio.Buffer$UnsafeCursor) okio.Buffer.UnsafeCursor.offset long \l0x001b: IGET  (r2 I:int) = (r4 I:okio.Buffer$UnsafeCursor) okio.Buffer.UnsafeCursor.end int \l0x001d: IGET  (r3 I:int) = (r4 I:okio.Buffer$UnsafeCursor) okio.Buffer.UnsafeCursor.start int \l0x001f: ARITH  (r2 I:int) = (r2 I:int) \- (r3 I:int) \l0x0020: CAST  (r2 I:long) = (long) (r2 I:int) \l0x0021: ARITH  (r0 I:long) = (r0 I:long) + (r2 I:long) \l0x0022: INVOKE  (r0 I:int) = (r4 I:okio.Buffer$UnsafeCursor), (r0 I:long) okio.Buffer.UnsafeCursor.seek(long):int type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0026|0x0026: RETURN  (r0 I:int) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0027|0x0027: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x0029: INVOKE  (r0 I:java.lang.IllegalStateException) java.lang.IllegalStateException.\<init\>():void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x002c|0x002c: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public int okio.Buffer.UnsafeCursor.next((r4 'this' I:okio.Buffer$UnsafeCursor A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_8 -> Node_9;
}

