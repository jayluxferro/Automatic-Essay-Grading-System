digraph "CFG forokio.Buffer.UnsafeCursor.expandBuffer(I)J" {
subgraph cluster_Region_794292681 {
label = "R(1:(2:15|16)(1:(2:13|14)(1:(1:12)(1:(2:7|8)(1:10)))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_999092145 {
label = "IF [B:0:0x0000] THEN: R(2:15|16) ELSE: R(1:(2:13|14)(1:(1:12)(1:(2:7|8)(1:10))))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r10 \<= 0) goto L_0x005b\l}"];
subgraph cluster_Region_1120318557 {
label = "R(2:15|16)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x005b}"];
Node_16 [shape=record,label="{16\:\ 0x0071|throw new java.lang.IllegalArgumentException(\"minByteCount \<= 0: \" + r10)\l}"];
}
subgraph cluster_Region_805905376 {
label = "R(1:(2:13|14)(1:(1:12)(1:(2:7|8)(1:10)))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_541083025 {
label = "IF [B:2:0x0004] THEN: R(2:13|14) ELSE: R(1:(1:12)(1:(2:7|8)(1:10))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|if (r10 \> 8192) goto L_0x0044\l}"];
subgraph cluster_Region_2087569231 {
label = "R(2:13|14)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0044}"];
Node_14 [shape=record,label="{14\:\ 0x005a|throw new java.lang.IllegalArgumentException(\"minByteCount \> Segment.SIZE: \" + r10)\l}"];
}
subgraph cluster_Region_201257155 {
label = "R(1:(1:12)(1:(2:7|8)(1:10))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1922159743 {
label = "IF [B:4:0x0008] THEN: R(1:12) ELSE: R(1:(2:7|8)(1:10)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0008|if (r9.buffer == null) goto L_0x003c\l}"];
subgraph cluster_Region_1348430705 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0043|throw new java.lang.IllegalStateException(\"not attached to a buffer\")\l}"];
}
subgraph cluster_Region_1109035402 {
label = "R(1:(2:7|8)(1:10)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1042158050 {
label = "IF [B:6:0x000c] THEN: R(2:7|8) ELSE: R(1:10) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x000c|if (r9.readWrite == true) goto L_0x000e\l}"];
subgraph cluster_Region_2074193485 {
label = "R(2:7|8)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x000e|long long r1 = r9.buffer.size\lokio.Segment okio.Segment r10 = r9.buffer.writableSegment(r10)\lint int r3 = 8192 \- r10.limit\lr10.limit = 8192\llong long r5 = (long) r3\lr9.buffer.size = r1 + r5\lr9.segment = r10\lr9.offset = r1\lr9.data = r10.data\lr9.start = 8192 \- r3\lr9.end = 8192\l}"];
Node_8 [shape=record,label="{8\:\ 0x0033|RETURN\l|return r5\l}"];
}
subgraph cluster_Region_1112541298 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x003b|throw new java.lang.IllegalStateException(\"expandBuffer() only permitted for read\/write buffers\")\l}"];
}
}
}
}
}
}
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0002}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0006}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000a}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0034}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x003c}"];
MethodNode[shape=record,label="{public long okio.Buffer.UnsafeCursor.expandBuffer((r9v0 'this' okio.Buffer$UnsafeCursor A[IMMUTABLE_TYPE, THIS]), (r10v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_15;
Node_15 -> Node_16;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_13;
Node_13 -> Node_14;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_11;
Node_6 -> Node_7;
Node_6 -> Node_9[style=dashed];
Node_7 -> Node_8;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_9 -> Node_10;
Node_11 -> Node_12;
}

