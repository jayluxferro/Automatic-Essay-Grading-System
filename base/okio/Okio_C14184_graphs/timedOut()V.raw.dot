digraph "CFG forokio.Okio.4.timedOut()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: IGET  (r0 I:java.net.Socket) = (r5 I:okio.Okio$4) okio.Okio.4.val$socket java.net.Socket A[Catch:\{ Exception \-\> 0x0029, AssertionError \-\> 0x0006 \}, TRY_ENTER]\l0x0002: INVOKE  (r0 I:java.net.Socket) java.net.Socket.close():void type: VIRTUAL A[Catch:\{ Exception \-\> 0x0029, AssertionError \-\> 0x0006 \}, TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|ExcHandler: AssertionError null\lSplitter:B:0:0x0000\l|0x0006: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: INVOKE  (r1 I:boolean) = (r0 I:java.lang.AssertionError) okio.Okio.isAndroidGetsocknameError(java.lang.AssertionError):boolean type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|0x000b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0028 \l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|0x000d: SGET  (r1 I:java.util.logging.Logger) =  okio.Okio.logger java.util.logging.Logger \l0x000f: SGET  (r2 I:java.util.logging.Level) =  java.util.logging.Level.WARNING java.util.logging.Level \l0x0011: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0013: INVOKE  (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0016: CONST_STR  (r4 I:java.lang.String) =  \"Failed to close timed out socket \" \l0x0018: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x001b: IGET  (r4 I:java.net.Socket) = (r5 I:okio.Okio$4) okio.Okio.4.val$socket java.net.Socket \l0x001d: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0020: INVOKE  (r3 I:java.lang.String) = (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0024: INVOKE  \l  (r1 I:java.util.logging.Logger)\l  (r2 I:java.util.logging.Level)\l  (r3 I:java.lang.String)\l  (r0 I:java.lang.Throwable)\l java.util.logging.Logger.log(java.util.logging.Level, java.lang.String, java.lang.Throwable):void type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0028|0x0028: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0029|ExcHandler: Exception null\lSplitter:B:0:0x0000\l|0x0029: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_9 [shape=record,label="{9\:\ 0x002a|0x002a: SGET  (r1 I:java.util.logging.Logger) =  okio.Okio.logger java.util.logging.Logger \l0x002c: SGET  (r2 I:java.util.logging.Level) =  java.util.logging.Level.WARNING java.util.logging.Level \l0x002e: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0030: INVOKE  (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0033: CONST_STR  (r4 I:java.lang.String) =  \"Failed to close timed out socket \" \l0x0035: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0038: IGET  (r4 I:java.net.Socket) = (r5 I:okio.Okio$4) okio.Okio.4.val$socket java.net.Socket \l0x003a: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x003d: INVOKE  (r3 I:java.lang.String) = (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0041: INVOKE  \l  (r1 I:java.util.logging.Logger)\l  (r2 I:java.util.logging.Level)\l  (r3 I:java.lang.String)\l  (r0 I:java.lang.Throwable)\l java.util.logging.Logger.log(java.util.logging.Level, java.lang.String, java.lang.Throwable):void type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0044|0x0044: RETURN   \l}"];
MethodNode[shape=record,label="{protected void okio.Okio.4.timedOut((r5 'this' I:okio.Okio$4 A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_8;
Node_0 -> Node_3;
Node_1 -> Node_8;
Node_1 -> Node_3;
Node_1 -> Node_10;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_10;
Node_8 -> Node_9;
Node_9 -> Node_10;
}

