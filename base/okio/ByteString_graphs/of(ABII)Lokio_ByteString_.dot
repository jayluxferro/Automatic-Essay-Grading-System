digraph "CFG forokio.ByteString.of([BII)Lokio\/ByteString;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r7 == null) goto L_0x0015\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|okio.Util.checkOffsetAndCount((long) r7.length, (long) r8, (long) r9)\lbyte[] r0 = new byte[r9]\ljava.lang.System.arraycopy(r7, r8, r0, 0, r9)\l}"];
Node_2 [shape=record,label="{2\:\ 0x0014|RETURN\l|return new okio.ByteString(r0)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0015}"];
Node_4 [shape=record,label="{4\:\ 0x001c|throw new java.lang.IllegalArgumentException(\"data == null\")\l}"];
MethodNode[shape=record,label="{public static okio.ByteString okio.ByteString.of((r7v0 byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_3 -> Node_4;
}

