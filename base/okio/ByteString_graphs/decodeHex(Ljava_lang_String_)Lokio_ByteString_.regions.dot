digraph "CFG forokio.ByteString.decodeHex(Ljava\/lang\/String;)Lokio\/ByteString;" {
subgraph cluster_Region_1046001057 {
label = "R(1:(1:12)(1:(3:3|(1:6)|8)(2:9|10)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1054993954 {
label = "IF [B:0:0x0000] THEN: R(1:12) ELSE: R(1:(3:3|(1:6)|8)(2:9|10))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r4 == null) goto L_0x004f\l}"];
subgraph cluster_Region_1919748219 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0056|throw new java.lang.IllegalArgumentException(\"hex == null\")\l}"];
}
subgraph cluster_Region_1702313060 {
label = "R(1:(3:3|(1:6)|8)(2:9|10)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_511273174 {
label = "IF [B:2:0x0008] THEN: R(3:3|(1:6)|8) ELSE: R(2:9|10) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0008|if ((r4.length() % 2) == 0) goto L_0x000a\l}"];
subgraph cluster_Region_986825955 {
label = "R(3:3|(1:6)|8)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000a|byte[] byte[] r0 = new byte[(r4.length() \/ 2)]\lint r1 = 0\l}"];
subgraph cluster_LoopRegion_1714188585 {
label = "LOOP:0: (1:6)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0014|if (r1 \< r0.length) goto L_0x0016\l}"];
subgraph cluster_Region_1515424598 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0016|LOOP_END\lLOOP:0: B:4:0x0013\-\>B:6:0x0016\l|int int r2 = r1 * 2\lr0[r1] = (byte) ((decodeHexDigit(r4.charAt(r2)) \<\< 4) + decodeHexDigit(r4.charAt(r2 + 1)))\lr1++\l}"];
}
}
Node_8 [shape=record,label="{8\:\ 0x0037|RETURN\l|return m183of(r0)\l}"];
}
subgraph cluster_Region_802686405 {
label = "R(2:9|10)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0038}"];
Node_10 [shape=record,label="{10\:\ 0x004e|throw new java.lang.IllegalArgumentException(\"Unexpected hex string: \" + r4)\l}"];
}
}
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0002}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0013|LOOP_START\lPHI: r1 \l  PHI: (r1v2 int) = (r1v1 int), (r1v3 int) binds: [B:3:0x000a, B:6:0x0016] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x0013\-\>B:6:0x0016\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0033}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x004f}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0033|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static okio.ByteString okio.ByteString.decodeHex((r4v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_11;
Node_2 -> Node_3;
Node_2 -> Node_9[style=dashed];
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_5 -> Node_13[style=dashed];
Node_6 -> Node_4;
Node_9 -> Node_10;
Node_1 -> Node_2;
Node_4 -> Node_5;
Node_7 -> Node_8;
Node_11 -> Node_12;
Node_13 -> Node_7;
}

