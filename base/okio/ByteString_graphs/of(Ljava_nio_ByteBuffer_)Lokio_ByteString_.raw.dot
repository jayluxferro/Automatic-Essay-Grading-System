digraph "CFG forokio.ByteString.of(Ljava\/nio\/ByteBuffer;)Lokio\/ByteString;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0011 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: INVOKE  (r0 I:int) = (r1 I:java.nio.ByteBuffer) java.nio.ByteBuffer.remaining():int type: VIRTUAL \l0x0006: NEW_ARRAY  (r0 I:byte[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: byte[] \l0x0008: INVOKE  (r1 I:java.nio.ByteBuffer), (r0 I:byte[]) java.nio.ByteBuffer.get(byte[]):java.nio.ByteBuffer type: VIRTUAL \l0x000b: NEW_INSTANCE  (r1 I:okio.ByteString) =  okio.ByteString \l0x000d: INVOKE  (r1 I:okio.ByteString), (r0 I:byte[]) okio.ByteString.\<init\>(byte[]):void type: DIRECT \l}"];
Node_2 [shape=record,label="{2\:\ 0x0010|0x0010: RETURN  (r1 I:okio.ByteString) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|0x0011: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0013: CONST_STR  (r0 I:java.lang.String) =  \"data == null\" \l0x0015: INVOKE  \l  (r1 I:java.lang.IllegalArgumentException)\l  (r0 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|0x0018: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static okio.ByteString okio.ByteString.of((r1 I:java.nio.ByteBuffer A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_3 -> Node_4;
}

