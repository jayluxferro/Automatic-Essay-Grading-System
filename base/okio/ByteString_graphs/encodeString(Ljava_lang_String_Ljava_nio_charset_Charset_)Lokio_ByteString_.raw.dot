digraph "CFG forokio.ByteString.encodeString(Ljava\/lang\/String;Ljava\/nio\/charset\/Charset;)Lokio\/ByteString;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0016 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: NEW_INSTANCE  (r0 I:okio.ByteString) =  okio.ByteString \l0x0006: INVOKE  (r1 I:byte[]) = (r1 I:java.lang.String), (r2 I:java.nio.charset.Charset) java.lang.String.getBytes(java.nio.charset.Charset):byte[] type: VIRTUAL \l0x000a: INVOKE  (r0 I:okio.ByteString), (r1 I:byte[]) okio.ByteString.\<init\>(byte[]):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: RETURN  (r0 I:okio.ByteString) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0010: CONST_STR  (r2 I:java.lang.String) =  \"charset == null\" \l0x0012: INVOKE  \l  (r1 I:java.lang.IllegalArgumentException)\l  (r2 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0018: CONST_STR  (r2 I:java.lang.String) =  \"s == null\" \l0x001a: INVOKE  \l  (r1 I:java.lang.IllegalArgumentException)\l  (r2 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|0x001d: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static okio.ByteString okio.ByteString.encodeString((r1 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:java.nio.charset.Charset A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_6;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_6 -> Node_7;
}

