digraph "CFG forokio.ByteString.digest(Ljava\/lang\/String;)Lokio\/ByteString;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Catch:\{ NoSuchAlgorithmException \-\> 0x000f \}\lSplitter:B:0:0x0000\l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|RETURN\l|return m183of(java.security.MessageDigest.getInstance(r2).digest(r1.data))\l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|ExcHandler: NoSuchAlgorithmException (r2v1 'e' java.security.NoSuchAlgorithmException A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l|java.security.NoSuchAlgorithmException r2 = move\-exception\l}"];
Node_4 [shape=record,label="{4\:\ 0x0010}"];
Node_5 [shape=record,label="{5\:\ 0x0015|throw new java.lang.AssertionError(r2)\l}"];
MethodNode[shape=record,label="{private okio.ByteString okio.ByteString.digest((r1v0 'this' okio.ByteString A[IMMUTABLE_TYPE, THIS]), (r2v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

