digraph "CFG forokio.ByteString.hashCode()I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = (r1 I:okio.ByteString) okio.ByteString.hashCode int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0005 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: IGET  (r0 I:byte[]) = (r1 I:okio.ByteString) okio.ByteString.data byte[] \l0x0007: INVOKE  (r0 I:int) = (r0 I:byte[]) java.util.Arrays.hashCode(byte[]):int type: STATIC \l0x000b: IPUT  (r0 I:int), (r1 I:okio.ByteString) okio.ByteString.hashCode int \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{public int okio.ByteString.hashCode((r1 'this' I:okio.ByteString A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_3;
Node_1 -> Node_4[style=dashed];
Node_3 -> Node_4;
}

