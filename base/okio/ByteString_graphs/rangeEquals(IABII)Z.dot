digraph "CFG forokio.ByteString.rangeEquals(I[BII)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r2 \< 0) goto L_0x0018\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002}"];
Node_2 [shape=record,label="{2\:\ 0x0006|if (r2 \> (r1.data.length \- r5)) goto L_0x0018\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|if (r4 \< 0) goto L_0x0018\l}"];
Node_4 [shape=record,label="{4\:\ 0x000a}"];
Node_5 [shape=record,label="{5\:\ 0x000c|if (r4 \> (r3.length \- r5)) goto L_0x0018\l}"];
Node_6 [shape=record,label="{6\:\ 0x000e}"];
Node_7 [shape=record,label="{7\:\ 0x0014|if (okio.Util.arrayRangeEquals(r1.data, r2, r3, r4, r5) == false) goto L_0x0018\l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|SYNTHETIC\lRETURN\l|return true\l}"];
Node_9 [shape=record,label="{9\:\ 0x0018|SYNTHETIC\lRETURN\lORIG_RETURN\l|return false\l}"];
MethodNode[shape=record,label="{public boolean okio.ByteString.rangeEquals((r1v0 'this' okio.ByteString A[IMMUTABLE_TYPE, THIS]), (r2v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_9;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_9;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
}

