digraph "CFG forokio.ByteString.of([B)Lokio\/ByteString;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000e \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: NEW_INSTANCE  (r0 I:okio.ByteString) =  okio.ByteString \l0x0004: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.lang.Object) java.lang.Object.clone():java.lang.Object type: VIRTUAL \l0x0008: CHECK_CAST  (r1 I:byte[]) = (byte[]) (r1 I:?[OBJECT, ARRAY]) \l0x000a: INVOKE  (r0 I:okio.ByteString), (r1 I:byte[]) okio.ByteString.\<init\>(byte[]):void type: DIRECT \l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|0x000d: RETURN  (r0 I:okio.ByteString) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0010: CONST_STR  (r0 I:java.lang.String) =  \"data == null\" \l0x0012: INVOKE  \l  (r1 I:java.lang.IllegalArgumentException)\l  (r0 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|0x0015: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static okio.ByteString okio.ByteString.of((r1 I:byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_3 -> Node_4;
}

