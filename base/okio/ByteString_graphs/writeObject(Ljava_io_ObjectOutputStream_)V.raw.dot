digraph "CFG forokio.ByteString.writeObject(Ljava\/io\/ObjectOutputStream;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:byte[]) = (r1 I:okio.ByteString) okio.ByteString.data byte[] \l0x0002: ARRAY_LENGTH  (r0 I:int) = (r0 I:?[]) \l0x0003: INVOKE  (r2 I:java.io.ObjectOutputStream), (r0 I:int) java.io.ObjectOutputStream.writeInt(int):void type: VIRTUAL \l0x0006: IGET  (r0 I:byte[]) = (r1 I:okio.ByteString) okio.ByteString.data byte[] \l0x0008: INVOKE  (r2 I:java.io.ObjectOutputStream), (r0 I:byte[]) java.io.ObjectOutputStream.write(byte[]):void type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: RETURN   \l}"];
MethodNode[shape=record,label="{private void okio.ByteString.writeObject((r1 'this' I:okio.ByteString A[IMMUTABLE_TYPE, THIS]), (r2 I:java.io.ObjectOutputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

