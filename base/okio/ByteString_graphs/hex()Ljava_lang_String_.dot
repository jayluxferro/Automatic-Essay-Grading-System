digraph "CFG forokio.ByteString.hex()Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|char[] r0 = new char[(r9.data.length * 2)]\lbyte[] r1 = r9.data\lint r2 = r1.length\lr3 = 0\lr4 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|LOOP_START\lPHI: r3 r4 \l  PHI: (r3v1 int) = (r3v0 int), (r3v2 int) binds: [B:0:0x0000, B:2:0x000e] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v1 int) = (r4v0 int), (r4v2 int) binds: [B:0:0x0000, B:2:0x000e] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000c\-\>B:2:0x000e\l|if (r3 \>= r2) goto L_0x0029\l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|LOOP_END\lLOOP:0: B:1:0x000c\-\>B:2:0x000e\l|byte r5 = r1[r3]\lint r6 = r4 + 1\lr0[r4] = HEX_DIGITS[(r5 \>\> 4) & 15]\lint r4 = r6 + 1\lr0[r6] = HEX_DIGITS[r5 & 15]\lint r3 = r3 + 1\l}"];
Node_3 [shape=record,label="{3\:\ 0x0029}"];
Node_4 [shape=record,label="{4\:\ 0x002e|RETURN\l|return new java.lang.String(r0)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0029|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public java.lang.String okio.ByteString.hex((r9v0 'this' okio.ByteString A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_1;
Node_3 -> Node_4;
Node_5 -> Node_3;
}

