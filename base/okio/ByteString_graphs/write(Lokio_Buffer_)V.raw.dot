digraph "CFG forokio.ByteString.write(Lokio\/Buffer;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:byte[]) = (r3 I:okio.ByteString) okio.ByteString.data byte[] \l0x0002: IGET  (r1 I:byte[]) = (r3 I:okio.ByteString) okio.ByteString.data byte[] \l0x0004: ARRAY_LENGTH  (r1 I:int) = (r1 I:?[]) \l0x0005: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0006: INVOKE  (r4 I:okio.Buffer), (r0 I:byte[]), (r2 I:int), (r1 I:int) okio.Buffer.write(byte[], int, int):okio.Buffer type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: RETURN   \l}"];
MethodNode[shape=record,label="{void okio.ByteString.write((r3 'this' I:okio.ByteString A[IMMUTABLE_TYPE, THIS]), (r4 I:okio.Buffer A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

