digraph "CFG forokio.AsyncTimeout.2.close()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Catch:\{ IOException \-\> 0x000e, all \-\> 0x000c \}\lSplitter:B:0:0x0000\l|r2.close()     \/\/ Catch:\{ IOException \-\> 0x000e, all \-\> 0x000c \}\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|r3.this$0.exit(true)\l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|RETURN\l|return\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|ExcHandler: all (r0v2 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:6:0x000f\l|java.lang.Throwable r0 = move\-exception\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|ExcHandler: IOException (r0v0 'e' java.io.IOException A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l|java.io.IOException r0 = move\-exception\l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|SYNTHETIC\lSplitter:B:6:0x000f\l}"];
Node_7 [shape=record,label="{7\:\ ?|Catch:\{ IOException \-\> 0x000e, all \-\> 0x000c \}\lSplitter:B:6:0x000f\l}"];
Node_8 [shape=record,label="{8\:\ 0x0015|Catch:\{ IOException \-\> 0x000e, all \-\> 0x000c \}\l|throw r3.this$0.exit(r0)     \/\/ Catch:\{ IOException \-\> 0x000e, all \-\> 0x000c \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x0016|r3.this$0.exit(false)\l}"];
Node_10 [shape=record,label="{10\:\ 0x001c|throw r0\l}"];
MethodNode[shape=record,label="{public void okio.AsyncTimeout.2.close((r3v0 'this' okio.AsyncTimeout$2 A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_5;
Node_1 -> Node_2;
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_4 -> Node_9;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_4;
Node_7 -> Node_8;
Node_9 -> Node_10;
}

