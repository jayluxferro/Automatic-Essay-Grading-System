digraph "CFG forokio.AsyncTimeout.2.close()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: IGET  (r0 I:okio.Source) = (r3 I:okio.AsyncTimeout$2) okio.AsyncTimeout.2.val$source okio.Source A[Catch:\{ IOException \-\> 0x000e \}, TRY_ENTER]\l0x0002: INVOKE  (r0 I:okio.Source) okio.Source.close():void type: INTERFACE A[Catch:\{ IOException \-\> 0x000e \}, TRY_LEAVE]\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0006: IGET  (r1 I:okio.AsyncTimeout) = (r3 I:okio.AsyncTimeout$2) okio.AsyncTimeout.2.this$0 okio.AsyncTimeout \l0x0008: INVOKE  (r1 I:okio.AsyncTimeout), (r0 I:boolean) okio.AsyncTimeout.exit(boolean):void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: RETURN   \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|ExcHandler: all null\lSplitter:B:7:0x000f\l|0x000c: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|ExcHandler: IOException null\lSplitter:B:0:0x0000\l|0x000e: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_7 [shape=record,label="{7\:\ 0x000f|SYNTHETIC\lSplitter:B:7:0x000f\l}"];
Node_8 [shape=record,label="{8\:\ ?|Splitter:B:7:0x000f\l|0x000f: IGET  (r1 I:okio.AsyncTimeout) = (r3 I:okio.AsyncTimeout$2) okio.AsyncTimeout.2.this$0 okio.AsyncTimeout A[Catch:\{ all \-\> 0x000c \}, TRY_ENTER]\l0x0011: INVOKE  (r0 I:java.io.IOException) = (r1 I:okio.AsyncTimeout), (r0 I:java.io.IOException) okio.AsyncTimeout.exit(java.io.IOException):java.io.IOException type: VIRTUAL A[Catch:\{ all \-\> 0x000c \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0015|0x0015: THROW  (r0 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x000c \}, TRY_LEAVE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0016|0x0016: IGET  (r1 I:okio.AsyncTimeout) = (r3 I:okio.AsyncTimeout$2) okio.AsyncTimeout.2.this$0 okio.AsyncTimeout \l0x0018: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0019: INVOKE  (r1 I:okio.AsyncTimeout), (r2 I:boolean) okio.AsyncTimeout.exit(boolean):void type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x001c|0x001c: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void okio.AsyncTimeout.2.close((r3 'this' I:okio.AsyncTimeout$2 A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_6;
Node_1 -> Node_2;
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_4 -> Node_10;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_4;
Node_8 -> Node_9;
Node_10 -> Node_11;
}

