digraph "CFG forokio.Pipe.PipeSink.flush()V" {
subgraph cluster_Region_1908887252 {
label = "R(2:0|4)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
subgraph cluster_SynchronizedRegion_771847203 {
label = "Synchronized:R(2:1|(1:(1:15)(1:(1:(1:(1:11))))))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004}"];
subgraph cluster_Region_1909868348 {
label = "R(1:(1:15)(1:(1:(1:(1:11)))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_393528525 {
label = "IF [B:4:0x0009] THEN: R(1:15) ELSE: R(1:(1:(1:(1:11))))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0009|if (okio.Pipe.this.sinkClosed != false) goto L_0x002a\l}"];
subgraph cluster_Region_1544460569 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0031|throw new java.lang.IllegalStateException(\"closed\")\l}"];
}
subgraph cluster_Region_2030784215 {
label = "R(1:(1:(1:(1:11)))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_975636845 {
label = "IF [B:6:0x000f] THEN: R(1:(1:(1:11))) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x000f|if (okio.Pipe.this.sourceClosed == true) goto L_0x0011\l}"];
subgraph cluster_Region_197451848 {
label = "R(1:(1:(1:11)))";
node [shape=record,color=blue];
subgraph cluster_Region_598374008 {
label = "R(1:(1:11))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_16050476 {
label = "IF [B:8:0x001d] THEN: R(1:11) ELSE: null";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x001d|if (okio.Pipe.this.buffer.size() \> 0) goto L_0x0020\l}"];
subgraph cluster_Region_35320894 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0027|throw new java.io.IOException(\"source is closed\")\l}"];
}
}
}
}
}
}
}
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0005|SYNTHETIC\l}"];
Node_3 [shape=record,color=red,label="{3\:\ ?}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000b}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0011}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x001f}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0020}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0028|DONT_GENERATE\l|monitor\-exit(\l\/\/ error: 0x0028: MONITOR_EXIT  \l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0029}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x002a}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0032|REMOVE\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0033|REMOVE\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0034|REMOVE\l|throw r1\l}"];
MethodNode[shape=record,label="{public void okio.Pipe.PipeSink.flush((r5v0 'this' okio.Pipe$PipeSink A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_14;
Node_6 -> Node_7;
Node_6 -> Node_12[style=dashed];
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_2 -> Node_3;
Node_2 -> Node_16;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_17 -> Node_18;
}

