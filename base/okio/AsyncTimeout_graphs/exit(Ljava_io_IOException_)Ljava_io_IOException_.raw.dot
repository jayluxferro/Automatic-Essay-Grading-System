digraph "CFG forokio.AsyncTimeout.exit(Ljava\/io\/IOException;)Ljava\/io\/IOException;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:boolean) = (r1 I:okio.AsyncTimeout) okio.AsyncTimeout.exit():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0007 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: RETURN  (r2 I:java.io.IOException) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: INVOKE  (r2 I:java.io.IOException) = (r1 I:okio.AsyncTimeout), (r2 I:java.io.IOException) okio.AsyncTimeout.newTimeoutException(java.io.IOException):java.io.IOException type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: RETURN  (r2 I:java.io.IOException) \l}"];
MethodNode[shape=record,label="{final java.io.IOException okio.AsyncTimeout.exit((r1 'this' I:okio.AsyncTimeout A[IMMUTABLE_TYPE, THIS]), (r2 I:java.io.IOException A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
}

