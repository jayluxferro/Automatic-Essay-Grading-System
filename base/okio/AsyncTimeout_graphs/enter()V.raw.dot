digraph "CFG forokio.AsyncTimeout.enter()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:boolean) = (r5 I:okio.AsyncTimeout) okio.AsyncTimeout.inQueue boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001c \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: INVOKE  (r0 I:long) = (r5 I:okio.AsyncTimeout) okio.AsyncTimeout.timeoutNanos():long type: VIRTUAL \l0x0008: INVOKE  (r2 I:boolean) = (r5 I:okio.AsyncTimeout) okio.AsyncTimeout.hasDeadline():boolean type: VIRTUAL \l0x000c: CONST  (r3 I:?[long, double]) = (0 ?[long, double]) \l0x000e: CMP_L  (r3 I:int) = (r0 I:long), (r3 I:long) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0015 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0015 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: RETURN   \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0016: IPUT  (r3 I:boolean), (r5 I:okio.AsyncTimeout) okio.AsyncTimeout.inQueue boolean \l0x0018: INVOKE  (r5 I:okio.AsyncTimeout), (r0 I:long), (r2 I:boolean) okio.AsyncTimeout.scheduleTimeout(okio.AsyncTimeout, long, boolean):void type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|0x001b: RETURN   \l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|0x001c: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x001e: CONST_STR  (r1 I:java.lang.String) =  \"Unbalanced enter\/exit\" \l0x0020: INVOKE  \l  (r0 I:java.lang.IllegalStateException)\l  (r1 I:java.lang.String)\l java.lang.IllegalStateException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x0023|0x0023: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public final void okio.AsyncTimeout.enter((r5 'this' I:okio.AsyncTimeout A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_8 -> Node_9;
}

