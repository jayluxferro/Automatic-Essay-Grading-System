digraph "CFG forokio.InflaterSource.refill()Z" {
subgraph cluster_Region_1323327494 {
label = "R(1:(2:(1:2)|(2:3|(1:11)(1:(1:7)(2:8|9)))))";
node [shape=record,color=blue];
subgraph cluster_Region_1605807985 {
label = "R(2:(1:2)|(2:3|(1:11)(1:(1:7)(2:8|9))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_658909727 {
label = "IF [B:1:0x0007] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0007|if (r5.inflater.needsInput() == false) goto L_0x0009\l}"];
subgraph cluster_Region_1647766624 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0009|RETURN\l|return false\l}"];
}
}
subgraph cluster_Region_790319216 {
label = "R(2:3|(1:11)(1:(1:7)(2:8|9)))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000a|releaseInflatedBytes()\l}"];
subgraph cluster_IfRegion_1161605061 {
label = "IF [B:4:0x0013] THEN: R(1:11) ELSE: R(1:(1:7)(2:8|9))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0013|if (r5.inflater.getRemaining() != 0) goto L_0x003a\l}"];
subgraph cluster_Region_1404855215 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0041|throw new java.lang.IllegalStateException(\"?\")\l}"];
}
subgraph cluster_Region_104644692 {
label = "R(1:(1:7)(2:8|9)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1943111731 {
label = "IF [B:6:0x001b] THEN: R(1:7) ELSE: R(2:8|9) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x001b|if (r5.source.exhausted() == true) goto L_0x001d\l}"];
subgraph cluster_Region_1395868427 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x001d|RETURN\l|return true\l}"];
}
subgraph cluster_Region_1655011997 {
label = "R(2:8|9)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x001f|okio.Segment okio.Segment r0 = r5.source.buffer().head\lr5.bufferBytesHeldByInflater = r0.limit \- r0.pos\lr5.inflater.setInput(r0.data, r0.pos, r5.bufferBytesHeldByInflater)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0039|RETURN\l|return false\l}"];
}
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0015}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x003a}"];
MethodNode[shape=record,label="{public boolean okio.InflaterSource.refill((r5v0 'this' okio.InflaterSource A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_10;
Node_6 -> Node_7;
Node_6 -> Node_8[style=dashed];
Node_8 -> Node_9;
Node_0 -> Node_1;
Node_5 -> Node_6;
Node_10 -> Node_11;
}

