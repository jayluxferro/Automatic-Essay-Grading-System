digraph "CFG forokio.GzipSource.checkEqual(Ljava\/lang\/String;II)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r6 != r5) goto L_0x0003\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|RETURN\l|return\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|java.lang.Object[] r1 = new java.lang.Object[]\{r4, java.lang.Integer.valueOf(r6), java.lang.Integer.valueOf(r5)\}\l}"];
Node_3 [shape=record,label="{3\:\ 0x0022|throw new java.io.IOException(java.lang.String.format(\"%s: actual 0x%08x != expected 0x%08x\", r1))\l}"];
MethodNode[shape=record,label="{private void okio.GzipSource.checkEqual((r3v0 'this' okio.GzipSource A[IMMUTABLE_TYPE, THIS]), (r4v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_2;
Node_2 -> Node_3;
}

