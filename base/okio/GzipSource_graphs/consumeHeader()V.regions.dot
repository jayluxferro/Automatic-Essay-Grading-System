digraph "CFG forokio.GzipSource.consumeHeader()V" {
subgraph cluster_Region_1136262327 {
label = "R(8:0|1|(1:5)|6|(5:8|(1:10)|11|(1:13)|14)|(2:17|(2:(1:20)|21)(1:23))|(2:26|(2:(1:29)|30)(1:32))|(1:(1:34)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r6 = r17\lr6.source.require(10)\lbyte byte r7 = r6.source.buffer().getByte(3)\l}"];
Node_1 [shape=record,label="{1\:\ 0x001a|boolean r10 = ((r7 \>\> 1) & 1) == 1\l}"];
subgraph cluster_IfRegion_23986708 {
label = "IF [B:4:0x001f] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x001f|PHI: r10 \l  PHI: (r10v0 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if (r10 == true) goto L_0x0021\l}"];
subgraph cluster_Region_974602478 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0021|updateCrc(r6.source.buffer(), 0, 10)\l}"];
}
}
Node_6 [shape=record,label="{6\:\ 0x0030|checkEqual(\"ID1ID2\", 8075, r6.source.readShort())\lr6.source.skip(8)\l}"];
subgraph cluster_IfRegion_428957882 {
label = "IF [B:7:0x0047] THEN: R(5:8|(1:10)|11|(1:13)|14) ELSE: null";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0047|if (((r7 \>\> 2) & 1) == 1) goto L_0x0049\l}"];
subgraph cluster_Region_1780474663 {
label = "R(5:8|(1:10)|11|(1:13)|14)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0049|r6.source.require(2)\l}"];
subgraph cluster_IfRegion_333981235 {
label = "IF [B:9:0x0050] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0050|if (r10 == true) goto L_0x0052\l}"];
subgraph cluster_Region_1205288673 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0052|updateCrc(r6.source.buffer(), 0, 2)\l}"];
}
}
Node_11 [shape=record,label="{11\:\ 0x0061|long long r11 = (long) r6.source.buffer().readShortLe()\lr6.source.require(r11)\l}"];
subgraph cluster_IfRegion_26581151 {
label = "IF [B:12:0x0071] THEN: R(1:13) ELSE: null";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0071|if (r10 == true) goto L_0x0073\l}"];
subgraph cluster_Region_823374338 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0073|updateCrc(r6.source.buffer(), 0, r11)\l}"];
}
}
Node_14 [shape=record,label="{14\:\ 0x0081|r6.source.skip(r11)\l}"];
}
}
subgraph cluster_IfRegion_746046210 {
label = "IF [B:16:0x008d] THEN: R(2:17|(2:(1:20)|21)(1:23)) ELSE: null";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x008d|if (((r7 \>\> 3) & 1) == 1) goto L_0x008f\l}"];
subgraph cluster_Region_831382463 {
label = "R(2:17|(2:(1:20)|21)(1:23))";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x008f|long long r15 = r6.source.indexOf((byte) 0)\l}"];
subgraph cluster_IfRegion_482927597 {
label = "IF [B:18:0x0097] THEN: R(2:(1:20)|21) ELSE: R(1:23)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0097|if (r15 != \-1) goto L_0x0099\l}"];
subgraph cluster_Region_877755913 {
label = "R(2:(1:20)|21)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2081224566 {
label = "IF [B:19:0x0099] THEN: R(1:20) ELSE: null";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0099|if (r10 == true) goto L_0x009b\l}"];
subgraph cluster_Region_226947553 {
label = "R(1:20)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x009b|updateCrc(r6.source.buffer(), 0, r15 + 1)\l}"];
}
}
Node_21 [shape=record,label="{21\:\ 0x00aa|r6.source.skip(r15 + 1)\l}"];
}
subgraph cluster_Region_117751682 {
label = "R(1:23)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x00b7|throw new java.io.EOFException()\l}"];
}
}
}
}
subgraph cluster_IfRegion_230558544 {
label = "IF [B:25:0x00bb] THEN: R(2:26|(2:(1:29)|30)(1:32)) ELSE: null";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x00bb|if (((r7 \>\> FCOMMENT) & 1) == 1) goto L_0x00bd\l}"];
subgraph cluster_Region_1920235618 {
label = "R(2:26|(2:(1:29)|30)(1:32))";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x00bd|long long r7 = r6.source.indexOf((byte) 0)\l}"];
subgraph cluster_IfRegion_1775801885 {
label = "IF [B:27:0x00c5] THEN: R(2:(1:29)|30) ELSE: R(1:32)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x00c5|if (r7 != \-1) goto L_0x00c7\l}"];
subgraph cluster_Region_1617633464 {
label = "R(2:(1:29)|30)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_218309697 {
label = "IF [B:28:0x00c7] THEN: R(1:29) ELSE: null";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x00c7|if (r10 == true) goto L_0x00c9\l}"];
subgraph cluster_Region_2112718411 {
label = "R(1:29)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x00c9|updateCrc(r6.source.buffer(), 0, r7 + 1)\l}"];
}
}
Node_30 [shape=record,label="{30\:\ 0x00d8|r6.source.skip(r7 + 1)\l}"];
}
subgraph cluster_Region_939535855 {
label = "R(1:32)";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x00e4|throw new java.io.EOFException()\l}"];
}
}
}
}
subgraph cluster_Region_948963889 {
label = "R(1:(1:34))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1602765420 {
label = "IF [B:33:0x00e5] THEN: R(1:34) ELSE: null";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x00e5|if (r10 == true) goto L_0x00e7\l}"];
subgraph cluster_Region_1179519988 {
label = "R(1:34)";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x00e7|checkEqual(\"FHCRC\", r6.source.readShortLe(), (short) ((int) r6.crc.getValue()))\lr6.crc.reset()\l}"];
}
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x001c}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x001e}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0086}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x00b2}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x00b8}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x00df}"];
Node_35 [shape=record,color=red,label="{35\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_36 [shape=record,color=red,label="{36\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void okio.GzipSource.consumeHeader((r17v0 'this' okio.GzipSource A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_15[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_11[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_14[style=dashed];
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_16 -> Node_24[style=dashed];
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_18 -> Node_22[style=dashed];
Node_19 -> Node_20;
Node_19 -> Node_21[style=dashed];
Node_20 -> Node_21;
Node_21 -> Node_24;
Node_25 -> Node_26;
Node_25 -> Node_33[style=dashed];
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_27 -> Node_31[style=dashed];
Node_28 -> Node_29;
Node_28 -> Node_30[style=dashed];
Node_29 -> Node_30;
Node_30 -> Node_33;
Node_33 -> Node_34;
Node_33 -> Node_36[style=dashed];
Node_34 -> Node_35;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_15 -> Node_16;
Node_22 -> Node_23;
Node_24 -> Node_25;
Node_31 -> Node_32;
}

