digraph "CFG forokio.Buffer.indexOf(BJJ)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if ((r12 \> 0 ? 1 : (r12 == 0 ? 0 : \-1)) \< 0) goto L_0x0078\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006}"];
Node_3 [shape=record,label="{3\:\ 0x0008|if ((r14 \> r12 ? 1 : (r14 == r12 ? 0 : \-1)) \< 0) goto L_0x0078\l}"];
Node_4 [shape=record,label="{4\:\ 0x000a}"];
Node_5 [shape=record,label="{5\:\ 0x000e|if ((r14 \> r10.size ? 1 : (r14 == r10.size ? 0 : \-1)) \<= 0) goto L_0x0012\l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|long r14 = r10.size\l}"];
Node_7 [shape=record,label="{7\:\ 0x0012|PHI: r14 \l  PHI: (r14v1 long) = (r14v0 long), (r14v2 long) binds: [B:5:0x000e, B:6:0x0010] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|if ((r12 \> r14 ? 1 : (r12 == r14 ? 0 : \-1)) != 0) goto L_0x0019\l}"];
Node_9 [shape=record,label="{9\:\ 0x0018|RETURN\l|return \-1\l}"];
Node_10 [shape=record,label="{10\:\ 0x0019|okio.Segment r4 = r10.head\l}"];
Node_11 [shape=record,label="{11\:\ 0x001b|if (r4 != null) goto L_0x001e\l}"];
Node_12 [shape=record,label="{12\:\ 0x001d|RETURN\l|return \-1\l}"];
Node_13 [shape=record,label="{13\:\ 0x001e}"];
Node_14 [shape=record,label="{14\:\ 0x0023|if (((r10.size \- r12) \> r12 ? 1 : ((r10.size \- r12) == r12 ? 0 : \-1)) \>= 0) goto L_0x0035\l}"];
Node_15 [shape=record,label="{15\:\ 0x0025|long r0 = r10.size\l}"];
Node_16 [shape=record,label="{16\:\ 0x0027|LOOP_START\lPHI: r0 r4 \l  PHI: (r0v9 long) = (r0v8 long), (r0v10 long) binds: [B:15:0x0025, B:18:0x002b] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v7 okio.Segment) = (r4v1 okio.Segment), (r4v8 okio.Segment) binds: [B:15:0x0025, B:18:0x002b] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:16:0x0027\-\>B:18:0x002b\l}"];
Node_17 [shape=record,label="{17\:\ 0x0029|if ((r0 \> r12 ? 1 : (r0 == r12 ? 0 : \-1)) \<= 0) goto L_0x0044\l}"];
Node_18 [shape=record,label="{18\:\ 0x002b|LOOP_END\lLOOP:0: B:16:0x0027\-\>B:18:0x002b\l|okio.Segment r4 = r4.prev\llong r0 = r0 \- ((long) (r4.limit \- r4.pos))\l}"];
Node_19 [shape=record,label="{19\:\ 0x0035|LOOP_START\lPHI: r0 r4 \l  PHI: (r0v6 long) = (r0v0 long), (r0v7 long) binds: [B:14:0x0023, B:21:0x0040] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v5 okio.Segment) = (r4v1 okio.Segment), (r4v6 okio.Segment) binds: [B:14:0x0023, B:21:0x0040] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:19:0x0035\-\>B:21:0x0040\l|long r5 = ((long) (r4.limit \- r4.pos)) + r0\l}"];
Node_20 [shape=record,label="{20\:\ 0x003e|if ((r5 \> r12 ? 1 : (r5 == r12 ? 0 : \-1)) \>= 0) goto L_0x0044\l}"];
Node_21 [shape=record,label="{21\:\ 0x0040|LOOP_END\lLOOP:1: B:19:0x0035\-\>B:21:0x0040\l|okio.Segment r4 = r4.next\lr0 = r5\l}"];
Node_22 [shape=record,label="{22\:\ 0x0044|LOOP_START\lPHI: r0 r4 r12 \l  PHI: (r0v4 long) = (r0v3 long), (r0v5 long) binds: [B:39:0x0044, B:31:0x006c] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v3 okio.Segment) = (r4v2 okio.Segment), (r4v4 okio.Segment) binds: [B:39:0x0044, B:31:0x006c] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r12v5 long) = (r12v0 long), (r12v11 long) binds: [B:39:0x0044, B:31:0x006c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:2: B:22:0x0044\-\>B:31:0x006c\l}"];
Node_23 [shape=record,label="{23\:\ 0x0046|if ((r0 \> r14 ? 1 : (r0 == r14 ? 0 : \-1)) \>= 0) goto L_0x0077\l}"];
Node_24 [shape=record,label="{24\:\ 0x0048|byte[] r5 = r4.data\lint r6 = (int) java.lang.Math.min((long) r4.limit, (((long) r4.pos) + r14) \- r0)\lint r12 = (int) ((((long) r4.pos) + r12) \- r0)\l}"];
Node_25 [shape=record,label="{25\:\ 0x005d|LOOP_START\lPHI: r12 \l  PHI: (r12v7 int) = (r12v6 int), (r12v13 int) binds: [B:24:0x0048, B:30:0x0069] A[DONT_GENERATE, DONT_INLINE]\lLOOP:3: B:25:0x005d\-\>B:30:0x0069\l|if (r12 \>= r6) goto L_0x006c\l}"];
Node_26 [shape=record,label="{26\:\ 0x005f}"];
Node_27 [shape=record,label="{27\:\ 0x0061|if (r5[r12] != r11) goto L_0x0069\l}"];
Node_28 [shape=record,label="{28\:\ 0x0063}"];
Node_29 [shape=record,label="{29\:\ 0x0068|RETURN\l|return ((long) (r12 \- r4.pos)) + r0\l}"];
Node_30 [shape=record,label="{30\:\ 0x0069|LOOP_END\lLOOP:3: B:25:0x005d\-\>B:30:0x0069\l|int r12 = r12 + 1\l}"];
Node_31 [shape=record,label="{31\:\ 0x006c|LOOP_END\lLOOP:2: B:22:0x0044\-\>B:31:0x006c\l|long r12 = ((long) (r4.limit \- r4.pos)) + r0\lokio.Segment r4 = r4.next\lr0 = r12\l}"];
Node_32 [shape=record,label="{32\:\ 0x0077|RETURN\l|return \-1\l}"];
Node_33 [shape=record,label="{33\:\ 0x0078|java.lang.Object[] r0 = new java.lang.Object[]\{java.lang.Long.valueOf(r10.size), java.lang.Long.valueOf(r12), java.lang.Long.valueOf(r14)\}\l}"];
Node_34 [shape=record,label="{34\:\ 0x009d|throw new java.lang.IllegalArgumentException(java.lang.String.format(\"size=%s fromIndex=%s toIndex=%s\", r0))\l}"];
Node_35 [shape=record,label="{35\:\ 0x0044|SYNTHETIC\l}"];
Node_36 [shape=record,label="{36\:\ 0x0044|SYNTHETIC\l}"];
Node_37 [shape=record,label="{37\:\ 0x0063|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x0077|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x0044|SYNTHETIC\lPHI: r0 r4 \l  PHI: (r0v3 long) = (r0v6 long), (r0v9 long) binds: [B:36:0x0044, B:35:0x0044] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v2 okio.Segment) = (r4v5 okio.Segment), (r4v7 okio.Segment) binds: [B:36:0x0044, B:35:0x0044] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_40 [shape=record,label="{40\:\ 0x006c|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public long okio.Buffer.indexOf((r10v0 'this' okio.Buffer A[IMMUTABLE_TYPE, THIS]), (r11v0 byte A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_33;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_33;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_19;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_35;
Node_18 -> Node_16;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_36;
Node_21 -> Node_19;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_38;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_40;
Node_26 -> Node_27;
Node_27 -> Node_30;
Node_27 -> Node_37[style=dashed];
Node_28 -> Node_29;
Node_30 -> Node_25;
Node_31 -> Node_22;
Node_33 -> Node_34;
Node_35 -> Node_39;
Node_36 -> Node_39;
Node_37 -> Node_28;
Node_38 -> Node_32;
Node_39 -> Node_22;
Node_40 -> Node_31;
}

