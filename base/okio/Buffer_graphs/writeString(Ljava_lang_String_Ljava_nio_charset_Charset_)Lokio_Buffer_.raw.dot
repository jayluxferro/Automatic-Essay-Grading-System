digraph "CFG forokio.Buffer.writeString(Ljava\/lang\/String;Ljava\/nio\/charset\/Charset;)Lokio\/Buffer;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = (r3 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l0x0004: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0005: INVOKE  (r3 I:okio.Buffer) = \l  (r2 I:okio.Buffer)\l  (r3 I:java.lang.String)\l  (r1 I:int)\l  (r0 I:int)\l  (r4 I:java.nio.charset.Charset)\l okio.Buffer.writeString(java.lang.String, int, int, java.nio.charset.Charset):okio.Buffer type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: RETURN  (r3 I:okio.Buffer) \l}"];
MethodNode[shape=record,label="{public okio.Buffer okio.Buffer.writeString((r2 'this' I:okio.Buffer A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.nio.charset.Charset A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

