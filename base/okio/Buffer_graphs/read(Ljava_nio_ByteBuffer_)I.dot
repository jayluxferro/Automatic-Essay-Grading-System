digraph "CFG forokio.Buffer.read(Ljava\/nio\/ByteBuffer;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|okio.Segment r0 = r6.head\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r0 != null) goto L_0x0006\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|RETURN\l|return \-1\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|int r1 = java.lang.Math.min(r7.remaining(), r0.limit \- r0.pos)\lr7.put(r0.data, r0.pos, r1)\lr0.pos = r0.pos + r1\lr6.size = r6.size \- ((long) r1)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0029|if (r0.pos != r0.limit) goto L_0x0034\l}"];
Node_5 [shape=record,label="{5\:\ 0x002b|r6.head = r0.pop()\lokio.SegmentPool.recycle(r0)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0034|RETURN\l|return r1\l}"];
MethodNode[shape=record,label="{public int okio.Buffer.read((r6v0 'this' okio.Buffer A[IMMUTABLE_TYPE, THIS]), (r7v0 java.nio.ByteBuffer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
}

