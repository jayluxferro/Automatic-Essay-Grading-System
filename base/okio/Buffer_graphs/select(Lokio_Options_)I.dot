digraph "CFG forokio.Buffer.select(Lokio\/Options;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|okio.Segment r6 = r10.head\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r6 != null) goto L_0x000b\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004}"];
Node_3 [shape=record,label="{3\:\ 0x000a|RETURN\l|return r11.indexOf(okio.ByteString.EMPTY)\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|okio.ByteString[] r11 = r11.byteStrings\lint r7 = r11.length\lr8 = 0\l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|LOOP_START\lPHI: r8 \l  PHI: (r8v1 int) = (r8v0 int), (r8v2 int) binds: [B:4:0x000b, B:16:0x003f] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:5:0x0010\-\>B:16:0x003f\l|if (r8 \>= r7) goto L_0x0042\l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|r9 = r11[r8]\l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|if ((r10.size \> ((long) r9.size()) ? 1 : (r10.size == ((long) r9.size()) ? 0 : \-1)) \< 0) goto L_0x003f\l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|r0 = r10\lr1 = r6\lr3 = r9\l}"];
Node_9 [shape=record,label="{9\:\ 0x002d|if (rangeEquals(r1, r6.pos, r3, 0, r9.size()) == false) goto L_0x003f\l}"];
Node_10 [shape=record,label="{10\:\ 0x002f|SYNTHETIC\lSplitter:B:10:0x002f\l}"];
Node_11 [shape=record,label="{11\:\ ?|Catch:\{ EOFException \-\> 0x0038 \}\lSplitter:B:10:0x002f\l|skip((long) r9.size())     \/\/ Catch:\{ EOFException \-\> 0x0038 \}\l}"];
Node_12 [shape=record,label="{12\:\ 0x0037|RETURN\l|return r8\l}"];
Node_13 [shape=record,label="{13\:\ 0x0038|ExcHandler: EOFException (r11v3 'e' java.io.EOFException A[CUSTOM_DECLARE])\lSplitter:B:10:0x002f\l|java.io.EOFException r11 = move\-exception\l}"];
Node_14 [shape=record,label="{14\:\ 0x0039}"];
Node_15 [shape=record,label="{15\:\ 0x003e|throw new java.lang.AssertionError(r11)\l}"];
Node_16 [shape=record,label="{16\:\ 0x003f|LOOP_END\lLOOP:0: B:5:0x0010\-\>B:16:0x003f\l|int r8 = r8 + 1\l}"];
Node_17 [shape=record,label="{17\:\ 0x0042|RETURN\l|return \-1\l}"];
Node_18 [shape=record,label="{18\:\ 0x0042|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x003f|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x003f|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public int okio.Buffer.select((r10v0 'this' okio.Buffer A[IMMUTABLE_TYPE, THIS]), (r11v0 okio.Options A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_18;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_19;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_20;
Node_10 -> Node_11;
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_16 -> Node_5;
Node_18 -> Node_17;
Node_19 -> Node_16;
Node_20 -> Node_16;
}

