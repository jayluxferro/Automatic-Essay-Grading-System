digraph "CFG forokio.Buffer.write([B)Lokio\/Buffer;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0009 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0003: ARRAY_LENGTH  (r1 I:int) = (r3 I:?[]) \l0x0004: INVOKE  (r3 I:okio.Buffer) = (r2 I:okio.Buffer), (r3 I:byte[]), (r0 I:int), (r1 I:int) okio.Buffer.write(byte[], int, int):okio.Buffer type: VIRTUAL \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: RETURN  (r3 I:okio.Buffer) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: NEW_INSTANCE  (r3 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x000b: CONST_STR  (r0 I:java.lang.String) =  \"source == null\" \l0x000d: INVOKE  \l  (r3 I:java.lang.IllegalArgumentException)\l  (r0 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public okio.Buffer okio.Buffer.write((r2 'this' I:okio.Buffer A[IMMUTABLE_TYPE, THIS]), (r3 I:byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_3 -> Node_4;
}

