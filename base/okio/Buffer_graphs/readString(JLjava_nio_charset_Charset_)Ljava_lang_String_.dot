digraph "CFG forokio.Buffer.readString(JLjava\/nio\/charset\/Charset;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|okio.Util.checkOffsetAndCount(r6.size, 0, r7)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|if (r9 == null) goto L_0x006e\l}"];
Node_2 [shape=record,label="{2\:\ 0x000a}"];
Node_3 [shape=record,label="{3\:\ 0x000f|if ((r7 \> 2147483647L ? 1 : (r7 == 2147483647L ? 0 : \-1)) \> 0) goto L_0x0057\l}"];
Node_4 [shape=record,label="{4\:\ 0x0011}"];
Node_5 [shape=record,label="{5\:\ 0x0015|if ((r7 \> 0 ? 1 : (r7 == 0 ? 0 : \-1)) != 0) goto L_0x001a\l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|RETURN\l|return \"\"\l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|okio.Segment r0 = r6.head\l}"];
Node_8 [shape=record,label="{8\:\ 0x0025|if (((((long) r0.pos) + r7) \> ((long) r0.limit) ? 1 : ((((long) r0.pos) + r7) == ((long) r0.limit) ? 0 : \-1)) \<= 0) goto L_0x0031\l}"];
Node_9 [shape=record,label="{9\:\ 0x0027}"];
Node_10 [shape=record,label="{10\:\ 0x0030|RETURN\l|return new java.lang.String(readByteArray(r7), r9)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0031|java.lang.String r1 = new java.lang.String(r0.data, r0.pos, (int) r7, r9)\lr0.pos = (int) (((long) r0.pos) + r7)\lr6.size = r6.size \- r7\l}"];
Node_12 [shape=record,label="{12\:\ 0x004b|if (r0.pos != r0.limit) goto L_0x0056\l}"];
Node_13 [shape=record,label="{13\:\ 0x004d|r6.head = r0.pop()\lokio.SegmentPool.recycle(r0)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0056|RETURN\l|return r1\l}"];
Node_15 [shape=record,label="{15\:\ 0x0057|java.lang.StringBuilder r0 = new java.lang.StringBuilder()\lr0.append(\"byteCount \> Integer.MAX_VALUE: \")\lr0.append(r7)\l}"];
Node_16 [shape=record,label="{16\:\ 0x006d|throw new java.lang.IllegalArgumentException(r0.toString())\l}"];
Node_17 [shape=record,label="{17\:\ 0x006e}"];
Node_18 [shape=record,label="{18\:\ 0x0075|throw new java.lang.IllegalArgumentException(\"charset == null\")\l}"];
MethodNode[shape=record,label="{public java.lang.String okio.Buffer.readString((r6v0 'this' okio.Buffer A[IMMUTABLE_TYPE, THIS]), (r7v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 java.nio.charset.Charset A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.EOFException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_17;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_15;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_11;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_17 -> Node_18;
}

