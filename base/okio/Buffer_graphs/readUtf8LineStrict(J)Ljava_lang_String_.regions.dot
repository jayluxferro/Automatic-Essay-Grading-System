digraph "CFG forokio.Buffer.readUtf8LineStrict(J)Ljava\/lang\/String;" {
subgraph cluster_Region_1748105350 {
label = "R(1:(2:(4:2|(1:4)|5|(2:(1:8)|(1:(2:(1:16)|(2:17|18)))))|(2:19|20)))";
node [shape=record,color=blue];
subgraph cluster_Region_423560067 {
label = "R(2:(4:2|(1:4)|5|(2:(1:8)|(1:(2:(1:16)|(2:17|18)))))|(2:19|20))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2079153926 {
label = "IF [B:1:0x0004] THEN: R(4:2|(1:4)|5|(2:(1:8)|(1:(2:(1:16)|(2:17|18))))) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r11 \>= 0) goto L_0x0006\l}"];
subgraph cluster_Region_1021644727 {
label = "R(4:2|(1:4)|5|(2:(1:8)|(1:(2:(1:16)|(2:17|18)))))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0006|long r2 = kotlin.jvm.internal.LongCompanionObject.MAX_VALUE\l}"];
subgraph cluster_IfRegion_1494903539 {
label = "IF [B:3:0x000f] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000f|if (r11 != kotlin.jvm.internal.LongCompanionObject.MAX_VALUE) goto L_0x0012\l}"];
subgraph cluster_Region_479981544 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0012|long r2 = r11 + 1\l}"];
}
}
Node_5 [shape=record,label="{5\:\ 0x0015|PHI: r2 \l  PHI: (r2v2 long) = (r2v1 long), (r2v7 long) binds: [B:3:0x000f, B:4:0x0012] A[DONT_GENERATE, DONT_INLINE]\l|long long r4 = indexOf((byte) 10, 0, r2)\l}"];
subgraph cluster_Region_1049119902 {
label = "R(2:(1:8)|(1:(2:(1:16)|(2:17|18))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1919440728 {
label = "IF [B:6:0x0023] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0023|if (r4 != \-1) goto L_0x0025\l}"];
subgraph cluster_Region_835650130 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0029|RETURN\l|return readUtf8Line(r4)\l}"];
}
}
subgraph cluster_Region_1598710743 {
label = "R(1:(2:(1:16)|(2:17|18)))";
node [shape=record,color=blue];
subgraph cluster_Region_1313739351 {
label = "R(2:(1:16)|(2:17|18))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1498091568 {
label = "IF [B:10:0x0030, B:12:0x003a, B:14:0x0042] THEN: R(1:16) ELSE: null";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0030|if (r2 \< size()) goto L_0x0032\l}"];
Node_12 [shape=record,label="{12\:\ 0x003a|ADDED_TO_REGION\l|if (getByte(r2 \- 1) == 13) goto L_0x003c\l}"];
Node_14 [shape=record,label="{14\:\ 0x0042|ADDED_TO_REGION\l|if (getByte(r2) == 10) goto L_0x0044\l}"];
subgraph cluster_Region_1717859476 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0048|RETURN\l|return readUtf8Line(r2)\l}"];
}
}
subgraph cluster_Region_805588683 {
label = "R(2:17|18)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0049|okio.Buffer okio.Buffer r6 = new okio.Buffer()\lcopyTo(r6, 0, java.lang.Math.min(32, size()))\l}"];
Node_18 [shape=record,label="{18\:\ 0x0092|throw new java.io.EOFException(\"n not found: limit=\" + java.lang.Math.min(size(), r11) + \" content=\" + r6.readByteString().hex() + kotlin.text.Typography.ellipsis)\l}"];
}
}
}
}
}
}
subgraph cluster_Region_1141482655 {
label = "R(2:19|20)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0093}"];
Node_20 [shape=record,label="{20\:\ 0x00a9|throw new java.lang.IllegalArgumentException(\"limit \< 0: \" + r11)\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0025}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x002a}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0032}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x003c}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0044}"];
MethodNode[shape=record,label="{public java.lang.String okio.Buffer.readUtf8LineStrict((r10v0 'this' okio.Buffer A[IMMUTABLE_TYPE, THIS]), (r11v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.EOFException]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_19[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_9[style=dashed];
Node_10 -> Node_11;
Node_10 -> Node_17[style=dashed];
Node_12 -> Node_13;
Node_12 -> Node_17[style=dashed];
Node_14 -> Node_15;
Node_14 -> Node_17[style=dashed];
Node_17 -> Node_18;
Node_19 -> Node_20;
Node_0 -> Node_1;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_15 -> Node_16;
}

