digraph "CFG forokio.Buffer.clear()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: IGET  (r0 I:long) = (r2 I:okio.Buffer) okio.Buffer.size long A[Catch:\{ EOFException \-\> 0x0006 \}, TRY_ENTER]\l0x0002: INVOKE  (r2 I:okio.Buffer), (r0 I:long) okio.Buffer.skip(long):void type: VIRTUAL A[Catch:\{ EOFException \-\> 0x0006 \}, TRY_LEAVE]\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|ExcHandler: EOFException null\lSplitter:B:0:0x0000\l|0x0006: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: NEW_INSTANCE  (r1 I:java.lang.AssertionError) =  java.lang.AssertionError \l0x0009: INVOKE  (r1 I:java.lang.AssertionError), (r0 I:java.lang.Object) java.lang.AssertionError.\<init\>(java.lang.Object):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|0x000c: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void okio.Buffer.clear((r2 'this' I:okio.Buffer A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

