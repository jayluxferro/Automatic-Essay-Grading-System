digraph "CFG forokio.Buffer.hmac(Ljava\/lang\/String;Lokio\/ByteString;)Lokio\/ByteString;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Catch:\{ NoSuchAlgorithmException \-\> 0x004d, InvalidKeyException \-\> 0x0046 \}\lSplitter:B:0:0x0000\l|javax.crypto.Mac r0 = javax.crypto.Mac.getInstance(r5)     \/\/ Catch:\{ NoSuchAlgorithmException \-\> 0x004d, InvalidKeyException \-\> 0x0046 \}\lr0.init(new javax.crypto.spec.SecretKeySpec(r6.toByteArray(), r5))     \/\/ Catch:\{ NoSuchAlgorithmException \-\> 0x004d, InvalidKeyException \-\> 0x0046 \}\l}"];
Node_2 [shape=record,label="{2\:\ 0x0012|Catch:\{ NoSuchAlgorithmException \-\> 0x004d, InvalidKeyException \-\> 0x0046 \}\l|if (r4.head == null) goto L_0x003d     \/\/ Catch:\{ NoSuchAlgorithmException \-\> 0x004d, InvalidKeyException \-\> 0x0046 \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|Catch:\{ NoSuchAlgorithmException \-\> 0x004d, InvalidKeyException \-\> 0x0046 \}\l|r0.update(r4.head.data, r4.head.pos, r4.head.limit \- r4.head.pos)     \/\/ Catch:\{ NoSuchAlgorithmException \-\> 0x004d, InvalidKeyException \-\> 0x0046 \}\lokio.Segment r5 = r4.head     \/\/ Catch:\{ NoSuchAlgorithmException \-\> 0x004d, InvalidKeyException \-\> 0x0046 \}\l}"];
Node_4 [shape=record,label="{4\:\ 0x002a|LOOP_START\lCatch:\{ NoSuchAlgorithmException \-\> 0x004d, InvalidKeyException \-\> 0x0046 \}\lPHI: r5 \l  PHI: (r5v9 okio.Segment) = (r5v8 okio.Segment), (r5v10 okio.Segment) binds: [B:3:0x0014, B:6:0x0030] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x002a\-\>B:6:0x0030\l|okio.Segment r5 = r5.next     \/\/ Catch:\{ NoSuchAlgorithmException \-\> 0x004d, InvalidKeyException \-\> 0x0046 \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x002e|Catch:\{ NoSuchAlgorithmException \-\> 0x004d, InvalidKeyException \-\> 0x0046 \}\l|if (r5 == r4.head) goto L_0x003d     \/\/ Catch:\{ NoSuchAlgorithmException \-\> 0x004d, InvalidKeyException \-\> 0x0046 \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x0030|LOOP_END\lCatch:\{ NoSuchAlgorithmException \-\> 0x004d, InvalidKeyException \-\> 0x0046 \}\lLOOP:0: B:4:0x002a\-\>B:6:0x0030\l|r0.update(r5.data, r5.pos, r5.limit \- r5.pos)     \/\/ Catch:\{ NoSuchAlgorithmException \-\> 0x004d, InvalidKeyException \-\> 0x0046 \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x003d|Catch:\{ NoSuchAlgorithmException \-\> 0x004d, InvalidKeyException \-\> 0x0046 \}\l}"];
Node_8 [shape=record,label="{8\:\ 0x0045|RETURN\l|return okio.ByteString.m183of(r0.doFinal())\l}"];
Node_9 [shape=record,label="{9\:\ 0x0046|ExcHandler: InvalidKeyException (r5v2 'e' java.security.InvalidKeyException A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l|java.security.InvalidKeyException r5 = move\-exception\l}"];
Node_10 [shape=record,label="{10\:\ 0x0047}"];
Node_11 [shape=record,label="{11\:\ 0x004c|throw new java.lang.IllegalArgumentException(r5)\l}"];
Node_12 [shape=record,label="{12\:\ 0x004d}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lExcHandler: NoSuchAlgorithmException (unused java.security.NoSuchAlgorithmException)\lSplitter:B:0:0x0000\l}"];
Node_14 [shape=record,label="{14\:\ 0x0052|throw new java.lang.AssertionError()\l}"];
Node_15 [shape=record,label="{15\:\ 0x003d|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private okio.ByteString okio.Buffer.hmac((r4v0 'this' okio.Buffer A[IMMUTABLE_TYPE, THIS]), (r5v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 okio.ByteString A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_13;
Node_0 -> Node_9;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_15;
Node_6 -> Node_4;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_12 -> Node_14;
Node_13 -> Node_12;
Node_15 -> Node_7;
}

