digraph "CFG forokio.Buffer.readUtf8Line(J)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|if ((r7 \> 0 ? 1 : (r7 == 0 ? 0 : \-1)) \<= 0) goto L_0x001c\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|long r2 = r7 \- 1\l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|if (getByte(r2) != 13) goto L_0x001c\l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|java.lang.String r7 = readUtf8(r2)\lskip(2)\l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|RETURN\l|return r7\l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|java.lang.String r7 = readUtf8(r7)\lskip(1)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0023|RETURN\l|return r7\l}"];
MethodNode[shape=record,label="{java.lang.String okio.Buffer.readUtf8Line((r6v0 'this' okio.Buffer A[IMMUTABLE_TYPE, THIS]), (r7v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.EOFException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
}

