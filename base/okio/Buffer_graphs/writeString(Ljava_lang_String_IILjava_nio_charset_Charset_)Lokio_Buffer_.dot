digraph "CFG forokio.Buffer.writeString(Ljava\/lang\/String;IILjava\/nio\/charset\/Charset;)Lokio\/Buffer;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r2 == null) goto L_0x008b\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r3 \< 0) goto L_0x0074\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|if (r4 \< r3) goto L_0x0055\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006}"];
Node_4 [shape=record,label="{4\:\ 0x000a|if (r4 \> r2.length()) goto L_0x0032\l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|if (r5 == null) goto L_0x002a\l}"];
Node_6 [shape=record,label="{6\:\ 0x000e}"];
Node_7 [shape=record,label="{7\:\ 0x0014|if (r5.equals(okio.Util.UTF_8) == false) goto L_0x001b\l}"];
Node_8 [shape=record,label="{8\:\ 0x0016}"];
Node_9 [shape=record,label="{9\:\ 0x001a|RETURN\l|return writeUtf8(r2, r3, r4)\l}"];
Node_10 [shape=record,label="{10\:\ 0x001b|byte[] r2 = r2.substring(r3, r4).getBytes(r5)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0029|RETURN\l|return write(r2, 0, r2.length)\l}"];
Node_12 [shape=record,label="{12\:\ 0x002a}"];
Node_13 [shape=record,label="{13\:\ 0x0031|throw new java.lang.IllegalArgumentException(\"charset == null\")\l}"];
Node_14 [shape=record,label="{14\:\ 0x0032|java.lang.StringBuilder r5 = new java.lang.StringBuilder()\lr5.append(\"endIndex \> string.length: \")\lr5.append(r4)\lr5.append(\" \> \")\lr5.append(r2.length())\l}"];
Node_15 [shape=record,label="{15\:\ 0x0054|throw new java.lang.IllegalArgumentException(r5.toString())\l}"];
Node_16 [shape=record,label="{16\:\ 0x0055|java.lang.StringBuilder r5 = new java.lang.StringBuilder()\lr5.append(\"endIndex \< beginIndex: \")\lr5.append(r4)\lr5.append(\" \< \")\lr5.append(r3)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0073|throw new java.lang.IllegalArgumentException(r5.toString())\l}"];
Node_18 [shape=record,label="{18\:\ 0x0074|java.lang.StringBuilder r4 = new java.lang.StringBuilder()\lr4.append(\"beginIndex \< 0: \")\lr4.append(r3)\l}"];
Node_19 [shape=record,label="{19\:\ 0x008a|throw new java.lang.IllegalAccessError(r4.toString())\l}"];
Node_20 [shape=record,label="{20\:\ 0x008b}"];
Node_21 [shape=record,label="{21\:\ 0x0092|throw new java.lang.IllegalArgumentException(\"string == null\")\l}"];
MethodNode[shape=record,label="{public okio.Buffer okio.Buffer.writeString((r1v0 'this' okio.Buffer A[IMMUTABLE_TYPE, THIS]), (r2v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 java.nio.charset.Charset A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_20;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_18;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_16;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_14;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_12;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_18 -> Node_19;
Node_20 -> Node_21;
}

