digraph "CFG forokio.Buffer.writableSegment(I)Lokio\/Segment;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|if (r4 \< 1) goto L_0x0032\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003}"];
Node_3 [shape=record,label="{3\:\ 0x0005|if (r4 \> 8192) goto L_0x0032\l}"];
Node_4 [shape=record,label="{4\:\ 0x0007}"];
Node_5 [shape=record,label="{5\:\ 0x0009|if (r3.head != null) goto L_0x001c\l}"];
Node_6 [shape=record,label="{6\:\ 0x000b|r3.head = okio.SegmentPool.take()\lokio.Segment r4 = r3.head\lokio.Segment r0 = r3.head\lokio.Segment r1 = r3.head\lr0.prev = r1\lr4.next = r1\l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|RETURN\l|return r1\l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|okio.Segment r1 = r3.head.prev\l}"];
Node_9 [shape=record,label="{9\:\ 0x0023|if ((r1.limit + r4) \> 8192) goto L_0x0029\l}"];
Node_10 [shape=record,label="{10\:\ 0x0025}"];
Node_11 [shape=record,label="{11\:\ 0x0027|if (r1.owner != false) goto L_?\l}"];
Node_12 [shape=record,label="{12\:\ 0x0029}"];
Node_13 [shape=record,label="{13\:\ 0x0032}"];
Node_14 [shape=record,label="{14\:\ 0x0037|throw new java.lang.IllegalArgumentException()\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return r1.push(okio.SegmentPool.take())\l}"];
Node_16 [shape=record,label="{16\:\ ?|SYNTHETIC\lRETURN\l|return r1\l}"];
MethodNode[shape=record,label="{okio.Segment okio.Buffer.writableSegment((r3v0 'this' okio.Buffer A[IMMUTABLE_TYPE, THIS]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_13;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_13;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_16;
Node_12 -> Node_15;
Node_13 -> Node_14;
}

