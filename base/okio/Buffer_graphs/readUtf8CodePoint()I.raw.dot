digraph "CFG forokio.Buffer.readUtf8CodePoint()I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:long) = (r12 I:okio.Buffer) okio.Buffer.size long \l0x0002: CONST  (r2 I:?[long, double]) = (0 ?[long, double]) \l0x0004: CMP_L  (r0 I:int) = (r0 I:long), (r2 I:long) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x00ad \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: INVOKE  (r0 I:byte) = (r12 I:okio.Buffer), (r2 I:long) okio.Buffer.getByte(long):byte type: VIRTUAL \l0x000c: ARITH  (r1 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) & (128(0x80, float:1.794E\-43) ?[int, float, short, byte, char]) \l0x000e: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000f: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (128(0x80, float:1.794E\-43) ?[int, float, short, byte, char])\l \l0x0011: CONST  (r4 I:?[int, float, short, byte, char]) = \l  (65533(0xfffd, float:9.1831E\-41) ?[int, float, short, byte, char])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|0x0014: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x001c \l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|0x0016: ARITH  (r1 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) & (127(0x7f, float:1.78E\-43) ?[int, float, short, byte, char]) \l0x0018: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0019: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x001a: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|0x001c: ARITH  (r1 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) & (224(0xe0, float:3.14E\-43) ?[int, float, short, byte, char]) \l0x001e: CONST  (r5 I:?[int, float, short, byte, char]) = \l  (192(0xc0, float:2.69E\-43) ?[int, float, short, byte, char])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x0020|0x0020: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0028 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0022|0x0022: ARITH  (r1 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) & (31 ?[int, float, short, byte, char]) \l0x0024: CONST  (r5 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0025: CONST  (r6 I:?[int, float, short, byte, char]) = \l  (128(0x80, float:1.794E\-43) ?[int, float, short, byte, char])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x0028|0x0028: ARITH  (r1 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) & (240(0xf0, float:3.36E\-43) ?[int, float, short, byte, char]) \l0x002a: CONST  (r5 I:?[int, float, short, byte, char]) = \l  (224(0xe0, float:3.14E\-43) ?[int, float, short, byte, char])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x002c|0x002c: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0034 \l}"];
Node_10 [shape=record,label="{10\:\ 0x002e|0x002e: ARITH  (r1 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) & (15 ?[int, float, short, byte, char]) \l0x0030: CONST  (r5 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0031: CONST  (r6 I:?[int, float, short, byte, char]) = \l  (2048(0x800, float:2.87E\-42) ?[int, float, short, byte, char])\l \l}"];
Node_11 [shape=record,label="{11\:\ 0x0034|0x0034: ARITH  (r1 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) & (248(0xf8, float:3.48E\-43) ?[int, float, short, byte, char]) \l0x0036: CONST  (r5 I:?[int, float, short, byte, char]) = \l  (240(0xf0, float:3.36E\-43) ?[int, float, short, byte, char])\l \l}"];
Node_12 [shape=record,label="{12\:\ 0x0038|0x0038: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x00a7 \l}"];
Node_13 [shape=record,label="{13\:\ 0x003a|0x003a: ARITH  (r1 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) & (7 ?[int, float, short, byte, char]) \l0x003c: CONST  (r5 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x003d: CONST  (r6 I:?[int, float, short, byte, char]) = \l  (65536(0x10000, float:9.18355E\-41) ?[int, float, short, byte, char])\l \l}"];
Node_14 [shape=record,label="{14\:\ 0x003f|0x003f: IGET  (r7 I:long) = (r12 I:okio.Buffer) okio.Buffer.size long \l0x0041: CAST  (r9 I:long) = (long) (r5 I:int) \l0x0042: CMP_L  (r7 I:int) = (r7 I:long), (r9 I:long) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0044|0x0044: IF  (r7 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:33:0x0075 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0046|0x0046: IF  (r2 I:?[int, byte, short, char]) \>= (r5 I:?[int, byte, short, char])  \-\> B:22:0x005d \l}"];
Node_17 [shape=record,label="{17\:\ 0x0048|0x0048: CAST  (r7 I:long) = (long) (r2 I:int) \l0x0049: INVOKE  (r0 I:byte) = (r12 I:okio.Buffer), (r7 I:long) okio.Buffer.getByte(long):byte type: VIRTUAL \l0x004d: ARITH  (r11 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) & (192(0xc0, float:2.69E\-43) ?[int, float, short, byte, char]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x004f|0x004f: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0059 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0051|0x0051: ARITH  (r1 I:int) = (r1 I:int) \<\< (6 int) \l0x0053: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) & (63 ?[int, float, short, byte, char]) \l0x0055: ARITH  (r1 I:?[int, boolean, short, byte, char]) = (r1 I:?[int, boolean, short, byte, char]) \| (r0 I:?[int, boolean, short, byte, char]) \l0x0056: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0059|0x0059: INVOKE  (r12 I:okio.Buffer), (r7 I:long) okio.Buffer.skip(long):void type: VIRTUAL \l}"];
Node_21 [shape=record,label="{21\:\ 0x005c|0x005c: RETURN  (r4 I:int) \l}"];
Node_22 [shape=record,label="{22\:\ 0x005d|0x005d: INVOKE  (r12 I:okio.Buffer), (r9 I:long) okio.Buffer.skip(long):void type: VIRTUAL \l0x0060: CONST  (r0 I:?[int, float, short, byte, char]) = \l  (1114111(0x10ffff, float:1.561202E\-39) ?[int, float, short, byte, char])\l \l}"];
Node_23 [shape=record,label="{23\:\ 0x0063|0x0063: IF  (r1 I:?[int, byte, short, char]) \<= (r0 I:?[int, byte, short, char])  \-\> B:25:0x0066 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0065|0x0065: RETURN  (r4 I:int) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0066|0x0066: CONST  (r0 I:?[int, float, short, byte, char]) = \l  (55296(0xd800, float:7.7486E\-41) ?[int, float, short, byte, char])\l \l}"];
Node_26 [shape=record,label="{26\:\ 0x0069|0x0069: IF  (r1 I:?[int, byte, short, char]) \< (r0 I:?[int, byte, short, char])  \-\> B:30:0x0071 \l}"];
Node_27 [shape=record,label="{27\:\ 0x006b|0x006b: CONST  (r0 I:?[int, float, short, byte, char]) = \l  (57343(0xdfff, float:8.0355E\-41) ?[int, float, short, byte, char])\l \l}"];
Node_28 [shape=record,label="{28\:\ 0x006e|0x006e: IF  (r1 I:?[int, byte, short, char]) \> (r0 I:?[int, byte, short, char])  \-\> B:30:0x0071 \l}"];
Node_29 [shape=record,label="{29\:\ 0x0070|0x0070: RETURN  (r4 I:int) \l}"];
Node_30 [shape=record,label="{30\:\ 0x0071|0x0071: IF  (r1 I:?[int, byte, short, char]) \>= (r6 I:?[int, byte, short, char])  \-\> B:32:0x0074 \l}"];
Node_31 [shape=record,label="{31\:\ 0x0073|0x0073: RETURN  (r4 I:int) \l}"];
Node_32 [shape=record,label="{32\:\ 0x0074|0x0074: RETURN  (r1 I:int) \l}"];
Node_33 [shape=record,label="{33\:\ 0x0075|0x0075: NEW_INSTANCE  (r1 I:java.io.EOFException) =  java.io.EOFException \l0x0077: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0079: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x007c: CONST_STR  (r3 I:java.lang.String) =  \"size \< \" \l0x007e: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0081: INVOKE  (r2 I:java.lang.StringBuilder), (r5 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x0084: CONST_STR  (r3 I:java.lang.String) =  \": \" \l0x0086: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0089: IGET  (r3 I:long) = (r12 I:okio.Buffer) okio.Buffer.size long \l0x008b: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:long) java.lang.StringBuilder.append(long):java.lang.StringBuilder type: VIRTUAL \l0x008e: CONST_STR  (r3 I:java.lang.String) =  \" (to read code point prefixed 0x\" \l0x0090: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0093: INVOKE  (r0 I:java.lang.String) = (r0 I:int) java.lang.Integer.toHexString(int):java.lang.String type: STATIC \l0x0097: INVOKE  (r2 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x009a: CONST_STR  (r0 I:java.lang.String) =  \")\" \l0x009c: INVOKE  (r2 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x009f: INVOKE  (r0 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x00a3: INVOKE  (r1 I:java.io.EOFException), (r0 I:java.lang.String) java.io.EOFException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_34 [shape=record,label="{34\:\ 0x00a6|0x00a6: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_35 [shape=record,label="{35\:\ 0x00a7|0x00a7: CONST  (r0 I:?[long, double]) = (1 ?[long, double]) \l0x00a9: INVOKE  (r12 I:okio.Buffer), (r0 I:long) okio.Buffer.skip(long):void type: VIRTUAL \l}"];
Node_36 [shape=record,label="{36\:\ 0x00ac|0x00ac: RETURN  (r4 I:int) \l}"];
Node_37 [shape=record,label="{37\:\ 0x00ad|0x00ad: NEW_INSTANCE  (r0 I:java.io.EOFException) =  java.io.EOFException \l0x00af: INVOKE  (r0 I:java.io.EOFException) java.io.EOFException.\<init\>():void type: DIRECT \l}"];
Node_38 [shape=record,label="{38\:\ 0x00b2|0x00b2: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public int okio.Buffer.readUtf8CodePoint((r12 'this' I:okio.Buffer A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.EOFException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_37;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_14;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_14;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_14;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_35;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_33;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_22;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_16;
Node_20 -> Node_21;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_30;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_33 -> Node_34;
Node_35 -> Node_36;
Node_37 -> Node_38;
}

