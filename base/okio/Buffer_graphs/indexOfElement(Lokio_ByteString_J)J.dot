digraph "CFG forokio.Buffer.indexOfElement(Lokio\/ByteString;J)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if ((r13 \> 0 ? 1 : (r13 == 0 ? 0 : \-1)) \< 0) goto L_0x00a9\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|okio.Segment r2 = r11.head\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|if (r2 != null) goto L_0x000d\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|RETURN\l|return \-1\l}"];
Node_5 [shape=record,label="{5\:\ 0x000d}"];
Node_6 [shape=record,label="{6\:\ 0x0012|if (((r11.size \- r13) \> r13 ? 1 : ((r11.size \- r13) == r13 ? 0 : \-1)) \>= 0) goto L_0x0024\l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|long r0 = r11.size\l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|LOOP_START\lPHI: r0 r2 \l  PHI: (r0v9 long) = (r0v8 long), (r0v10 long) binds: [B:7:0x0014, B:10:0x001a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v9 okio.Segment) = (r2v1 okio.Segment), (r2v10 okio.Segment) binds: [B:7:0x0014, B:10:0x001a] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:8:0x0016\-\>B:10:0x001a\l}"];
Node_9 [shape=record,label="{9\:\ 0x0018|if ((r0 \> r13 ? 1 : (r0 == r13 ? 0 : \-1)) \<= 0) goto L_0x0033\l}"];
Node_10 [shape=record,label="{10\:\ 0x001a|LOOP_END\lLOOP:0: B:8:0x0016\-\>B:10:0x001a\l|okio.Segment r2 = r2.prev\llong r0 = r0 \- ((long) (r2.limit \- r2.pos))\l}"];
Node_11 [shape=record,label="{11\:\ 0x0024|LOOP_START\lPHI: r0 r2 \l  PHI: (r0v6 long) = (r0v0 long), (r0v7 long) binds: [B:6:0x0012, B:13:0x002f] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v7 okio.Segment) = (r2v1 okio.Segment), (r2v8 okio.Segment) binds: [B:6:0x0012, B:13:0x002f] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:11:0x0024\-\>B:13:0x002f\l|long r5 = ((long) (r2.limit \- r2.pos)) + r0\l}"];
Node_12 [shape=record,label="{12\:\ 0x002d|if ((r5 \> r13 ? 1 : (r5 == r13 ? 0 : \-1)) \>= 0) goto L_0x0033\l}"];
Node_13 [shape=record,label="{13\:\ 0x002f|LOOP_END\lLOOP:1: B:11:0x0024\-\>B:13:0x002f\l|okio.Segment r2 = r2.next\lr0 = r5\l}"];
Node_14 [shape=record,label="{14\:\ 0x0033|PHI: r0 r2 \l  PHI: (r0v1 long) = (r0v6 long), (r0v9 long) binds: [B:46:0x0033, B:45:0x0033] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v2 okio.Segment) = (r2v7 okio.Segment), (r2v9 okio.Segment) binds: [B:46:0x0033, B:45:0x0033] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0039|if (r12.size() != 2) goto L_0x0071\l}"];
Node_16 [shape=record,label="{16\:\ 0x003b|byte r5 = r12.getByte(0)\lbyte r12 = r12.getByte(1)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0044|LOOP_START\lPHI: r0 r2 r13 \l  PHI: (r0v4 long) = (r0v1 long), (r0v5 long) binds: [B:16:0x003b, B:27:0x0066] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v5 okio.Segment) = (r2v2 okio.Segment), (r2v6 okio.Segment) binds: [B:16:0x003b, B:27:0x0066] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r13v11 long) = (r13v0 long), (r13v17 long) binds: [B:16:0x003b, B:27:0x0066] A[DONT_GENERATE, DONT_INLINE]\lLOOP:2: B:17:0x0044\-\>B:27:0x0066\l}"];
Node_18 [shape=record,label="{18\:\ 0x0048|if ((r0 \> r11.size ? 1 : (r0 == r11.size ? 0 : \-1)) \>= 0) goto L_0x00a8\l}"];
Node_19 [shape=record,label="{19\:\ 0x004a|byte[] r6 = r2.data\lint r13 = (int) ((((long) r2.pos) + r13) \- r0)\lint r14 = r2.limit\l}"];
Node_20 [shape=record,label="{20\:\ 0x0054|LOOP_START\lPHI: r13 \l  PHI: (r13v13 int) = (r13v12 int), (r13v19 int) binds: [B:19:0x004a, B:24:0x005d] A[DONT_GENERATE, DONT_INLINE]\lLOOP:3: B:20:0x0054\-\>B:24:0x005d\l|if (r13 \>= r14) goto L_0x0066\l}"];
Node_21 [shape=record,label="{21\:\ 0x0056|byte r7 = r6[r13]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0058|if (r7 == r5) goto L_0x0060\l}"];
Node_23 [shape=record,label="{23\:\ 0x005a|if (r7 != r12) goto L_0x005d\l}"];
Node_24 [shape=record,label="{24\:\ 0x005d|LOOP_END\lLOOP:3: B:20:0x0054\-\>B:24:0x005d\l|int r13 = r13 + 1\l}"];
Node_25 [shape=record,label="{25\:\ 0x0060}"];
Node_26 [shape=record,label="{26\:\ 0x0065|RETURN\l|return ((long) (r13 \- r2.pos)) + r0\l}"];
Node_27 [shape=record,label="{27\:\ 0x0066|LOOP_END\lLOOP:2: B:17:0x0044\-\>B:27:0x0066\l|long r13 = ((long) (r2.limit \- r2.pos)) + r0\lokio.Segment r2 = r2.next\lr0 = r13\l}"];
Node_28 [shape=record,label="{28\:\ 0x0071|byte[] r12 = r12.internalArray()\l}"];
Node_29 [shape=record,label="{29\:\ 0x0075|LOOP_START\lPHI: r0 r2 r13 \l  PHI: (r0v2 long) = (r0v1 long), (r0v3 long) binds: [B:28:0x0071, B:41:0x009d] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v3 okio.Segment) = (r2v2 okio.Segment), (r2v4 okio.Segment) binds: [B:28:0x0071, B:41:0x009d] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r13v2 long) = (r13v0 long), (r13v8 long) binds: [B:28:0x0071, B:41:0x009d] A[DONT_GENERATE, DONT_INLINE]\lLOOP:4: B:29:0x0075\-\>B:41:0x009d\l}"];
Node_30 [shape=record,label="{30\:\ 0x0079|if ((r0 \> r11.size ? 1 : (r0 == r11.size ? 0 : \-1)) \>= 0) goto L_0x00a8\l}"];
Node_31 [shape=record,label="{31\:\ 0x007b|byte[] r5 = r2.data\lint r13 = (int) ((((long) r2.pos) + r13) \- r0)\lint r14 = r2.limit\l}"];
Node_32 [shape=record,label="{32\:\ 0x0085|LOOP_START\lPHI: r13 \l  PHI: (r13v4 int) = (r13v3 int), (r13v9 int) binds: [B:31:0x007b, B:40:0x009a] A[DONT_GENERATE, DONT_INLINE]\lLOOP:5: B:32:0x0085\-\>B:40:0x009a\l|if (r13 \>= r14) goto L_0x009d\l}"];
Node_33 [shape=record,label="{33\:\ 0x0087|byte r6 = r5[r13]\lint r8 = r12.length\lr9 = 0\l}"];
Node_34 [shape=record,label="{34\:\ 0x008b|LOOP_START\lPHI: r9 \l  PHI: (r9v1 int) = (r9v0 int), (r9v2 int) binds: [B:33:0x0087, B:39:0x0097] A[DONT_GENERATE, DONT_INLINE]\lLOOP:6: B:34:0x008b\-\>B:39:0x0097\l|if (r9 \>= r8) goto L_0x009a\l}"];
Node_35 [shape=record,label="{35\:\ 0x008d}"];
Node_36 [shape=record,label="{36\:\ 0x008f|if (r6 != r12[r9]) goto L_0x0097\l}"];
Node_37 [shape=record,label="{37\:\ 0x0091}"];
Node_38 [shape=record,label="{38\:\ 0x0096|RETURN\l|return ((long) (r13 \- r2.pos)) + r0\l}"];
Node_39 [shape=record,label="{39\:\ 0x0097|LOOP_END\lLOOP:6: B:34:0x008b\-\>B:39:0x0097\l|int r9 = r9 + 1\l}"];
Node_40 [shape=record,label="{40\:\ 0x009a|LOOP_END\lLOOP:5: B:32:0x0085\-\>B:40:0x009a\l|int r13 = r13 + 1\l}"];
Node_41 [shape=record,label="{41\:\ 0x009d|LOOP_END\lLOOP:4: B:29:0x0075\-\>B:41:0x009d\l|long r13 = ((long) (r2.limit \- r2.pos)) + r0\lokio.Segment r2 = r2.next\lr0 = r13\l}"];
Node_42 [shape=record,label="{42\:\ 0x00a8|RETURN\l|return \-1\l}"];
Node_43 [shape=record,label="{43\:\ 0x00a9}"];
Node_44 [shape=record,label="{44\:\ 0x00b0|throw new java.lang.IllegalArgumentException(\"fromIndex \< 0\")\l}"];
Node_45 [shape=record,label="{45\:\ 0x0033|SYNTHETIC\l}"];
Node_46 [shape=record,label="{46\:\ 0x0033|SYNTHETIC\l}"];
Node_47 [shape=record,label="{47\:\ 0x00a8|SYNTHETIC\l}"];
Node_48 [shape=record,label="{48\:\ 0x0060|SYNTHETIC\l}"];
Node_49 [shape=record,label="{49\:\ 0x0060|SYNTHETIC\l}"];
Node_50 [shape=record,label="{50\:\ 0x0066|SYNTHETIC\l}"];
Node_51 [shape=record,label="{51\:\ 0x00a8|SYNTHETIC\l}"];
Node_52 [shape=record,label="{52\:\ 0x0091|SYNTHETIC\l}"];
Node_53 [shape=record,label="{53\:\ 0x009d|SYNTHETIC\l}"];
Node_54 [shape=record,label="{54\:\ 0x009a|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public long okio.Buffer.indexOfElement((r11v0 'this' okio.Buffer A[IMMUTABLE_TYPE, THIS]), (r12v0 okio.ByteString A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_43;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_11;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_45;
Node_10 -> Node_8;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_46;
Node_13 -> Node_11;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_28;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_47;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_50;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_48;
Node_23 -> Node_24;
Node_23 -> Node_49[style=dashed];
Node_24 -> Node_20;
Node_25 -> Node_26;
Node_27 -> Node_17;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_51;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_53;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_54;
Node_35 -> Node_36;
Node_36 -> Node_39;
Node_36 -> Node_52[style=dashed];
Node_37 -> Node_38;
Node_39 -> Node_34;
Node_40 -> Node_32;
Node_41 -> Node_29;
Node_43 -> Node_44;
Node_45 -> Node_14;
Node_46 -> Node_14;
Node_47 -> Node_42;
Node_48 -> Node_25;
Node_49 -> Node_25;
Node_50 -> Node_27;
Node_51 -> Node_42;
Node_52 -> Node_37;
Node_53 -> Node_41;
Node_54 -> Node_40;
}

