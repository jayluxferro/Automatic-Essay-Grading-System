digraph "CFG forokio.Buffer.readFrom(Ljava\/io\/InputStream;)Lokio\/Buffer;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[long, double]) = \l  (9223372036854775807(0x7fffffffffffffff, double:NaN) ?[long, double])\l \l0x0005: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0006: INVOKE  \l  (r3 I:okio.Buffer)\l  (r4 I:java.io.InputStream)\l  (r0 I:long)\l  (r2 I:boolean)\l okio.Buffer.readFrom(java.io.InputStream, long, boolean):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: RETURN  (r3 I:okio.Buffer) \l}"];
MethodNode[shape=record,label="{public okio.Buffer okio.Buffer.readFrom((r3 'this' I:okio.Buffer A[IMMUTABLE_TYPE, THIS]), (r4 I:java.io.InputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

