digraph "CFG forokio.Buffer.digest(Ljava\/lang\/String;)Lokio\/ByteString;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Catch:\{ NoSuchAlgorithmException \-\> 0x003a \}\lSplitter:B:0:0x0000\l|java.security.MessageDigest r6 = java.security.MessageDigest.getInstance(r6)     \/\/ Catch:\{ NoSuchAlgorithmException \-\> 0x003a \}\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|Catch:\{ NoSuchAlgorithmException \-\> 0x003a \}\l|if (r5.head == null) goto L_0x0031     \/\/ Catch:\{ NoSuchAlgorithmException \-\> 0x003a \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|Catch:\{ NoSuchAlgorithmException \-\> 0x003a \}\l|r6.update(r5.head.data, r5.head.pos, r5.head.limit \- r5.head.pos)     \/\/ Catch:\{ NoSuchAlgorithmException \-\> 0x003a \}\lokio.Segment r0 = r5.head     \/\/ Catch:\{ NoSuchAlgorithmException \-\> 0x003a \}\l}"];
Node_4 [shape=record,label="{4\:\ 0x001e|LOOP_START\lCatch:\{ NoSuchAlgorithmException \-\> 0x003a \}\lPHI: r0 \l  PHI: (r0v4 okio.Segment) = (r0v3 okio.Segment), (r0v5 okio.Segment) binds: [B:3:0x0008, B:6:0x0024] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x001e\-\>B:6:0x0024\l|okio.Segment r0 = r0.next     \/\/ Catch:\{ NoSuchAlgorithmException \-\> 0x003a \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x0022|Catch:\{ NoSuchAlgorithmException \-\> 0x003a \}\l|if (r0 == r5.head) goto L_0x0031     \/\/ Catch:\{ NoSuchAlgorithmException \-\> 0x003a \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x0024|LOOP_END\lCatch:\{ NoSuchAlgorithmException \-\> 0x003a \}\lLOOP:0: B:4:0x001e\-\>B:6:0x0024\l|r6.update(r0.data, r0.pos, r0.limit \- r0.pos)     \/\/ Catch:\{ NoSuchAlgorithmException \-\> 0x003a \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x0031|Catch:\{ NoSuchAlgorithmException \-\> 0x003a \}\l}"];
Node_8 [shape=record,label="{8\:\ 0x0039|RETURN\l|return okio.ByteString.m183of(r6.digest())\l}"];
Node_9 [shape=record,label="{9\:\ 0x003a}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lExcHandler: NoSuchAlgorithmException (unused java.security.NoSuchAlgorithmException)\lSplitter:B:0:0x0000\l}"];
Node_11 [shape=record,label="{11\:\ 0x003f|throw new java.lang.AssertionError()\l}"];
Node_12 [shape=record,label="{12\:\ 0x0031|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private okio.ByteString okio.Buffer.digest((r5v0 'this' okio.Buffer A[IMMUTABLE_TYPE, THIS]), (r6v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_10;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_12;
Node_6 -> Node_4;
Node_7 -> Node_8;
Node_9 -> Node_11;
Node_10 -> Node_9;
Node_12 -> Node_7;
}

