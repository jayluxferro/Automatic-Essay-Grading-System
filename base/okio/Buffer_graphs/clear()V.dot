digraph "CFG forokio.Buffer.clear()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Catch:\{ EOFException \-\> 0x0006 \}\lSplitter:B:0:0x0000\l|skip(r2.size)     \/\/ Catch:\{ EOFException \-\> 0x0006 \}\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|RETURN\l|return\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|ExcHandler: EOFException (r0v0 'e' java.io.EOFException A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l|java.io.EOFException r0 = move\-exception\l}"];
Node_4 [shape=record,label="{4\:\ 0x0007}"];
Node_5 [shape=record,label="{5\:\ 0x000c|throw new java.lang.AssertionError(r0)\l}"];
MethodNode[shape=record,label="{public void okio.Buffer.clear((r2v0 'this' okio.Buffer A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

