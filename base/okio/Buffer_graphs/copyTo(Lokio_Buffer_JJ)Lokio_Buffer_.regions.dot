digraph "CFG forokio.Buffer.copyTo(Lokio\/Buffer;JJ)Lokio\/Buffer;" {
subgraph cluster_Region_12169509 {
label = "R(1:(2:(2:1|(2:(1:3)|(4:4|(1:7)|(3:10|(1:12)(1:13)|14)|15)))|(1:17)))";
node [shape=record,color=blue];
subgraph cluster_Region_697967227 {
label = "R(2:(2:1|(2:(1:3)|(4:4|(1:7)|(3:10|(1:12)(1:13)|14)|15)))|(1:17))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_797763358 {
label = "IF [B:0:0x0000] THEN: R(2:1|(2:(1:3)|(4:4|(1:7)|(3:10|(1:12)(1:13)|14)|15))) ELSE: null";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r7 != null) goto L_0x0002\l}"];
subgraph cluster_Region_1401856620 {
label = "R(2:1|(2:(1:3)|(4:4|(1:7)|(3:10|(1:12)(1:13)|14)|15)))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|okio.Util.checkOffsetAndCount(r6.size, r8, r10)\l}"];
subgraph cluster_Region_510853537 {
label = "R(2:(1:3)|(4:4|(1:7)|(3:10|(1:12)(1:13)|14)|15))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1719820782 {
label = "IF [B:2:0x000d] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000d|if (r10 == 0) goto L_0x000f\l}"];
subgraph cluster_Region_780066359 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000f|RETURN\l|return r6\l}"];
}
}
subgraph cluster_Region_80872306 {
label = "R(4:4|(1:7)|(3:10|(1:12)(1:13)|14)|15)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0010|r7.size += r10\lokio.Segment okio.Segment r2 = r6.head\l}"];
subgraph cluster_LoopRegion_2032731848 {
label = "LOOP:0: (1:7)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x001f|if (r8 \>= ((long) (r2.limit \- r2.pos))) goto L_0x0021\l}"];
subgraph cluster_Region_914920254 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0021|LOOP_END\lLOOP:0: B:5:0x0017\-\>B:7:0x0021\l|r8 \-= (long) (r2.limit \- r2.pos)\lokio.Segment r2 = r2.next\l}"];
}
}
subgraph cluster_LoopRegion_147166294 {
label = "LOOP:1: (3:10|(1:12)(1:13)|14)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x002d|if (r10 \> 0) goto L_0x002f\l}"];
subgraph cluster_Region_230611227 {
label = "R(3:10|(1:12)(1:13)|14)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x002f|okio.Segment okio.Segment r3 = r2.sharedCopy()\lr3.pos = (int) (((long) r3.pos) + r8)\lr3.limit = java.lang.Math.min(r3.pos + ((int) r10), r3.limit)\l}"];
subgraph cluster_IfRegion_247329510 {
label = "IF [B:11:0x0048] THEN: R(1:12) ELSE: R(1:13)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0048|if (r7.head == null) goto L_0x004a\l}"];
subgraph cluster_Region_1844728588 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x004a|r3.prev = r3\lr3.next = r3\lr7.head = r3\l}"];
}
subgraph cluster_Region_377039272 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0051|r7.head.prev.push(r3)\l}"];
}
}
Node_14 [shape=record,label="{14\:\ 0x0058|LOOP_END\lLOOP:1: B:8:0x002b\-\>B:14:0x0058\l|r10 \-= (long) (r3.limit \- r3.pos)\lokio.Segment r2 = r2.next\lr8 = 0\l}"];
}
}
Node_15 [shape=record,label="{15\:\ 0x0063|RETURN\l|return r6\l}"];
}
}
}
}
subgraph cluster_Region_2076540878 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x006b|throw new java.lang.IllegalArgumentException(\"out == null\")\l}"];
}
}
}
Node_5 [shape=record,color=red,label="{5\:\ 0x0017|LOOP_START\lPHI: r2 r8 \l  PHI: (r2v5 okio.Segment) = (r2v4 okio.Segment), (r2v8 okio.Segment) binds: [B:4:0x0010, B:7:0x0021] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v2 long) = (r8v0 long), (r8v15 long) binds: [B:4:0x0010, B:7:0x0021] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:5:0x0017\-\>B:7:0x0021\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x002b|LOOP_START\lPHI: r2 r8 r10 \l  PHI: (r2v6 okio.Segment) = (r2v5 okio.Segment), (r2v7 okio.Segment) binds: [B:18:0x002b, B:14:0x0058] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v3 long) = (r8v2 long), (r8v12 long) binds: [B:18:0x002b, B:14:0x0058] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r10v1 long) = (r10v0 long), (r10v2 long) binds: [B:18:0x002b, B:14:0x0058] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:8:0x002b\-\>B:14:0x0058\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0064}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x002b|SYNTHETIC\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0063|SYNTHETIC\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0058|SYNTHETIC\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0058|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public okio.Buffer okio.Buffer.copyTo((r6v0 'this' okio.Buffer A[IMMUTABLE_TYPE, THIS]), (r7v0 okio.Buffer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_16[style=dashed];
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_4[style=dashed];
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_6 -> Node_18[style=dashed];
Node_7 -> Node_5;
Node_9 -> Node_10;
Node_9 -> Node_19[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_13[style=dashed];
Node_12 -> Node_21;
Node_13 -> Node_20;
Node_14 -> Node_8;
Node_5 -> Node_6;
Node_8 -> Node_9;
Node_16 -> Node_17;
Node_18 -> Node_8;
Node_19 -> Node_15;
Node_20 -> Node_14;
Node_21 -> Node_14;
}

