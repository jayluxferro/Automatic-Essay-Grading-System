digraph "CFG forokio.Buffer.writeUtf8CodePoint(I)Lokio\/Buffer;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r4 \>= 128) goto L_0x0008\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|writeByte(r4)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008}"];
Node_4 [shape=record,label="{4\:\ 0x000c|if (r4 \>= 2048) goto L_0x001b\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|writeByte((r4 \>\> 6) \| org.kxml2.wap.Wbxml.EXT_0)\lwriteByte((r4 & 63) \| 128)\l}"];
Node_6 [shape=record,label="{6\:\ 0x001b}"];
Node_7 [shape=record,label="{7\:\ 0x001d|if (r4 \>= 65536) goto L_0x0041\l}"];
Node_8 [shape=record,label="{8\:\ 0x001f}"];
Node_9 [shape=record,label="{9\:\ 0x0022|if (r4 \< 55296) goto L_0x002d\l}"];
Node_10 [shape=record,label="{10\:\ 0x0024}"];
Node_11 [shape=record,label="{11\:\ 0x0027|if (r4 \> 57343) goto L_0x002d\l}"];
Node_12 [shape=record,label="{12\:\ 0x0029|writeByte(63)\l}"];
Node_13 [shape=record,label="{13\:\ 0x002d|writeByte((r4 \>\> 12) \| 224)\lwriteByte(((r4 \>\> 6) & 63) \| 128)\lwriteByte((r4 & 63) \| 128)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0041}"];
Node_15 [shape=record,label="{15\:\ 0x0044|if (r4 \> 1114111) goto L_0x0061\l}"];
Node_16 [shape=record,label="{16\:\ 0x0046|writeByte((r4 \>\> 18) \| 240)\lwriteByte(((r4 \>\> 12) & 63) \| 128)\lwriteByte(((r4 \>\> 6) & 63) \| 128)\lwriteByte((r4 & 63) \| 128)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0060|RETURN\l|return r3\l}"];
Node_18 [shape=record,label="{18\:\ 0x0061|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Unexpected code point: \")\lr1.append(java.lang.Integer.toHexString(r4))\l}"];
Node_19 [shape=record,label="{19\:\ 0x007b|throw new java.lang.IllegalArgumentException(r1.toString())\l}"];
MethodNode[shape=record,label="{public okio.Buffer okio.Buffer.writeUtf8CodePoint((r3v0 'this' okio.Buffer A[IMMUTABLE_TYPE, THIS]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_17;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_17;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_14;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_13;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_17;
Node_13 -> Node_17;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_18;
Node_16 -> Node_17;
Node_18 -> Node_19;
}

