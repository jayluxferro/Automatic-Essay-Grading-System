digraph "CFG forokio.Buffer.completeSegmentByteCount()J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|long r0 = r5.size\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|if ((r0 \> 0 ? 1 : (r0 == 0 ? 0 : \-1)) != 0) goto L_0x0009\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|RETURN\l|return 0\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|okio.Segment r2 = r5.head.prev\l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|if (r2.limit \>= 8192) goto L_?\l}"];
Node_5 [shape=record,label="{5\:\ 0x0013}"];
Node_6 [shape=record,label="{6\:\ 0x0015|if (r2.owner == false) goto L_?\l}"];
Node_7 [shape=record,label="{7\:\ 0x0017}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return r0 \- ((long) (r2.limit \- r2.pos))\l}"];
Node_9 [shape=record,label="{9\:\ ?|SYNTHETIC\lRETURN\l|return r0\l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\l|return r0\l}"];
MethodNode[shape=record,label="{public long okio.Buffer.completeSegmentByteCount((r5v0 'this' okio.Buffer A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_9;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_8;
}

