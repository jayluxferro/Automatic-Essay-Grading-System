digraph "CFG forokio.Buffer.indexOf(Lokio\/ByteString;J)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r6 = r18\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r19.size() == 0) goto L_0x00b2\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|r2 = 0\l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|if ((r20 \> 0 ? 1 : (r20 == 0 ? 0 : \-1)) \< 0) goto L_0x00aa\l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|okio.Segment r4 = r6.head\lr7 = \-1\l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|if (r4 != null) goto L_0x0015\l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|RETURN\l|return \-1\l}"];
Node_7 [shape=record,label="{7\:\ 0x0015}"];
Node_8 [shape=record,label="{8\:\ 0x001b|if (((r6.size \- r20) \> r20 ? 1 : ((r6.size \- r20) == r20 ? 0 : \-1)) \>= 0) goto L_0x002d\l}"];
Node_9 [shape=record,label="{9\:\ 0x001d|long r2 = r6.size\l}"];
Node_10 [shape=record,label="{10\:\ 0x001f|LOOP_START\lPHI: r2 r4 \l  PHI: (r2v15 long) = (r2v14 long), (r2v16 long) binds: [B:9:0x001d, B:12:0x0023] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v9 okio.Segment) = (r4v1 okio.Segment), (r4v10 okio.Segment) binds: [B:9:0x001d, B:12:0x0023] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:10:0x001f\-\>B:12:0x0023\l}"];
Node_11 [shape=record,label="{11\:\ 0x0021|if ((r2 \> r20 ? 1 : (r2 == r20 ? 0 : \-1)) \<= 0) goto L_0x003c\l}"];
Node_12 [shape=record,label="{12\:\ 0x0023|LOOP_END\lLOOP:0: B:10:0x001f\-\>B:12:0x0023\l|okio.Segment r4 = r4.prev\llong r2 = r2 \- ((long) (r4.limit \- r4.pos))\l}"];
Node_13 [shape=record,label="{13\:\ 0x002d|LOOP_START\lPHI: r2 r4 \l  PHI: (r2v12 long) = (r2v1 long), (r2v13 long) binds: [B:8:0x001b, B:15:0x0038] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v7 okio.Segment) = (r4v1 okio.Segment), (r4v8 okio.Segment) binds: [B:8:0x001b, B:15:0x0038] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:13:0x002d\-\>B:15:0x0038\l|long r9 = ((long) (r4.limit \- r4.pos)) + r2\l}"];
Node_14 [shape=record,label="{14\:\ 0x0036|if ((r9 \> r20 ? 1 : (r9 == r20 ? 0 : \-1)) \>= 0) goto L_0x003c\l}"];
Node_15 [shape=record,label="{15\:\ 0x0038|LOOP_END\lLOOP:1: B:13:0x002d\-\>B:15:0x0038\l|okio.Segment r4 = r4.next\lr2 = r9\l}"];
Node_16 [shape=record,label="{16\:\ 0x003c|PHI: r2 r4 \l  PHI: (r2v2 long) = (r2v12 long), (r2v15 long) binds: [B:37:0x003c, B:36:0x003c] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v2 okio.Segment) = (r4v7 okio.Segment), (r4v9 okio.Segment) binds: [B:37:0x003c, B:36:0x003c] A[DONT_GENERATE, DONT_INLINE]\l|byte r10 = r19.getByte(0)\lint r11 = r19.size()\llong r12 = (r6.size \- ((long) r11)) + 1\lr0 = r20\lr14 = r2\lr5 = r4\l}"];
Node_17 [shape=record,label="{17\:\ 0x0052|LOOP_START\lPHI: r0 r5 r7 r14 \l  PHI: (r0v3 long) = (r0v2 long), (r0v9 long) binds: [B:16:0x003c, B:29:0x0098] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v3 okio.Segment) = (r5v2 okio.Segment), (r5v5 okio.Segment) binds: [B:16:0x003c, B:29:0x0098] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r7v1 long) = (r7v0 long), (r7v7 long) binds: [B:16:0x003c, B:29:0x0098] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r14v3 long) = (r14v2 long), (r14v4 long) binds: [B:16:0x003c, B:29:0x0098] A[DONT_GENERATE, DONT_INLINE]\lLOOP:2: B:17:0x0052\-\>B:29:0x0098\l}"];
Node_18 [shape=record,label="{18\:\ 0x0054|if ((r14 \> r12 ? 1 : (r14 == r12 ? 0 : \-1)) \>= 0) goto L_0x00a8\l}"];
Node_19 [shape=record,label="{19\:\ 0x0056|byte[] r4 = r5.data\lint r7 = (int) java.lang.Math.min((long) r5.limit, (((long) r5.pos) + r12) \- r14)\lr8 = (int) ((((long) r5.pos) + r0) \- r14)\l}"];
Node_20 [shape=record,label="{20\:\ 0x006c|LOOP_START\lPHI: r4 r5 r8 \l  PHI: (r4v4 byte[]) = (r4v3 byte[]), (r4v5 byte[]) binds: [B:19:0x0056, B:28:0x0090] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v4 okio.Segment) = (r5v3 okio.Segment), (r5v6 okio.Segment) binds: [B:19:0x0056, B:28:0x0090] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v1 int) = (r8v0 int), (r8v2 int) binds: [B:19:0x0056, B:28:0x0090] A[DONT_GENERATE, DONT_INLINE]\lLOOP:3: B:20:0x006c\-\>B:28:0x0090\l|if (r8 \>= r7) goto L_0x0098\l}"];
Node_21 [shape=record,label="{21\:\ 0x006e}"];
Node_22 [shape=record,label="{22\:\ 0x0070|if (r4[r8] != r10) goto L_0x008d\l}"];
Node_23 [shape=record,label="{23\:\ 0x0072|r0 = r18\lr1 = r5\lr17 = r4\lr6 = r5\l}"];
Node_24 [shape=record,label="{24\:\ 0x0085|if (rangeEquals(r1, r8 + 1, r19, 1, r11) == false) goto L_0x0090\l}"];
Node_25 [shape=record,label="{25\:\ 0x0087}"];
Node_26 [shape=record,label="{26\:\ 0x008c|RETURN\l|return ((long) (r8 \- r6.pos)) + r14\l}"];
Node_27 [shape=record,label="{27\:\ 0x008d|r17 = r4\lr6 = r5\l}"];
Node_28 [shape=record,label="{28\:\ 0x0090|LOOP_END\lPHI: r6 r17 \l  PHI: (r6v3 okio.Segment) = (r6v5 okio.Segment), (r6v6 okio.Segment) binds: [B:41:0x0090, B:42:0x0090] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r17v0 byte[]) = (r17v1 byte[]), (r17v2 byte[]) binds: [B:41:0x0090, B:42:0x0090] A[DONT_GENERATE, DONT_INLINE]\lLOOP:3: B:20:0x006c\-\>B:28:0x0090\l|int r8 = r8 + 1\lr5 = r6\lr4 = r17\lr6 = r18\l}"];
Node_29 [shape=record,label="{29\:\ 0x0098|LOOP_END\lLOOP:2: B:17:0x0052\-\>B:29:0x0098\l|r6 = r5\llong r0 = ((long) (r6.limit \- r6.pos)) + r14\lokio.Segment r5 = r6.next\lr14 = r0\lr6 = r18\lr7 = \-1\l}"];
Node_30 [shape=record,label="{30\:\ 0x00a8}"];
Node_31 [shape=record,label="{31\:\ 0x00a9|RETURN\l|return r7\l}"];
Node_32 [shape=record,label="{32\:\ 0x00aa}"];
Node_33 [shape=record,label="{33\:\ 0x00b1|throw new java.lang.IllegalArgumentException(\"fromIndex \< 0\")\l}"];
Node_34 [shape=record,label="{34\:\ 0x00b2}"];
Node_35 [shape=record,label="{35\:\ 0x00b9|throw new java.lang.IllegalArgumentException(\"bytes is empty\")\l}"];
Node_36 [shape=record,label="{36\:\ 0x003c|SYNTHETIC\l}"];
Node_37 [shape=record,label="{37\:\ 0x003c|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x00a8|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x0087|SYNTHETIC\l}"];
Node_40 [shape=record,label="{40\:\ 0x0098|SYNTHETIC\l}"];
Node_41 [shape=record,label="{41\:\ 0x0090|SYNTHETIC\l}"];
Node_42 [shape=record,label="{42\:\ 0x0090|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public long okio.Buffer.indexOf((r18v0 'this' okio.Buffer A[IMMUTABLE_TYPE, THIS]), (r19v0 okio.ByteString A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_34;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_32;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_13;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_36;
Node_12 -> Node_10;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_37;
Node_15 -> Node_13;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_38;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_40;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_27;
Node_23 -> Node_24;
Node_24 -> Node_39[style=dashed];
Node_24 -> Node_42;
Node_25 -> Node_26;
Node_27 -> Node_41;
Node_28 -> Node_20;
Node_29 -> Node_17;
Node_30 -> Node_31;
Node_32 -> Node_33;
Node_34 -> Node_35;
Node_36 -> Node_16;
Node_37 -> Node_16;
Node_38 -> Node_30;
Node_39 -> Node_25;
Node_40 -> Node_29;
Node_41 -> Node_28;
Node_42 -> Node_28;
}

