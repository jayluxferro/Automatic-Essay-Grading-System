digraph "CFG forokio.Buffer.digest(Ljava\/lang\/String;)Lokio\/ByteString;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: INVOKE  (r6 I:java.security.MessageDigest) = (r6 I:java.lang.String) java.security.MessageDigest.getInstance(java.lang.String):java.security.MessageDigest type: STATIC A[Catch:\{ NoSuchAlgorithmException \-\> 0x003a \}, TRY_ENTER]\l0x0004: IGET  (r0 I:okio.Segment) = (r5 I:okio.Buffer) okio.Buffer.head okio.Segment A[Catch:\{ NoSuchAlgorithmException \-\> 0x003a \}]\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0031 A[Catch:\{ NoSuchAlgorithmException \-\> 0x003a \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IGET  (r0 I:okio.Segment) = (r5 I:okio.Buffer) okio.Buffer.head okio.Segment A[Catch:\{ NoSuchAlgorithmException \-\> 0x003a \}]\l0x000a: IGET  (r0 I:byte[]) = (r0 I:okio.Segment) okio.Segment.data byte[] A[Catch:\{ NoSuchAlgorithmException \-\> 0x003a \}]\l0x000c: IGET  (r1 I:okio.Segment) = (r5 I:okio.Buffer) okio.Buffer.head okio.Segment A[Catch:\{ NoSuchAlgorithmException \-\> 0x003a \}]\l0x000e: IGET  (r1 I:int) = (r1 I:okio.Segment) okio.Segment.pos int A[Catch:\{ NoSuchAlgorithmException \-\> 0x003a \}]\l0x0010: IGET  (r2 I:okio.Segment) = (r5 I:okio.Buffer) okio.Buffer.head okio.Segment A[Catch:\{ NoSuchAlgorithmException \-\> 0x003a \}]\l0x0012: IGET  (r2 I:int) = (r2 I:okio.Segment) okio.Segment.limit int A[Catch:\{ NoSuchAlgorithmException \-\> 0x003a \}]\l0x0014: IGET  (r3 I:okio.Segment) = (r5 I:okio.Buffer) okio.Buffer.head okio.Segment A[Catch:\{ NoSuchAlgorithmException \-\> 0x003a \}]\l0x0016: IGET  (r3 I:int) = (r3 I:okio.Segment) okio.Segment.pos int A[Catch:\{ NoSuchAlgorithmException \-\> 0x003a \}]\l0x0018: ARITH  (r2 I:int) = (r2 I:int) \- (r3 I:int) A[Catch:\{ NoSuchAlgorithmException \-\> 0x003a \}]\l0x0019: INVOKE  \l  (r6 I:java.security.MessageDigest)\l  (r0 I:byte[])\l  (r1 I:int)\l  (r2 I:int)\l java.security.MessageDigest.update(byte[], int, int):void type: VIRTUAL A[Catch:\{ NoSuchAlgorithmException \-\> 0x003a \}]\l0x001c: IGET  (r0 I:okio.Segment) = (r5 I:okio.Buffer) okio.Buffer.head okio.Segment A[Catch:\{ NoSuchAlgorithmException \-\> 0x003a \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x001e|0x001e: IGET  (r0 I:okio.Segment) = (r0 I:okio.Segment) okio.Segment.next okio.Segment A[Catch:\{ NoSuchAlgorithmException \-\> 0x003a \}]\l0x0020: IGET  (r1 I:okio.Segment) = (r5 I:okio.Buffer) okio.Buffer.head okio.Segment A[Catch:\{ NoSuchAlgorithmException \-\> 0x003a \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0022|0x0022: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0031 A[Catch:\{ NoSuchAlgorithmException \-\> 0x003a \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0024|0x0024: IGET  (r1 I:byte[]) = (r0 I:okio.Segment) okio.Segment.data byte[] A[Catch:\{ NoSuchAlgorithmException \-\> 0x003a \}]\l0x0026: IGET  (r2 I:int) = (r0 I:okio.Segment) okio.Segment.pos int A[Catch:\{ NoSuchAlgorithmException \-\> 0x003a \}]\l0x0028: IGET  (r3 I:int) = (r0 I:okio.Segment) okio.Segment.limit int A[Catch:\{ NoSuchAlgorithmException \-\> 0x003a \}]\l0x002a: IGET  (r4 I:int) = (r0 I:okio.Segment) okio.Segment.pos int A[Catch:\{ NoSuchAlgorithmException \-\> 0x003a \}]\l0x002c: ARITH  (r3 I:int) = (r3 I:int) \- (r4 I:int) A[Catch:\{ NoSuchAlgorithmException \-\> 0x003a \}]\l0x002d: INVOKE  \l  (r6 I:java.security.MessageDigest)\l  (r1 I:byte[])\l  (r2 I:int)\l  (r3 I:int)\l java.security.MessageDigest.update(byte[], int, int):void type: VIRTUAL A[Catch:\{ NoSuchAlgorithmException \-\> 0x003a \}]\l0x0030: GOTO  \-\> 0x001e A[Catch:\{ NoSuchAlgorithmException \-\> 0x003a \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0031|0x0031: INVOKE  (r6 I:byte[]) = (r6 I:java.security.MessageDigest) java.security.MessageDigest.digest():byte[] type: VIRTUAL A[Catch:\{ NoSuchAlgorithmException \-\> 0x003a \}]\l0x0035: INVOKE  (r6 I:okio.ByteString) = (r6 I:byte[]) okio.ByteString.of(byte[]):okio.ByteString type: STATIC A[Catch:\{ NoSuchAlgorithmException \-\> 0x003a \}]\l0x0038: NOP   A[TRY_LEAVE]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0039|0x0039: RETURN  (r6 I:okio.ByteString) \l}"];
Node_9 [shape=record,label="{9\:\ 0x003a|0x003a: NEW_INSTANCE  (r6 I:java.lang.AssertionError) =  java.lang.AssertionError \l0x003c: INVOKE  (r6 I:java.lang.AssertionError) java.lang.AssertionError.\<init\>():void type: DIRECT \l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lExcHandler: NoSuchAlgorithmException null\lSplitter:B:0:0x0000\l}"];
Node_11 [shape=record,label="{11\:\ 0x003f|0x003f: THROW  (r6 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private okio.ByteString okio.Buffer.digest((r5 'this' I:okio.Buffer A[IMMUTABLE_TYPE, THIS]), (r6 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_10;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_4;
Node_7 -> Node_8;
Node_9 -> Node_11;
Node_10 -> Node_9;
}

