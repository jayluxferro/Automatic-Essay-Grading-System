digraph "CFG forokio.Utf8.size(Ljava\/lang\/String;II)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x00b4 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r10 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:36:0x009d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IF  (r11 I:?[int, byte, short, char]) \< (r10 I:?[int, byte, short, char])  \-\> B:34:0x007e \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: INVOKE  (r0 I:int) = (r9 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: IF  (r11 I:?[int, byte, short, char]) \> (r0 I:?[int, byte, short, char])  \-\> B:32:0x005b \l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|0x000c: CONST  (r0 I:?[long, double]) = (0 ?[long, double]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|0x000e: IF  (r10 I:?[int, byte, short, char]) \>= (r11 I:?[int, byte, short, char])  \-\> B:31:0x005a \l}"];
Node_7 [shape=record,label="{7\:\ 0x0010|0x0010: INVOKE  (r2 I:char) = (r9 I:java.lang.String), (r10 I:int) java.lang.String.charAt(int):char type: VIRTUAL \l0x0014: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (128(0x80, float:1.794E\-43) ?[int, float, short, byte, char])\l \l0x0016: CONST  (r4 I:?[long, double]) = (1 ?[long, double]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|0x0018: IF  (r2 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char])  \-\> B:10:0x001e \l}"];
Node_9 [shape=record,label="{9\:\ 0x001a|0x001a: ARITH  (r0 I:long) = (r0 I:long) + (r4 I:long) \l0x001b: ARITH  (r10 I:int) = (r10 I:int) + (1 int) \l}"];
Node_10 [shape=record,label="{10\:\ 0x001e|0x001e: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (2048(0x800, float:2.87E\-42) ?[int, float, short, byte, char])\l \l}"];
Node_11 [shape=record,label="{11\:\ 0x0020|0x0020: IF  (r2 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char])  \-\> B:13:0x0028 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0022|0x0022: CONST  (r2 I:?[long, double]) = (2 ?[long, double]) \l0x0024: ARITH  (r0 I:long) = (r0 I:long) + (r2 I:long) \l0x0025: ARITH  (r10 I:int) = (r10 I:int) + (1 int) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0028|0x0028: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (55296(0xd800, float:7.7486E\-41) ?[int, float, short, byte, char])\l \l}"];
Node_14 [shape=record,label="{14\:\ 0x002b|0x002b: IF  (r2 I:?[int, byte, short, char]) \< (r3 I:?[int, byte, short, char])  \-\> B:30:0x0054 \l}"];
Node_15 [shape=record,label="{15\:\ 0x002d|0x002d: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (57343(0xdfff, float:8.0355E\-41) ?[int, float, short, byte, char])\l \l}"];
Node_16 [shape=record,label="{16\:\ 0x0030|0x0030: IF  (r2 I:?[int, byte, short, char]) \<= (r3 I:?[int, byte, short, char])  \-\> B:18:0x0033 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0033|0x0033: ARITH  (r6 I:int) = (r10 I:int) + (1 int) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0035|0x0035: IF  (r6 I:?[int, byte, short, char]) \>= (r11 I:?[int, byte, short, char])  \-\> B:21:0x003c \l}"];
Node_20 [shape=record,label="{20\:\ 0x0037|0x0037: INVOKE  (r7 I:char) = (r9 I:java.lang.String), (r6 I:int) java.lang.String.charAt(int):char type: VIRTUAL \l}"];
Node_21 [shape=record,label="{21\:\ 0x003c|0x003c: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_22 [shape=record,label="{22\:\ 0x003d|0x003d: CONST  (r8 I:?[int, float, short, byte, char]) = \l  (56319(0xdbff, float:7.892E\-41) ?[int, float, short, byte, char])\l \l}"];
Node_23 [shape=record,label="{23\:\ 0x0040|0x0040: IF  (r2 I:?[int, byte, short, char]) \> (r8 I:?[int, byte, short, char])  \-\> B:29:0x0050 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0042|0x0042: CONST  (r2 I:?[int, float, short, byte, char]) = \l  (56320(0xdc00, float:7.8921E\-41) ?[int, float, short, byte, char])\l \l}"];
Node_25 [shape=record,label="{25\:\ 0x0045|0x0045: IF  (r7 I:?[int, byte, short, char]) \< (r2 I:?[int, byte, short, char])  \-\> B:29:0x0050 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0047|0x0047: IF  (r7 I:?[int, byte, short, char]) \<= (r3 I:?[int, byte, short, char])  \-\> B:28:0x004a \l}"];
Node_28 [shape=record,label="{28\:\ 0x004a|0x004a: CONST  (r2 I:?[long, double]) = (4 ?[long, double]) \l0x004c: ARITH  (r0 I:long) = (r0 I:long) + (r2 I:long) \l0x004d: ARITH  (r10 I:int) = (r10 I:int) + (2 int) \l}"];
Node_29 [shape=record,label="{29\:\ 0x0050|0x0050: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0051: ARITH  (r0 I:long) = (r0 I:long) + (r4 I:long) \l0x0052: MOVE  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_30 [shape=record,label="{30\:\ 0x0054|0x0054: CONST  (r2 I:?[long, double]) = (3 ?[long, double]) \l0x0056: ARITH  (r0 I:long) = (r0 I:long) + (r2 I:long) \l0x0057: ARITH  (r10 I:int) = (r10 I:int) + (1 int) \l}"];
Node_31 [shape=record,label="{31\:\ 0x005a|0x005a: RETURN  (r0 I:long) \l}"];
Node_32 [shape=record,label="{32\:\ 0x005b|0x005b: NEW_INSTANCE  (r10 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x005d: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x005f: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0062: CONST_STR  (r1 I:java.lang.String) =  \"endIndex \> string.length: \" \l0x0064: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0067: INVOKE  (r0 I:java.lang.StringBuilder), (r11 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x006a: CONST_STR  (r11 I:java.lang.String) =  \" \> \" \l0x006c: INVOKE  (r0 I:java.lang.StringBuilder), (r11 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x006f: INVOKE  (r9 I:int) = (r9 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l0x0073: INVOKE  (r0 I:java.lang.StringBuilder), (r9 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x0076: INVOKE  (r9 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x007a: INVOKE  \l  (r10 I:java.lang.IllegalArgumentException)\l  (r9 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_33 [shape=record,label="{33\:\ 0x007d|0x007d: THROW  (r10 I:java.lang.Throwable) \l}"];
Node_34 [shape=record,label="{34\:\ 0x007e|0x007e: NEW_INSTANCE  (r9 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0080: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0082: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0085: CONST_STR  (r1 I:java.lang.String) =  \"endIndex \< beginIndex: \" \l0x0087: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x008a: INVOKE  (r0 I:java.lang.StringBuilder), (r11 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x008d: CONST_STR  (r11 I:java.lang.String) =  \" \< \" \l0x008f: INVOKE  (r0 I:java.lang.StringBuilder), (r11 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0092: INVOKE  (r0 I:java.lang.StringBuilder), (r10 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x0095: INVOKE  (r10 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0099: INVOKE  \l  (r9 I:java.lang.IllegalArgumentException)\l  (r10 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_35 [shape=record,label="{35\:\ 0x009c|0x009c: THROW  (r9 I:java.lang.Throwable) \l}"];
Node_36 [shape=record,label="{36\:\ 0x009d|0x009d: NEW_INSTANCE  (r9 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x009f: NEW_INSTANCE  (r11 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x00a1: INVOKE  (r11 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x00a4: CONST_STR  (r0 I:java.lang.String) =  \"beginIndex \< 0: \" \l0x00a6: INVOKE  (r11 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00a9: INVOKE  (r11 I:java.lang.StringBuilder), (r10 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x00ac: INVOKE  (r10 I:java.lang.String) = (r11 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x00b0: INVOKE  \l  (r9 I:java.lang.IllegalArgumentException)\l  (r10 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_37 [shape=record,label="{37\:\ 0x00b3|0x00b3: THROW  (r9 I:java.lang.Throwable) \l}"];
Node_38 [shape=record,label="{38\:\ 0x00b4|0x00b4: NEW_INSTANCE  (r9 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x00b6: CONST_STR  (r10 I:java.lang.String) =  \"string == null\" \l0x00b8: INVOKE  \l  (r9 I:java.lang.IllegalArgumentException)\l  (r10 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_39 [shape=record,label="{39\:\ 0x00bb|0x00bb: THROW  (r9 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static long okio.Utf8.size((r9 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_38;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_36;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_34;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_32;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_31;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_6;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_6;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_30;
Node_15 -> Node_16;
Node_16 -> Node_18;
Node_16 -> Node_30[style=dashed];
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_29;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_29;
Node_26 -> Node_28;
Node_26 -> Node_29[style=dashed];
Node_28 -> Node_6;
Node_29 -> Node_6;
Node_30 -> Node_6;
Node_32 -> Node_33;
Node_34 -> Node_35;
Node_36 -> Node_37;
Node_38 -> Node_39;
}

