digraph "CFG forokio.GzipSink.close()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r2.closed == false) goto L_0x0005\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|RETURN\l|return\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|r0 = null\l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|SYNTHETIC\lSplitter:B:4:0x0006\l}"];
Node_5 [shape=record,label="{5\:\ ?|Catch:\{ Throwable \-\> 0x000f \}\lSplitter:B:4:0x0006\l|r2.deflaterSink.finishDeflate()     \/\/ Catch:\{ Throwable \-\> 0x000f \}\lwriteFooter()     \/\/ Catch:\{ Throwable \-\> 0x000f \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|ExcHandler: Throwable (th java.lang.Throwable)\lSplitter:B:4:0x0006\l|java.lang.Throwable r0 = th\l}"];
Node_7 [shape=record,label="{7\:\ 0x0010|SYNTHETIC\lPHI: r0 \l  PHI: (r0v2 'th' java.lang.Throwable) = (r0v7 'th' java.lang.Throwable), (r0v1 'th' java.lang.Throwable) binds: [B:6:0x000f, B:5:?] A[DONT_GENERATE, DONT_INLINE]\lSplitter:B:7:0x0010\l}"];
Node_8 [shape=record,label="{8\:\ ?|Catch:\{ Throwable \-\> 0x0016 \}\lSplitter:B:7:0x0010\l|r2.deflater.end()     \/\/ Catch:\{ Throwable \-\> 0x0016 \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x0016|ExcHandler: Throwable (r1v3 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:7:0x0010\l|java.lang.Throwable r1 = move\-exception\l}"];
Node_10 [shape=record,label="{10\:\ 0x0017|if (r0 != null) goto L_0x001a\l}"];
Node_11 [shape=record,label="{11\:\ 0x0019|r0 = r1\l}"];
Node_12 [shape=record,label="{12\:\ 0x001a|SYNTHETIC\lPHI: r0 \l  PHI: (r0v3 'th' java.lang.Throwable) = (r0v2 'th' java.lang.Throwable), (r0v6 'th' java.lang.Throwable), (r0v2 'th' java.lang.Throwable) binds: [B:10:0x0017, B:11:0x0019, B:8:?] A[DONT_GENERATE, DONT_INLINE]\lSplitter:B:12:0x001a\l}"];
Node_13 [shape=record,label="{13\:\ ?|Catch:\{ Throwable \-\> 0x0020 \}\lSplitter:B:12:0x001a\l|r2.sink.close()     \/\/ Catch:\{ Throwable \-\> 0x0020 \}\l}"];
Node_14 [shape=record,label="{14\:\ 0x0020|ExcHandler: Throwable (r1v1 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:12:0x001a\l|java.lang.Throwable r1 = move\-exception\l}"];
Node_15 [shape=record,label="{15\:\ 0x0021|if (r0 != null) goto L_0x0024\l}"];
Node_16 [shape=record,label="{16\:\ 0x0023|r0 = r1\l}"];
Node_17 [shape=record,label="{17\:\ 0x0024|PHI: r0 \l  PHI: (r0v4 'th' java.lang.Throwable) = (r0v3 'th' java.lang.Throwable), (r0v5 'th' java.lang.Throwable), (r0v3 'th' java.lang.Throwable) binds: [B:15:0x0021, B:16:0x0023, B:13:?] A[DONT_GENERATE, DONT_INLINE]\l|r2.closed = true\l}"];
Node_18 [shape=record,label="{18\:\ 0x0027|if (r0 == null) goto L_?\l}"];
Node_19 [shape=record,label="{19\:\ 0x0029|okio.Util.sneakyRethrow(r0)\l}"];
Node_20 [shape=record,label="{20\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void okio.GzipSink.close((r2v0 'this' okio.GzipSink A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_8 -> Node_12;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_13 -> Node_17;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_21;
Node_19 -> Node_20;
}

