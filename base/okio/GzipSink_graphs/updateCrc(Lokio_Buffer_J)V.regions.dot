digraph "CFG forokio.GzipSink.updateCrc(Lokio\/Buffer;J)V" {
subgraph cluster_Region_1896982089 {
label = "R(2:0|(1:3))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|okio.Segment okio.Segment r5 = r5.head\l}"];
subgraph cluster_LoopRegion_86727223 {
label = "LOOP:0: (1:3)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0006|if (r6 \> 0) goto L_0x0008\l}"];
subgraph cluster_Region_452146316 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0008|LOOP_END\lLOOP:0: B:1:0x0002\-\>B:3:0x0008\l|int int r0 = (int) java.lang.Math.min(r6, (long) (r5.limit \- r5.pos))\lr4.crc.update(r5.data, r5.pos, r0)\lr6 \-= (long) r0\lokio.Segment r5 = r5.next\l}"];
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0002|LOOP_START\lPHI: r5 r6 \l  PHI: (r5v2 okio.Segment) = (r5v1 okio.Segment), (r5v3 okio.Segment) binds: [B:0:0x0000, B:3:0x0008] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v1 long) = (r6v0 long), (r6v2 long) binds: [B:0:0x0000, B:3:0x0008] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0002\-\>B:3:0x0008\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0021}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0021|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void okio.GzipSink.updateCrc((r4v0 'this' okio.GzipSink A[IMMUTABLE_TYPE, THIS]), (r5v0 okio.Buffer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_5[style=dashed];
Node_3 -> Node_1;
Node_1 -> Node_2;
Node_5 -> Node_4;
}

