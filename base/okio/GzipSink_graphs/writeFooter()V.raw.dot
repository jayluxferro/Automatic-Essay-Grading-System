digraph "CFG forokio.GzipSink.writeFooter()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:okio.BufferedSink) = (r3 I:okio.GzipSink) okio.GzipSink.sink okio.BufferedSink \l0x0002: IGET  (r1 I:java.util.zip.CRC32) = (r3 I:okio.GzipSink) okio.GzipSink.crc java.util.zip.CRC32 \l0x0004: INVOKE  (r1 I:long) = (r1 I:java.util.zip.CRC32) java.util.zip.CRC32.getValue():long type: VIRTUAL \l0x0008: CAST  (r1 I:int) = (int) (r1 I:long) \l0x0009: INVOKE  (r0 I:okio.BufferedSink), (r1 I:int) okio.BufferedSink.writeIntLe(int):okio.BufferedSink type: INTERFACE \l0x000c: IGET  (r0 I:okio.BufferedSink) = (r3 I:okio.GzipSink) okio.GzipSink.sink okio.BufferedSink \l0x000e: IGET  (r1 I:java.util.zip.Deflater) = (r3 I:okio.GzipSink) okio.GzipSink.deflater java.util.zip.Deflater \l0x0010: INVOKE  (r1 I:long) = (r1 I:java.util.zip.Deflater) java.util.zip.Deflater.getBytesRead():long type: VIRTUAL \l0x0014: CAST  (r1 I:int) = (int) (r1 I:long) \l0x0015: INVOKE  (r0 I:okio.BufferedSink), (r1 I:int) okio.BufferedSink.writeIntLe(int):okio.BufferedSink type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0018|0x0018: RETURN   \l}"];
MethodNode[shape=record,label="{private void okio.GzipSink.writeFooter((r3 'this' I:okio.GzipSink A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

