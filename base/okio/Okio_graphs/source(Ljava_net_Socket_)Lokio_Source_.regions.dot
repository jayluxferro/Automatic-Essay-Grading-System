digraph "CFG forokio.Okio.source(Ljava\/net\/Socket;)Lokio\/Source;" {
subgraph cluster_Region_892031625 {
label = "R(1:(1:8)(1:(2:3|4)(1:6)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1962645979 {
label = "IF [B:0:0x0000] THEN: R(1:8) ELSE: R(1:(2:3|4)(1:6))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r1 == null) goto L_0x0021\l}"];
subgraph cluster_Region_314808757 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0028|throw new java.lang.IllegalArgumentException(\"socket == null\")\l}"];
}
subgraph cluster_Region_316943945 {
label = "R(1:(2:3|4)(1:6)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2108983686 {
label = "IF [B:2:0x0006] THEN: R(2:3|4) ELSE: R(1:6) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0006|if (r1.getInputStream() != null) goto L_0x0008\l}"];
subgraph cluster_Region_1919936034 {
label = "R(2:3|4)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0008|okio.AsyncTimeout okio.AsyncTimeout r0 = timeout(r1)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|RETURN\l|return r0.source(source(r1.getInputStream(), (okio.Timeout) r0))\l}"];
}
subgraph cluster_Region_1428808362 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0020|throw new java.io.IOException(\"socket's input stream == null\")\l}"];
}
}
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0002}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0019}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0021}"];
MethodNode[shape=record,label="{public static okio.Source okio.Okio.source((r1v0 java.net.Socket A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_7;
Node_2 -> Node_3;
Node_2 -> Node_5[style=dashed];
Node_3 -> Node_4;
Node_1 -> Node_2;
Node_5 -> Node_6;
Node_7 -> Node_8;
}

