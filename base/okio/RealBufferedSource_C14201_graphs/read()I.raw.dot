digraph "CFG forokio.RealBufferedSource.1.read()I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:okio.RealBufferedSource) = (r4 I:okio.RealBufferedSource$1) okio.RealBufferedSource.1.this$0 okio.RealBufferedSource \l0x0002: IGET  (r0 I:boolean) = (r0 I:okio.RealBufferedSource) okio.RealBufferedSource.closed boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0033 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IGET  (r0 I:okio.RealBufferedSource) = (r4 I:okio.RealBufferedSource$1) okio.RealBufferedSource.1.this$0 okio.RealBufferedSource \l0x0008: IGET  (r0 I:okio.Buffer) = (r0 I:okio.RealBufferedSource) okio.RealBufferedSource.buffer okio.Buffer \l0x000a: IGET  (r0 I:long) = (r0 I:okio.Buffer) okio.Buffer.size long \l0x000c: CONST  (r2 I:?[long, double]) = (0 ?[long, double]) \l0x000e: CMP_L  (r0 I:int) = (r0 I:long), (r2 I:long) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0028 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: IGET  (r0 I:okio.RealBufferedSource) = (r4 I:okio.RealBufferedSource$1) okio.RealBufferedSource.1.this$0 okio.RealBufferedSource \l0x0014: IGET  (r0 I:okio.Source) = (r0 I:okio.RealBufferedSource) okio.RealBufferedSource.source okio.Source \l0x0016: IGET  (r1 I:okio.RealBufferedSource) = (r4 I:okio.RealBufferedSource$1) okio.RealBufferedSource.1.this$0 okio.RealBufferedSource \l0x0018: IGET  (r1 I:okio.Buffer) = (r1 I:okio.RealBufferedSource) okio.RealBufferedSource.buffer okio.Buffer \l0x001a: CONST  (r2 I:?[long, double]) = (8192(0x2000, double:4.0474E\-320) ?[long, double]) \l0x001c: INVOKE  (r0 I:long) = (r0 I:okio.Source), (r1 I:okio.Buffer), (r2 I:long) okio.Source.read(okio.Buffer, long):long type: INTERFACE \l0x0020: CONST  (r2 I:?[long, double]) = (\-1 ?[long, double]) \l0x0022: CMP_L  (r0 I:int) = (r0 I:long), (r2 I:long) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0024|0x0024: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0028 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0026|0x0026: CONST  (r0 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0027|0x0027: RETURN  (r0 I:int) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0028|0x0028: IGET  (r0 I:okio.RealBufferedSource) = (r4 I:okio.RealBufferedSource$1) okio.RealBufferedSource.1.this$0 okio.RealBufferedSource \l0x002a: IGET  (r0 I:okio.Buffer) = (r0 I:okio.RealBufferedSource) okio.RealBufferedSource.buffer okio.Buffer \l0x002c: INVOKE  (r0 I:byte) = (r0 I:okio.Buffer) okio.Buffer.readByte():byte type: VIRTUAL \l0x0030: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0032|0x0032: RETURN  (r0 I:int) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0033|0x0033: NEW_INSTANCE  (r0 I:java.io.IOException) =  java.io.IOException \l0x0035: CONST_STR  (r1 I:java.lang.String) =  \"closed\" \l0x0037: INVOKE  (r0 I:java.io.IOException), (r1 I:java.lang.String) java.io.IOException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_11 [shape=record,label="{11\:\ 0x003a|0x003a: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public int okio.RealBufferedSource.1.read((r4 'this' I:okio.RealBufferedSource$1 A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_10 -> Node_11;
}

