digraph "CFG forokio.RealBufferedSource.1.available()I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:okio.RealBufferedSource) = (r4 I:okio.RealBufferedSource$1) okio.RealBufferedSource.1.this$0 okio.RealBufferedSource \l0x0002: IGET  (r0 I:boolean) = (r0 I:okio.RealBufferedSource) okio.RealBufferedSource.closed boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0015 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IGET  (r0 I:okio.RealBufferedSource) = (r4 I:okio.RealBufferedSource$1) okio.RealBufferedSource.1.this$0 okio.RealBufferedSource \l0x0008: IGET  (r0 I:okio.Buffer) = (r0 I:okio.RealBufferedSource) okio.RealBufferedSource.buffer okio.Buffer \l0x000a: IGET  (r0 I:long) = (r0 I:okio.Buffer) okio.Buffer.size long \l0x000c: CONST  (r2 I:?[long, double]) = \l  (2147483647(0x7fffffff, double:1.060997895E\-314) ?[long, double])\l \l0x000f: INVOKE  (r0 I:long) = (r0 I:long), (r2 I:long) java.lang.Math.min(long, long):long type: STATIC \l0x0013: CAST  (r0 I:int) = (int) (r0 I:long) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|0x0014: RETURN  (r0 I:int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|0x0015: NEW_INSTANCE  (r0 I:java.io.IOException) =  java.io.IOException \l0x0017: CONST_STR  (r1 I:java.lang.String) =  \"closed\" \l0x0019: INVOKE  (r0 I:java.io.IOException), (r1 I:java.lang.String) java.io.IOException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|0x001c: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public int okio.RealBufferedSource.1.available((r4 'this' I:okio.RealBufferedSource$1 A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

