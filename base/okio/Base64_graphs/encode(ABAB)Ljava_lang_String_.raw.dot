digraph "CFG forokio.Base64.encode([B[B)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: ARRAY_LENGTH  (r0 I:int) = (r8 I:?[]) \l0x0001: ARITH  (r0 I:int) = (r0 I:int) + (2 int) \l0x0003: ARITH  (r0 I:int) = (r0 I:int) \/ (3 int) \l0x0005: ARITH  (r0 I:int) = (r0 I:int) * (4 int) \l0x0007: NEW_ARRAY  (r0 I:byte[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: byte[] \l0x0009: ARRAY_LENGTH  (r1 I:int) = (r8 I:?[]) \l0x000a: ARRAY_LENGTH  (r2 I:int) = (r8 I:?[]) \l0x000b: ARITH  (r2 I:int) = (r2 I:int) % (3 int) \l0x000d: ARITH  (r1 I:int) = (r1 I:int) \- (r2 I:int) \l0x000e: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000f: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0010|0x0010: IF  (r2 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:3:0x0055 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0012|0x0012: ARITH  (r4 I:int) = (r3 I:int) + (1 int) \l0x0014: AGET  (r5 I:byte A[IMMUTABLE_TYPE]) = \l  (r8 I:byte[] A[IMMUTABLE_TYPE])\l  (r2 I:?[int, short, byte, char])\l \l0x0016: ARITH  (r5 I:?[int, boolean, short, byte, char]) = (r5 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x0018: ARITH  (r5 I:int) = (r5 I:int) \>\> (2 int) \l0x001a: AGET  (r5 I:byte A[IMMUTABLE_TYPE]) = \l  (r9 I:byte[] A[IMMUTABLE_TYPE])\l  (r5 I:?[int, short, byte, char])\l \l0x001c: APUT  \l  (r0 I:byte[] A[IMMUTABLE_TYPE])\l  (r3 I:?[int, short, byte, char])\l  (r5 I:byte A[IMMUTABLE_TYPE])\l \l0x001e: ARITH  (r3 I:int) = (r4 I:int) + (1 int) \l0x0020: AGET  (r5 I:byte A[IMMUTABLE_TYPE]) = \l  (r8 I:byte[] A[IMMUTABLE_TYPE])\l  (r2 I:?[int, short, byte, char])\l \l0x0022: ARITH  (r5 I:?[int, boolean, short, byte, char]) = (r5 I:?[int, boolean, short, byte, char]) & (3 ?[int, float, short, byte, char]) \l0x0024: ARITH  (r5 I:int) = (r5 I:int) \<\< (4 int) \l0x0026: ARITH  (r6 I:int) = (r2 I:int) + (1 int) \l0x0028: AGET  (r7 I:byte A[IMMUTABLE_TYPE]) = \l  (r8 I:byte[] A[IMMUTABLE_TYPE])\l  (r6 I:?[int, short, byte, char])\l \l0x002a: ARITH  (r7 I:?[int, boolean, short, byte, char]) = (r7 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x002c: ARITH  (r7 I:int) = (r7 I:int) \>\> (4 int) \l0x002e: ARITH  (r5 I:?[int, boolean, short, byte, char]) = (r5 I:?[int, boolean, short, byte, char]) \| (r7 I:?[int, boolean, short, byte, char]) \l0x002f: AGET  (r5 I:byte A[IMMUTABLE_TYPE]) = \l  (r9 I:byte[] A[IMMUTABLE_TYPE])\l  (r5 I:?[int, short, byte, char])\l \l0x0031: APUT  \l  (r0 I:byte[] A[IMMUTABLE_TYPE])\l  (r4 I:?[int, short, byte, char])\l  (r5 I:byte A[IMMUTABLE_TYPE])\l \l0x0033: ARITH  (r4 I:int) = (r3 I:int) + (1 int) \l0x0035: AGET  (r5 I:byte A[IMMUTABLE_TYPE]) = \l  (r8 I:byte[] A[IMMUTABLE_TYPE])\l  (r6 I:?[int, short, byte, char])\l \l0x0037: ARITH  (r5 I:?[int, boolean, short, byte, char]) = (r5 I:?[int, boolean, short, byte, char]) & (15 ?[int, float, short, byte, char]) \l0x0039: ARITH  (r5 I:int) = (r5 I:int) \<\< (2 int) \l0x003b: ARITH  (r6 I:int) = (r2 I:int) + (2 int) \l0x003d: AGET  (r7 I:byte A[IMMUTABLE_TYPE]) = \l  (r8 I:byte[] A[IMMUTABLE_TYPE])\l  (r6 I:?[int, short, byte, char])\l \l0x003f: ARITH  (r7 I:?[int, boolean, short, byte, char]) = (r7 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x0041: ARITH  (r7 I:int) = (r7 I:int) \>\> (6 int) \l0x0043: ARITH  (r5 I:?[int, boolean, short, byte, char]) = (r5 I:?[int, boolean, short, byte, char]) \| (r7 I:?[int, boolean, short, byte, char]) \l0x0044: AGET  (r5 I:byte A[IMMUTABLE_TYPE]) = \l  (r9 I:byte[] A[IMMUTABLE_TYPE])\l  (r5 I:?[int, short, byte, char])\l \l0x0046: APUT  \l  (r0 I:byte[] A[IMMUTABLE_TYPE])\l  (r3 I:?[int, short, byte, char])\l  (r5 I:byte A[IMMUTABLE_TYPE])\l \l0x0048: ARITH  (r3 I:int) = (r4 I:int) + (1 int) \l0x004a: AGET  (r5 I:byte A[IMMUTABLE_TYPE]) = \l  (r8 I:byte[] A[IMMUTABLE_TYPE])\l  (r6 I:?[int, short, byte, char])\l \l0x004c: ARITH  (r5 I:?[int, boolean, short, byte, char]) = (r5 I:?[int, boolean, short, byte, char]) & (63 ?[int, float, short, byte, char]) \l0x004e: AGET  (r5 I:byte A[IMMUTABLE_TYPE]) = \l  (r9 I:byte[] A[IMMUTABLE_TYPE])\l  (r5 I:?[int, short, byte, char])\l \l0x0050: APUT  \l  (r0 I:byte[] A[IMMUTABLE_TYPE])\l  (r4 I:?[int, short, byte, char])\l  (r5 I:byte A[IMMUTABLE_TYPE])\l \l0x0052: ARITH  (r2 I:int) = (r2 I:int) + (3 int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0055|0x0055: ARRAY_LENGTH  (r2 I:int) = (r8 I:?[]) \l0x0056: ARITH  (r2 I:int) = (r2 I:int) % (3 int) \l0x0058: CONST  (r4 I:?[int, float, short, byte, char]) = (61 ?[int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x005a|0x005a: SWITCH  \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[1, 2] t:[0x008e, 0x005e] \l}"];
Node_6 [shape=record,label="{6\:\ 0x005e|0x005e: ARITH  (r2 I:int) = (r3 I:int) + (1 int) \l0x0060: AGET  (r5 I:byte A[IMMUTABLE_TYPE]) = \l  (r8 I:byte[] A[IMMUTABLE_TYPE])\l  (r1 I:?[int, short, byte, char])\l \l0x0062: ARITH  (r5 I:?[int, boolean, short, byte, char]) = (r5 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x0064: ARITH  (r5 I:int) = (r5 I:int) \>\> (2 int) \l0x0066: AGET  (r5 I:byte A[IMMUTABLE_TYPE]) = \l  (r9 I:byte[] A[IMMUTABLE_TYPE])\l  (r5 I:?[int, short, byte, char])\l \l0x0068: APUT  \l  (r0 I:byte[] A[IMMUTABLE_TYPE])\l  (r3 I:?[int, short, byte, char])\l  (r5 I:byte A[IMMUTABLE_TYPE])\l \l0x006a: ARITH  (r3 I:int) = (r2 I:int) + (1 int) \l0x006c: AGET  (r5 I:byte A[IMMUTABLE_TYPE]) = \l  (r8 I:byte[] A[IMMUTABLE_TYPE])\l  (r1 I:?[int, short, byte, char])\l \l0x006e: ARITH  (r5 I:?[int, boolean, short, byte, char]) = (r5 I:?[int, boolean, short, byte, char]) & (3 ?[int, float, short, byte, char]) \l0x0070: ARITH  (r5 I:int) = (r5 I:int) \<\< (4 int) \l0x0072: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l0x0074: AGET  (r6 I:byte A[IMMUTABLE_TYPE]) = \l  (r8 I:byte[] A[IMMUTABLE_TYPE])\l  (r1 I:?[int, short, byte, char])\l \l0x0076: ARITH  (r6 I:?[int, boolean, short, byte, char]) = (r6 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x0078: ARITH  (r6 I:int) = (r6 I:int) \>\> (4 int) \l0x007a: ARITH  (r5 I:?[int, boolean, short, byte, char]) = (r5 I:?[int, boolean, short, byte, char]) \| (r6 I:?[int, boolean, short, byte, char]) \l0x007b: AGET  (r5 I:byte A[IMMUTABLE_TYPE]) = \l  (r9 I:byte[] A[IMMUTABLE_TYPE])\l  (r5 I:?[int, short, byte, char])\l \l0x007d: APUT  \l  (r0 I:byte[] A[IMMUTABLE_TYPE])\l  (r2 I:?[int, short, byte, char])\l  (r5 I:byte A[IMMUTABLE_TYPE])\l \l0x007f: ARITH  (r2 I:int) = (r3 I:int) + (1 int) \l0x0081: AGET  (r8 I:byte A[IMMUTABLE_TYPE]) = \l  (r8 I:byte[] A[IMMUTABLE_TYPE])\l  (r1 I:?[int, short, byte, char])\l \l0x0083: ARITH  (r8 I:?[int, boolean, short, byte, char]) = (r8 I:?[int, boolean, short, byte, char]) & (15 ?[int, float, short, byte, char]) \l0x0085: ARITH  (r8 I:int) = (r8 I:int) \<\< (2 int) \l0x0087: AGET  (r8 I:byte A[IMMUTABLE_TYPE]) = \l  (r9 I:byte[] A[IMMUTABLE_TYPE])\l  (r8 I:?[int, short, byte, char])\l \l0x0089: APUT  \l  (r0 I:byte[] A[IMMUTABLE_TYPE])\l  (r3 I:?[int, short, byte, char])\l  (r8 I:byte A[IMMUTABLE_TYPE])\l \l0x008b: APUT  \l  (r0 I:byte[] A[IMMUTABLE_TYPE])\l  (r2 I:?[int, short, byte, char])\l  (r4 I:byte A[IMMUTABLE_TYPE])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x008e|0x008e: ARITH  (r2 I:int) = (r3 I:int) + (1 int) \l0x0090: AGET  (r5 I:byte A[IMMUTABLE_TYPE]) = \l  (r8 I:byte[] A[IMMUTABLE_TYPE])\l  (r1 I:?[int, short, byte, char])\l \l0x0092: ARITH  (r5 I:?[int, boolean, short, byte, char]) = (r5 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x0094: ARITH  (r5 I:int) = (r5 I:int) \>\> (2 int) \l0x0096: AGET  (r5 I:byte A[IMMUTABLE_TYPE]) = \l  (r9 I:byte[] A[IMMUTABLE_TYPE])\l  (r5 I:?[int, short, byte, char])\l \l0x0098: APUT  \l  (r0 I:byte[] A[IMMUTABLE_TYPE])\l  (r3 I:?[int, short, byte, char])\l  (r5 I:byte A[IMMUTABLE_TYPE])\l \l0x009a: ARITH  (r3 I:int) = (r2 I:int) + (1 int) \l0x009c: AGET  (r8 I:byte A[IMMUTABLE_TYPE]) = \l  (r8 I:byte[] A[IMMUTABLE_TYPE])\l  (r1 I:?[int, short, byte, char])\l \l0x009e: ARITH  (r8 I:?[int, boolean, short, byte, char]) = (r8 I:?[int, boolean, short, byte, char]) & (3 ?[int, float, short, byte, char]) \l0x00a0: ARITH  (r8 I:int) = (r8 I:int) \<\< (4 int) \l0x00a2: AGET  (r8 I:byte A[IMMUTABLE_TYPE]) = \l  (r9 I:byte[] A[IMMUTABLE_TYPE])\l  (r8 I:?[int, short, byte, char])\l \l0x00a4: APUT  \l  (r0 I:byte[] A[IMMUTABLE_TYPE])\l  (r2 I:?[int, short, byte, char])\l  (r8 I:byte A[IMMUTABLE_TYPE])\l \l0x00a6: ARITH  (r8 I:int) = (r3 I:int) + (1 int) \l0x00a8: APUT  \l  (r0 I:byte[] A[IMMUTABLE_TYPE])\l  (r3 I:?[int, short, byte, char])\l  (r4 I:byte A[IMMUTABLE_TYPE])\l \l0x00aa: APUT  \l  (r0 I:byte[] A[IMMUTABLE_TYPE])\l  (r8 I:?[int, short, byte, char])\l  (r4 I:byte A[IMMUTABLE_TYPE])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x00ac|SYNTHETIC\lSplitter:B:8:0x00ac\l}"];
Node_9 [shape=record,label="{9\:\ ?|Splitter:B:8:0x00ac\l|0x00ac: NEW_INSTANCE  (r8 I:java.lang.String) =  java.lang.String A[Catch:\{ UnsupportedEncodingException \-\> 0x00b4 \}, TRY_ENTER]\l0x00ae: CONST_STR  (r9 I:java.lang.String) =  \"US\-ASCII\" A[Catch:\{ UnsupportedEncodingException \-\> 0x00b4 \}]\l0x00b0: INVOKE  \l  (r8 I:java.lang.String)\l  (r0 I:byte[])\l  (r9 I:java.lang.String)\l java.lang.String.\<init\>(byte[], java.lang.String):void type: DIRECT A[Catch:\{ UnsupportedEncodingException \-\> 0x00b4 \}, TRY_LEAVE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x00b3|0x00b3: RETURN  (r8 I:java.lang.String) \l}"];
Node_11 [shape=record,label="{11\:\ 0x00b4|ExcHandler: UnsupportedEncodingException null\lSplitter:B:8:0x00ac\l|0x00b4: MOVE_EXCEPTION  (r8 I:?[OBJECT]) =  \l}"];
Node_12 [shape=record,label="{12\:\ 0x00b5|0x00b5: NEW_INSTANCE  (r9 I:java.lang.AssertionError) =  java.lang.AssertionError \l0x00b7: INVOKE  (r9 I:java.lang.AssertionError), (r8 I:java.lang.Object) java.lang.AssertionError.\<init\>(java.lang.Object):void type: DIRECT \l}"];
Node_13 [shape=record,label="{13\:\ 0x00ba|0x00ba: THROW  (r9 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private static java.lang.String okio.Base64.encode((r8 I:byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_1;
Node_3 -> Node_4;
Node_4 -> Node_6;
Node_4 -> Node_7;
Node_4 -> Node_8;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_11;
Node_9 -> Node_10;
Node_9 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13;
}

