digraph "CFG forokio.Base64.decode(Ljava\/lang\/String;)[B" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = r14.length()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|LOOP_START\lPHI: r0 \l  PHI: (r0v1 int) = (r0v0 int), (r0v4 int) binds: [B:0:0x0000, B:9:0x0021] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0004\-\>B:9:0x0021\l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|if (r0 \<= 0) goto L_0x0024\l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|char r5 = r14.charAt(r0 + \-1)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|if (r5 == '=') goto L_0x0021\l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|if (r5 == 10) goto L_0x0021\l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|if (r5 == 13) goto L_0x0021\l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|if (r5 == ' ') goto L_0x0021\l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|if (r5 == 9) goto L_0x0021\l}"];
Node_9 [shape=record,label="{9\:\ 0x0021|LOOP_END\lLOOP:0: B:1:0x0004\-\>B:9:0x0021\l|int r0 = r0 + \-1\l}"];
Node_10 [shape=record,label="{10\:\ 0x0024|byte[] r5 = new byte[((int) ((((long) r0) * 6) \/ 8))]\lr7 = 0\lr8 = 0\lr9 = 0\lr10 = 0\l}"];
Node_11 [shape=record,label="{11\:\ 0x0034|LOOP_START\lPHI: r7 r8 r9 r10 \l  PHI: (r7v3 int) = (r7v2 int), (r7v4 int) binds: [B:10:0x0024, B:46:0x009b] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v1 int) = (r8v0 int), (r8v3 int) binds: [B:10:0x0024, B:46:0x009b] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r9v1 byte) = (r9v0 byte), (r9v2 byte) binds: [B:10:0x0024, B:46:0x009b] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r10v1 int) = (r10v0 int), (r10v5 int) binds: [B:10:0x0024, B:46:0x009b] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:11:0x0034\-\>B:46:0x009b\l}"];
Node_12 [shape=record,label="{12\:\ 0x0035|if (r7 \>= r0) goto L_0x009e\l}"];
Node_13 [shape=record,label="{13\:\ 0x0037|char r12 = r14.charAt(r7)\l}"];
Node_14 [shape=record,label="{14\:\ 0x003d|if (r12 \< 'A') goto L_0x0046\l}"];
Node_15 [shape=record,label="{15\:\ 0x003f}"];
Node_16 [shape=record,label="{16\:\ 0x0041|if (r12 \> 'Z') goto L_0x0046\l}"];
Node_17 [shape=record,label="{17\:\ 0x0043|int r12 = r12 + 65471\l}"];
Node_18 [shape=record,label="{18\:\ 0x0046}"];
Node_19 [shape=record,label="{19\:\ 0x0048|if (r12 \< 'a') goto L_0x0051\l}"];
Node_20 [shape=record,label="{20\:\ 0x004a}"];
Node_21 [shape=record,label="{21\:\ 0x004c|if (r12 \> 'z') goto L_0x0051\l}"];
Node_22 [shape=record,label="{22\:\ 0x004e|int r12 = r12 + 65465\l}"];
Node_23 [shape=record,label="{23\:\ 0x0051}"];
Node_24 [shape=record,label="{24\:\ 0x0053|if (r12 \< '0') goto L_0x005c\l}"];
Node_25 [shape=record,label="{25\:\ 0x0055}"];
Node_26 [shape=record,label="{26\:\ 0x0057|if (r12 \> '9') goto L_0x005c\l}"];
Node_27 [shape=record,label="{27\:\ 0x0059|int r12 = r12 + 4\l}"];
Node_28 [shape=record,label="{28\:\ 0x005c}"];
Node_29 [shape=record,label="{29\:\ 0x005e|if (r12 == '+') goto L_0x007b\l}"];
Node_30 [shape=record,label="{30\:\ 0x0060}"];
Node_31 [shape=record,label="{31\:\ 0x0062|if (r12 != '\-') goto L_0x0065\l}"];
Node_32 [shape=record,label="{32\:\ 0x0065}"];
Node_33 [shape=record,label="{33\:\ 0x0067|if (r12 == '\/') goto L_0x0078\l}"];
Node_34 [shape=record,label="{34\:\ 0x0069}"];
Node_35 [shape=record,label="{35\:\ 0x006b|if (r12 != '_') goto L_0x006e\l}"];
Node_36 [shape=record,label="{36\:\ 0x006e|if (r12 == 10) goto L_0x009b\l}"];
Node_37 [shape=record,label="{37\:\ 0x0070|if (r12 == 13) goto L_0x009b\l}"];
Node_38 [shape=record,label="{38\:\ 0x0072|if (r12 == ' ') goto L_0x009b\l}"];
Node_39 [shape=record,label="{39\:\ 0x0074|if (r12 != 9) goto L_0x0077\l}"];
Node_40 [shape=record,label="{40\:\ 0x0077|RETURN\l|return null\l}"];
Node_41 [shape=record,label="{41\:\ 0x0078|r12 = 63\l}"];
Node_42 [shape=record,label="{42\:\ 0x007b|r12 = 62\l}"];
Node_43 [shape=record,label="{43\:\ 0x007d|PHI: r12 \l  PHI: (r12v1 int) = (r12v7 int), (r12v8 int), (r12v9 int), (r12v10 int), (r12v11 int) binds: [B:42:0x007b, B:41:0x0078, B:27:0x0059, B:22:0x004e, B:17:0x0043] A[DONT_GENERATE, DONT_INLINE]\l|r9 = (r9 \<\< 6) \| ((byte) r12)\lint r8 = r8 + 1\l}"];
Node_44 [shape=record,label="{44\:\ 0x0085|if ((r8 % 4) != 0) goto L_0x009b\l}"];
Node_45 [shape=record,label="{45\:\ 0x0087|int r11 = r10 + 1\lr5[r10] = (byte) (r9 \>\> 16)\lint r10 = r11 + 1\lr5[r11] = (byte) (r9 \>\> 8)\lr5[r10] = (byte) r9\lr10 = r10 + 1\l}"];
Node_46 [shape=record,label="{46\:\ 0x009b|LOOP_END\lPHI: r8 r9 r10 \l  PHI: (r8v3 int) = (r8v4 int), (r8v4 int), (r8v1 int), (r8v1 int), (r8v1 int), (r8v1 int) binds: [B:74:0x009b, B:70:0x009b, B:71:0x009b, B:72:0x009b, B:73:0x009b, B:75:0x009b] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r9v2 byte) = (r9v4 byte), (r9v4 byte), (r9v1 byte), (r9v1 byte), (r9v1 byte), (r9v1 byte) binds: [B:74:0x009b, B:70:0x009b, B:71:0x009b, B:72:0x009b, B:73:0x009b, B:75:0x009b] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r10v5 int) = (r10v1 int), (r10v7 int), (r10v1 int), (r10v1 int), (r10v1 int), (r10v1 int) binds: [B:74:0x009b, B:70:0x009b, B:71:0x009b, B:72:0x009b, B:73:0x009b, B:75:0x009b] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:11:0x0034\-\>B:46:0x009b\l|int r7 = r7 + 1\l}"];
Node_47 [shape=record,label="{47\:\ 0x009e|int r8 = r8 % 4\l}"];
Node_48 [shape=record,label="{48\:\ 0x00a1|if (r8 != 1) goto L_0x00a4\l}"];
Node_49 [shape=record,label="{49\:\ 0x00a3|RETURN\l|return null\l}"];
Node_50 [shape=record,label="{50\:\ 0x00a4}"];
Node_51 [shape=record,label="{51\:\ 0x00a5|if (r8 != 2) goto L_0x00b2\l}"];
Node_52 [shape=record,label="{52\:\ 0x00a7|r5[r10] = (byte) ((r9 \<\< 12) \>\> 16)\lr10 = r10 + 1\l}"];
Node_53 [shape=record,label="{53\:\ 0x00b2}"];
Node_54 [shape=record,label="{54\:\ 0x00b3|if (r8 != 3) goto L_0x00c5\l}"];
Node_55 [shape=record,label="{55\:\ 0x00b5|int r14 = r9 \<\< 6\lint r0 = r10 + 1\lr5[r10] = (byte) (r14 \>\> 16)\lint r10 = r0 + 1\lr5[r0] = (byte) (r14 \>\> 8)\l}"];
Node_56 [shape=record,label="{56\:\ 0x00c5|PHI: r10 \l  PHI: (r10v2 int) = (r10v1 int), (r10v3 int), (r10v4 int) binds: [B:54:0x00b3, B:55:0x00b5, B:52:0x00a7] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_57 [shape=record,label="{57\:\ 0x00c6|if (r10 != r5.length) goto L_0x00c9\l}"];
Node_58 [shape=record,label="{58\:\ 0x00c8|RETURN\l|return r5\l}"];
Node_59 [shape=record,label="{59\:\ 0x00c9|byte[] r14 = new byte[r10]\ljava.lang.System.arraycopy(r5, 0, r14, 0, r10)\l}"];
Node_60 [shape=record,label="{60\:\ 0x00ce|RETURN\l|return r14\l}"];
Node_61 [shape=record,label="{61\:\ 0x0024|SYNTHETIC\l}"];
Node_62 [shape=record,label="{62\:\ 0x0024|SYNTHETIC\l}"];
Node_63 [shape=record,label="{63\:\ 0x0021|SYNTHETIC\l}"];
Node_64 [shape=record,label="{64\:\ 0x0021|SYNTHETIC\l}"];
Node_65 [shape=record,label="{65\:\ 0x0021|SYNTHETIC\l}"];
Node_66 [shape=record,label="{66\:\ 0x0021|SYNTHETIC\l}"];
Node_67 [shape=record,label="{67\:\ 0x0021|SYNTHETIC\l}"];
Node_68 [shape=record,label="{68\:\ 0x0077|SYNTHETIC\l}"];
Node_69 [shape=record,label="{69\:\ 0x009e|SYNTHETIC\l}"];
Node_70 [shape=record,label="{70\:\ 0x009b|SYNTHETIC\l}"];
Node_71 [shape=record,label="{71\:\ 0x009b|SYNTHETIC\l}"];
Node_72 [shape=record,label="{72\:\ 0x009b|SYNTHETIC\l}"];
Node_73 [shape=record,label="{73\:\ 0x009b|SYNTHETIC\l}"];
Node_74 [shape=record,label="{74\:\ 0x009b|SYNTHETIC\l}"];
Node_75 [shape=record,label="{75\:\ 0x009b|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static byte[] okio.Base64.decode((r14v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_61;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_63;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_64;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_65;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_66;
Node_8 -> Node_62[style=dashed];
Node_8 -> Node_67;
Node_9 -> Node_1;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_69;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_18;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_43;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_23;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_43;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_28;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_43;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_42;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_31 -> Node_42[style=dashed];
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_41;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_35 -> Node_41[style=dashed];
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_71;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_72;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_73;
Node_39 -> Node_68;
Node_39 -> Node_75[style=dashed];
Node_41 -> Node_43;
Node_42 -> Node_43;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_74;
Node_45 -> Node_70;
Node_46 -> Node_11;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_50;
Node_50 -> Node_51;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_53;
Node_52 -> Node_56;
Node_53 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_56;
Node_55 -> Node_56;
Node_56 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_59;
Node_59 -> Node_60;
Node_61 -> Node_10;
Node_62 -> Node_10;
Node_63 -> Node_9;
Node_64 -> Node_9;
Node_65 -> Node_9;
Node_66 -> Node_9;
Node_67 -> Node_9;
Node_68 -> Node_40;
Node_69 -> Node_47;
Node_70 -> Node_46;
Node_71 -> Node_46;
Node_72 -> Node_46;
Node_73 -> Node_46;
Node_74 -> Node_46;
Node_75 -> Node_46;
}

