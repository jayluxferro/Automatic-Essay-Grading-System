digraph "CFG forokio.Pipe.\<init\>(J)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r3 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: NEW_INSTANCE  (r0 I:okio.Buffer) =  okio.Buffer \l0x0005: INVOKE  (r0 I:okio.Buffer) okio.Buffer.\<init\>():void type: DIRECT \l0x0008: IPUT  (r0 I:okio.Buffer), (r3 I:okio.Pipe) okio.Pipe.buffer okio.Buffer \l0x000a: NEW_INSTANCE  (r0 I:okio.Pipe$PipeSink) =  okio.Pipe$PipeSink \l0x000c: INVOKE  (r0 I:okio.Pipe$PipeSink), (r3 I:okio.Pipe) okio.Pipe.PipeSink.\<init\>(okio.Pipe):void type: DIRECT \l0x000f: IPUT  (r0 I:okio.Sink), (r3 I:okio.Pipe) okio.Pipe.sink okio.Sink \l0x0011: NEW_INSTANCE  (r0 I:okio.Pipe$PipeSource) =  okio.Pipe$PipeSource \l0x0013: INVOKE  (r0 I:okio.Pipe$PipeSource), (r3 I:okio.Pipe) okio.Pipe.PipeSource.\<init\>(okio.Pipe):void type: DIRECT \l0x0016: IPUT  (r0 I:okio.Source), (r3 I:okio.Pipe) okio.Pipe.source okio.Source \l0x0018: CONST  (r0 I:?[long, double]) = (1 ?[long, double]) \l0x001a: CMP_L  (r0 I:int) = (r4 I:long), (r0 I:long) \l}"];
Node_1 [shape=record,label="{1\:\ 0x001c|0x001c: IF  (r0 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:4:0x0021 \l}"];
Node_2 [shape=record,label="{2\:\ 0x001e|0x001e: IPUT  (r4 I:long), (r3 I:okio.Pipe) okio.Pipe.maxBufferSize long \l}"];
Node_3 [shape=record,label="{3\:\ 0x0020|0x0020: RETURN   \l}"];
Node_4 [shape=record,label="{4\:\ 0x0021|0x0021: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0023: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0025: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0028: CONST_STR  (r2 I:java.lang.String) =  \"maxBufferSize \< 1: \" \l0x002a: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x002d: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:long) java.lang.StringBuilder.append(long):java.lang.StringBuilder type: VIRTUAL \l0x0030: INVOKE  (r4 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0034: INVOKE  \l  (r0 I:java.lang.IllegalArgumentException)\l  (r4 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0037|0x0037: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void okio.Pipe.\<init\>((r3 'this' I:okio.Pipe A[IMMUTABLE_TYPE, THIS]), (r4 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

