digraph "CFG forokio.AsyncTimeout.Watchdog.run()V" {
subgraph cluster_Region_233307896 {
label = "R(1:(2:0|(1:2)))";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_1060536907 {
label = "LOOP:0: (2:0|(1:2))";
node [shape=record,color=blue];
subgraph cluster_Region_483999721 {
label = "R(2:0|(1:2))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lLOOP_START\lLOOP:0: B:0:0x0000\-\>B:22:0x0000\l}"];
subgraph cluster_TryCatchRegion_850293996 {
label = "Try: R(1:2) catches: R(0)";
node [shape=record,color=blue];
subgraph cluster_Region_810111 {
label = "R(1:2)";
node [shape=record,color=blue];
subgraph cluster_SynchronizedRegion_186888943 {
label = "Synchronized:R(2:3|(2:5|(1:(2:11|13))(0)))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ ?|Catch:\{ InterruptedException \-\> 0x0000 \}\lSplitter:B:2:0x0002\l}"];
subgraph cluster_Region_1407288882 {
label = "R(2:5|(1:(2:11|13))(0))";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ ?|Catch:\{ InterruptedException \-\> 0x0000 \}\l|okio.AsyncTimeout okio.AsyncTimeout r1 = okio.AsyncTimeout.awaitTimeout()     \/\/ Catch:\{ InterruptedException \-\> 0x0000 \}\l}"];
subgraph cluster_IfRegion_686078032 {
label = "IF [B:6:0x0007] THEN: R(1:(2:11|13)) ELSE: R(0)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0007|Catch:\{ InterruptedException \-\> 0x0000 \}\l|if (r1 != null) goto L_0x000b     \/\/ Catch:\{ InterruptedException \-\> 0x0000 \}\l}"];
subgraph cluster_Region_1582363157 {
label = "R(1:(2:11|13))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1306557094 {
label = "IF [B:10:0x000d] THEN: R(2:11|13) ELSE: null";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x000d|Catch:\{ InterruptedException \-\> 0x0000 \}\l|if (r1 == okio.AsyncTimeout.head) goto L_0x000f     \/\/ Catch:\{ InterruptedException \-\> 0x0000 \}\l}"];
subgraph cluster_Region_521729063 {
label = "R(2:11|13)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x000f|Catch:\{ InterruptedException \-\> 0x0000 \}\l|okio.AsyncTimeout.head = null     \/\/ Catch:\{ InterruptedException \-\> 0x0000 \}\l}"];
Node_13 [shape=record,label="{13\:\ 0x0013|RETURN\lCatch:\{ InterruptedException \-\> 0x0000 \}\l|return     \/\/ Catch:\{ InterruptedException \-\> 0x0000 \}\l}"];
}
}
}
subgraph cluster_Region_2098572319 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
}
subgraph cluster_Region_1798823320 {
label = "R(0) | ExcHandler: InterruptedException (unused java.lang.InterruptedException)\l";
node [shape=record,color=blue];
}
}
}
}
}
subgraph cluster_Region_1798823320 {
label = "R(0) | ExcHandler: InterruptedException (unused java.lang.InterruptedException)\l";
node [shape=record,color=blue];
}
Node_1 [shape=record,color=red,label="{1\:\ ?|SYNTHETIC\lExcHandler: InterruptedException (unused java.lang.InterruptedException)\lSplitter:B:2:0x0002\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0002|SYNTHETIC\lSplitter:B:2:0x0002\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0003|SYNTHETIC\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0009|DONT_GENERATE\lCatch:\{ InterruptedException \-\> 0x0000 \}\l|monitor\-exit(\l\/\/ error: 0x0009: MONITOR_EXIT  \l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x000a|Catch:\{ InterruptedException \-\> 0x0000 \}\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x000b|Catch:\{ InterruptedException \-\> 0x0000 \}\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0012|DONT_GENERATE\lCatch:\{ InterruptedException \-\> 0x0000 \}\l|monitor\-exit(\l\/\/ error: 0x0012: MONITOR_EXIT  \l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0014|DONT_GENERATE\lCatch:\{ InterruptedException \-\> 0x0000 \}\l|monitor\-exit(\l\/\/ error: 0x0014: MONITOR_EXIT  \l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0015|SYNTHETIC\lSplitter:B:15:0x0015\l}"];
Node_16 [shape=record,color=red,label="{16\:\ ?|Catch:\{ InterruptedException \-\> 0x0000 \}\lSplitter:B:15:0x0015\l|r1.timedOut()     \/\/ Catch:\{ InterruptedException \-\> 0x0000 \}\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0019|LOOP_START\lREMOVE\lLOOP:1: B:17:0x0019\-\>B:26:0x0019\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x001a|SYNTHETIC\lREMOVE\lSplitter:B:18:0x001a\l}"];
Node_19 [shape=record,color=red,label="{19\:\ ?|REMOVE\lSplitter:B:18:0x001a\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x001b|SYNTHETIC\lREMOVE\lSplitter:B:20:0x001b\l}"];
Node_21 [shape=record,color=red,label="{21\:\ ?|REMOVE\lCatch:\{ InterruptedException \-\> 0x0000 \}\lSplitter:B:20:0x001b\l|throw r1     \/\/ Catch:\{ InterruptedException \-\> 0x0000 \}\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0000|LOOP_END\lSYNTHETIC\lLOOP:0: B:0:0x0000\-\>B:22:0x0000\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x000f|SYNTHETIC\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0000|SYNTHETIC\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x0000|SYNTHETIC\l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0019|LOOP_END\lSYNTHETIC\lDONT_GENERATE\lLOOP:1: B:17:0x0019\-\>B:26:0x0019\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0019|SYNTHETIC\lDONT_GENERATE\lREMOVE\l}"];
MethodNode[shape=record,label="{public void okio.AsyncTimeout.Watchdog.run((r3v0 'this' okio.AsyncTimeout$Watchdog A[IMMUTABLE_TYPE, THIS]))  | INCONSISTENT_CODE\lCode restructure failed: missing block: B:16:?, code lost:\l    r1.timedOut();\l\l}"];
MethodNode -> Node_0;
Node_0 -> Node_2;
Node_3 -> Node_4;
Node_3 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_10 -> Node_14[style=dashed];
Node_10 -> Node_23;
Node_11 -> Node_12;
Node_1 -> Node_22;
Node_2 -> Node_3;
Node_2 -> Node_1;
Node_4 -> Node_5;
Node_4 -> Node_17;
Node_7 -> Node_8;
Node_8 -> Node_24;
Node_9 -> Node_10;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_1;
Node_16 -> Node_1;
Node_16 -> Node_25;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_18 -> Node_26;
Node_19 -> Node_20;
Node_19 -> Node_27;
Node_20 -> Node_21;
Node_20 -> Node_1;
Node_21 -> Node_1;
Node_22 -> Node_0;
Node_23 -> Node_11;
Node_24 -> Node_22;
Node_25 -> Node_22;
Node_26 -> Node_17;
Node_27 -> Node_26;
}

