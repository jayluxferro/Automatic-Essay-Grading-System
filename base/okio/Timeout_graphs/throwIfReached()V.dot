digraph "CFG forokio.Timeout.throwIfReached()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (java.lang.Thread.interrupted() != false) goto L_0x0021\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006}"];
Node_3 [shape=record,label="{3\:\ 0x0008|if (r4.hasDeadline == false) goto L_?\l}"];
Node_4 [shape=record,label="{4\:\ 0x000a}"];
Node_5 [shape=record,label="{5\:\ 0x0015|if (((r4.deadlineNanoTime \- java.lang.System.nanoTime()) \> 0 ? 1 : ((r4.deadlineNanoTime \- java.lang.System.nanoTime()) == 0 ? 0 : \-1)) \<= 0) goto L_0x0018\l}"];
Node_6 [shape=record,label="{6\:\ 0x0018}"];
Node_7 [shape=record,label="{7\:\ 0x001f|throw new java.io.InterruptedIOException(\"deadline reached\")\l}"];
Node_8 [shape=record,label="{8\:\ 0x0021}"];
Node_9 [shape=record,label="{9\:\ 0x0028|throw new java.io.InterruptedIOException(\"thread interrupted\")\l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void okio.Timeout.throwIfReached((r4v0 'this' okio.Timeout A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_10;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_11[style=dashed];
Node_6 -> Node_7;
Node_8 -> Node_9;
}

