digraph "CFG forokio.Timeout.deadline(JLjava\/util\/concurrent\/TimeUnit;)Lokio\/Timeout;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if ((r3 \> 0 ? 1 : (r3 == 0 ? 0 : \-1)) \<= 0) goto L_0x001e\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|if (r5 == null) goto L_0x0016\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008}"];
Node_4 [shape=record,label="{4\:\ 0x0015|RETURN\l|return deadlineNanoTime(java.lang.System.nanoTime() + r5.toNanos(r3))\l}"];
Node_5 [shape=record,label="{5\:\ 0x0016}"];
Node_6 [shape=record,label="{6\:\ 0x001d|throw new java.lang.IllegalArgumentException(\"unit == null\")\l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|java.lang.StringBuilder r0 = new java.lang.StringBuilder()\lr0.append(\"duration \<= 0: \")\lr0.append(r3)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0034|throw new java.lang.IllegalArgumentException(r0.toString())\l}"];
MethodNode[shape=record,label="{public final okio.Timeout okio.Timeout.deadline((r2v0 'this' okio.Timeout A[IMMUTABLE_TYPE, THIS]), (r3v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 java.util.concurrent.TimeUnit A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_5;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_7 -> Node_8;
}

