digraph "CFG forokio.Timeout.throwIfReached()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:boolean) =  java.lang.Thread.interrupted():boolean type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0021 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IGET  (r0 I:boolean) = (r4 I:okio.Timeout) okio.Timeout.hasDeadline boolean \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0020 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: IGET  (r0 I:long) = (r4 I:okio.Timeout) okio.Timeout.deadlineNanoTime long \l0x000c: INVOKE  (r2 I:long) =  java.lang.System.nanoTime():long type: STATIC \l0x0010: ARITH  (r0 I:long) = (r0 I:long) \- (r2 I:long) \l0x0011: CONST  (r2 I:?[long, double]) = (0 ?[long, double]) \l0x0013: CMP_L  (r0 I:int) = (r0 I:long), (r2 I:long) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:7:0x0018 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|0x0018: NEW_INSTANCE  (r0 I:java.io.InterruptedIOException) =  java.io.InterruptedIOException \l0x001a: CONST_STR  (r1 I:java.lang.String) =  \"deadline reached\" \l0x001c: INVOKE  \l  (r0 I:java.io.InterruptedIOException)\l  (r1 I:java.lang.String)\l java.io.InterruptedIOException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|0x001f: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0020|0x0020: RETURN   \l}"];
Node_10 [shape=record,label="{10\:\ 0x0021|0x0021: NEW_INSTANCE  (r0 I:java.io.InterruptedIOException) =  java.io.InterruptedIOException \l0x0023: CONST_STR  (r1 I:java.lang.String) =  \"thread interrupted\" \l0x0025: INVOKE  \l  (r0 I:java.io.InterruptedIOException)\l  (r1 I:java.lang.String)\l java.io.InterruptedIOException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_11 [shape=record,label="{11\:\ 0x0028|0x0028: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void okio.Timeout.throwIfReached((r4 'this' I:okio.Timeout A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_7;
Node_5 -> Node_9[style=dashed];
Node_7 -> Node_8;
Node_10 -> Node_11;
}

