digraph "CFG forokio.Timeout.timeout(JLjava\/util\/concurrent\/TimeUnit;)Lokio\/Timeout;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[long, double]) = (0 ?[long, double]) \l0x0002: CMP_L  (r0 I:int) = (r3 I:long), (r0 I:long) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:7:0x0017 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000f \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: INVOKE  (r3 I:long) = (r5 I:java.util.concurrent.TimeUnit), (r3 I:long) java.util.concurrent.TimeUnit.toNanos(long):long type: VIRTUAL \l0x000c: IPUT  (r3 I:long), (r2 I:okio.Timeout) okio.Timeout.timeoutNanos long \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: RETURN  (r2 I:okio.Timeout) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: NEW_INSTANCE  (r3 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0011: CONST_STR  (r4 I:java.lang.String) =  \"unit == null\" \l0x0013: INVOKE  \l  (r3 I:java.lang.IllegalArgumentException)\l  (r4 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|0x0017: NEW_INSTANCE  (r5 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0019: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x001b: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x001e: CONST_STR  (r1 I:java.lang.String) =  \"timeout \< 0: \" \l0x0020: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0023: INVOKE  (r0 I:java.lang.StringBuilder), (r3 I:long) java.lang.StringBuilder.append(long):java.lang.StringBuilder type: VIRTUAL \l0x0026: INVOKE  (r3 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x002a: INVOKE  \l  (r5 I:java.lang.IllegalArgumentException)\l  (r3 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_8 [shape=record,label="{8\:\ 0x002d|0x002d: THROW  (r5 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public okio.Timeout okio.Timeout.timeout((r2 'this' I:okio.Timeout A[IMMUTABLE_TYPE, THIS]), (r3 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.util.concurrent.TimeUnit A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_5;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_7 -> Node_8;
}

