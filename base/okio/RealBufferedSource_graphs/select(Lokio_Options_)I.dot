digraph "CFG forokio.RealBufferedSource.select(Lokio\/Options;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r6.closed != false) goto L_0x0036\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|LOOP_START\lLOOP:0: B:2:0x0004\-\>B:10:0x0033\l|int r0 = r6.buffer.selectPrefix(r7)\l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|if (r0 != \-1) goto L_0x000e\l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|RETURN\l|return \-1\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|long r2 = (long) r7.byteStrings[r0].size()\l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|if ((r2 \> r6.buffer.size ? 1 : (r2 == r6.buffer.size ? 0 : \-1)) \> 0) goto L_0x0025\l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|r6.buffer.skip(r2)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0024|RETURN\l|return r0\l}"];
Node_9 [shape=record,label="{9\:\ 0x0025}"];
Node_10 [shape=record,label="{10\:\ 0x0033|LOOP_END\lLOOP:0: B:2:0x0004\-\>B:10:0x0033\l|if ((r6.source.read(r6.buffer, android.support.p000v4.media.session.PlaybackStateCompat.ACTION_PLAY_FROM_URI) \> \-1 ? 1 : (r6.source.read(r6.buffer, android.support.p000v4.media.session.PlaybackStateCompat.ACTION_PLAY_FROM_URI) == \-1 ? 0 : \-1)) != 0) goto L_0x0004\l}"];
Node_11 [shape=record,label="{11\:\ 0x0035|RETURN\l|return \-1\l}"];
Node_12 [shape=record,label="{12\:\ 0x0036}"];
Node_13 [shape=record,label="{13\:\ 0x003d|throw new java.lang.IllegalStateException(\"closed\")\l}"];
Node_14 [shape=record,label="{14\:\ 0x0035|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x000d|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ 0x001f|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public int okio.RealBufferedSource.select((r6v0 'this' okio.RealBufferedSource A[IMMUTABLE_TYPE, THIS]), (r7v0 okio.Options A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_12;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_15[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_9;
Node_6 -> Node_16[style=dashed];
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_10 -> Node_2;
Node_10 -> Node_14[style=dashed];
Node_12 -> Node_13;
Node_14 -> Node_11;
Node_15 -> Node_4;
Node_16 -> Node_7;
}

