digraph "CFG forokio.RealBufferedSource.read(Lokio\/Buffer;J)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0053 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: CONST  (r0 I:?[long, double]) = (0 ?[long, double]) \l0x0004: CMP_L  (r2 I:int) = (r6 I:long), (r0 I:long) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IF  (r2 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:14:0x003c \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IGET  (r2 I:boolean) = (r4 I:okio.RealBufferedSource) okio.RealBufferedSource.closed boolean \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0034 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|0x000c: IGET  (r2 I:okio.Buffer) = (r4 I:okio.RealBufferedSource) okio.RealBufferedSource.buffer okio.Buffer \l0x000e: IGET  (r2 I:long) = (r2 I:okio.Buffer) okio.Buffer.size long \l0x0010: CMP_L  (r0 I:int) = (r2 I:long), (r0 I:long) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|0x0012: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0025 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|0x0014: IGET  (r0 I:okio.Source) = (r4 I:okio.RealBufferedSource) okio.RealBufferedSource.source okio.Source \l0x0016: IGET  (r1 I:okio.Buffer) = (r4 I:okio.RealBufferedSource) okio.RealBufferedSource.buffer okio.Buffer \l0x0018: CONST  (r2 I:?[long, double]) = (8192(0x2000, double:4.0474E\-320) ?[long, double]) \l0x001a: INVOKE  (r0 I:long) = (r0 I:okio.Source), (r1 I:okio.Buffer), (r2 I:long) okio.Source.read(okio.Buffer, long):long type: INTERFACE \l0x001e: CONST  (r2 I:?[long, double]) = (\-1 ?[long, double]) \l0x0020: CMP_L  (r0 I:int) = (r0 I:long), (r2 I:long) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0022|0x0022: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0025 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0024|0x0024: RETURN  (r2 I:long) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0025|0x0025: IGET  (r0 I:okio.Buffer) = (r4 I:okio.RealBufferedSource) okio.RealBufferedSource.buffer okio.Buffer \l0x0027: IGET  (r0 I:long) = (r0 I:okio.Buffer) okio.Buffer.size long \l0x0029: INVOKE  (r6 I:long) = (r6 I:long), (r0 I:long) java.lang.Math.min(long, long):long type: STATIC \l0x002d: IGET  (r0 I:okio.Buffer) = (r4 I:okio.RealBufferedSource) okio.RealBufferedSource.buffer okio.Buffer \l0x002f: INVOKE  (r5 I:long) = (r0 I:okio.Buffer), (r5 I:okio.Buffer), (r6 I:long) okio.Buffer.read(okio.Buffer, long):long type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0033|0x0033: RETURN  (r5 I:long) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0034|0x0034: NEW_INSTANCE  (r5 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x0036: CONST_STR  (r6 I:java.lang.String) =  \"closed\" \l0x0038: INVOKE  \l  (r5 I:java.lang.IllegalStateException)\l  (r6 I:java.lang.String)\l java.lang.IllegalStateException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_13 [shape=record,label="{13\:\ 0x003b|0x003b: THROW  (r5 I:java.lang.Throwable) \l}"];
Node_14 [shape=record,label="{14\:\ 0x003c|0x003c: NEW_INSTANCE  (r5 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x003e: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0040: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0043: CONST_STR  (r1 I:java.lang.String) =  \"byteCount \< 0: \" \l0x0045: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0048: INVOKE  (r0 I:java.lang.StringBuilder), (r6 I:long) java.lang.StringBuilder.append(long):java.lang.StringBuilder type: VIRTUAL \l0x004b: INVOKE  (r6 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x004f: INVOKE  \l  (r5 I:java.lang.IllegalArgumentException)\l  (r6 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_15 [shape=record,label="{15\:\ 0x0052|0x0052: THROW  (r5 I:java.lang.Throwable) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0053|0x0053: NEW_INSTANCE  (r5 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0055: CONST_STR  (r6 I:java.lang.String) =  \"sink == null\" \l0x0057: INVOKE  \l  (r5 I:java.lang.IllegalArgumentException)\l  (r6 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_17 [shape=record,label="{17\:\ 0x005a|0x005a: THROW  (r5 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public long okio.RealBufferedSource.read((r4 'this' I:okio.RealBufferedSource A[IMMUTABLE_TYPE, THIS]), (r5 I:okio.Buffer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_16;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_14;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_12;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_16 -> Node_17;
}

