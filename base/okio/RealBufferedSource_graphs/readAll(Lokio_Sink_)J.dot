digraph "CFG forokio.RealBufferedSource.readAll(Lokio\/Sink;)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r9 == null) goto L_0x0043\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|r2 = 0\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|LOOP_START\lPHI: r2 \l  PHI: (r2v1 long) = (r2v0 long), (r2v3 long) binds: [B:1:0x0002, B:12:0x0005] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:2:0x0005\-\>B:12:0x0005\l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|if ((r8.source.read(r8.buffer, android.support.p000v4.media.session.PlaybackStateCompat.ACTION_PLAY_FROM_URI) \> \-1 ? 1 : (r8.source.read(r8.buffer, android.support.p000v4.media.session.PlaybackStateCompat.ACTION_PLAY_FROM_URI) == \-1 ? 0 : \-1)) == 0) goto L_0x0026\l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|long r4 = r8.buffer.completeSegmentByteCount()\l}"];
Node_5 [shape=record,label="{5\:\ 0x001d|if ((r4 \> 0 ? 1 : (r4 == 0 ? 0 : \-1)) \<= 0) goto L_0x0005\l}"];
Node_6 [shape=record,label="{6\:\ 0x001f|long r2 = r2 + r4\lr9.write(r8.buffer, r4)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0026}"];
Node_8 [shape=record,label="{8\:\ 0x002e|if ((r8.buffer.size() \> 0 ? 1 : (r8.buffer.size() == 0 ? 0 : \-1)) \<= 0) goto L_?\l}"];
Node_9 [shape=record,label="{9\:\ 0x0030|long r2 = r2 + r8.buffer.size()\lr9.write(r8.buffer, r8.buffer.size())\l}"];
Node_10 [shape=record,label="{10\:\ 0x0043}"];
Node_11 [shape=record,label="{11\:\ 0x004a|throw new java.lang.IllegalArgumentException(\"sink == null\")\l}"];
Node_12 [shape=record,label="{12\:\ 0x0005|LOOP_END\lSYNTHETIC\lPHI: r2 \l  PHI: (r2v3 long) = (r2v1 long), (r2v4 long) binds: [B:14:0x0005, B:15:0x0005] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:2:0x0005\-\>B:12:0x0005\l}"];
Node_13 [shape=record,label="{13\:\ 0x0026|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x0005|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x0005|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return r2\l}"];
Node_17 [shape=record,label="{17\:\ ?|SYNTHETIC\lRETURN\l|return r2\l}"];
MethodNode[shape=record,label="{public long okio.RealBufferedSource.readAll((r8v0 'this' okio.RealBufferedSource A[IMMUTABLE_TYPE, THIS]), (r9v0 okio.Sink A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_10;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_13;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_14;
Node_6 -> Node_15;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_17;
Node_9 -> Node_16;
Node_10 -> Node_11;
Node_12 -> Node_2;
Node_13 -> Node_7;
Node_14 -> Node_12;
Node_15 -> Node_12;
}

