digraph "CFG forokio.RealBufferedSource.rangeEquals(JLokio\/ByteString;II)Z" {
subgraph cluster_Region_738328949 {
label = "R(1:(1:20)(1:(1:18)(3:8|(2:10|(2:(1:15)|(1:16)))|17)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_737311542 {
label = "IF [B:1:0x0002] THEN: R(1:20) ELSE: R(1:(1:18)(3:8|(2:10|(2:(1:15)|(1:16)))|17))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r7.closed != false) goto L_0x003b\l}"];
subgraph cluster_Region_2031470913 {
label = "R(1:20)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0042|throw new java.lang.IllegalStateException(\"closed\")\l}"];
}
subgraph cluster_Region_2061113867 {
label = "R(1:(1:18)(3:8|(2:10|(2:(1:15)|(1:16)))|17)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1190114700 {
label = "IF [B:3:0x0009, B:4:0x000b, B:5:0x000d, B:7:0x0014] THEN: R(1:18) ELSE: R(3:8|(2:10|(2:(1:15)|(1:16)))|17) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0009|if (r8 \< 0) goto L_0x003a\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|ADDED_TO_REGION\l|if (r11 \< 0) goto L_0x003a\l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|ADDED_TO_REGION\l|if (r12 \< 0) goto L_0x003a\l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|ADDED_TO_REGION\l|if ((r10.size() \- r11) \< r12) goto L_0x003a\l}"];
subgraph cluster_Region_2130468268 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x003a|RETURN\l|return false\l}"];
}
subgraph cluster_Region_313836636 {
label = "R(3:8|(2:10|(2:(1:15)|(1:16)))|17)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0017|int r0 = 0\l}"];
subgraph cluster_LoopRegion_335016831 {
label = "LOOP:0: (2:10|(2:(1:15)|(1:16)))";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0018|LOOP_START\lPHI: r0 \l  PHI: (r0v6 int) = (r0v5 int), (r0v7 int) binds: [B:8:0x0017, B:16:0x0035] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:9:0x0018\-\>B:16:0x0035\l|if (r0 \< r12) goto L_0x001a\l}"];
subgraph cluster_Region_1637200726 {
label = "R(2:10|(2:(1:15)|(1:16)))";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x001a|long long r3 = ((long) r0) + r8\l}"];
subgraph cluster_Region_703909107 {
label = "R(2:(1:15)|(1:16))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1429675292 {
label = "IF [B:11:0x0023, B:14:0x0032] THEN: R(1:15) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0023|if (request(1 + r3) != true) goto L_0x0025\l}"];
Node_14 [shape=record,label="{14\:\ 0x0032|ADDED_TO_REGION\l|if (r7.buffer.getByte(r3) != r10.getByte(r11 + r0)) goto L_0x0034\l}"];
subgraph cluster_Region_55869828 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0034|RETURN\l|return false\l}"];
}
}
subgraph cluster_Region_648025776 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0035|LOOP_END\lLOOP:0: B:9:0x0018\-\>B:16:0x0035\l|r0++\l}"];
}
}
}
}
Node_17 [shape=record,label="{17\:\ 0x0038|RETURN\l|return true\l}"];
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0004}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x000f}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0025|RETURN\lADDED_TO_REGION\l|return false\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0026}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x003b}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0034|SYNTHETIC\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0025|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0038|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public boolean okio.RealBufferedSource.rangeEquals((r7v0 'this' okio.RealBufferedSource A[IMMUTABLE_TYPE, THIS]), (r8v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 okio.ByteString A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_19;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_18;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_18;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_18;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_18;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_23[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_13[style=dashed];
Node_11 -> Node_22;
Node_14 -> Node_16[style=dashed];
Node_14 -> Node_21;
Node_16 -> Node_9;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_6 -> Node_7;
Node_13 -> Node_14;
Node_19 -> Node_20;
Node_21 -> Node_15;
Node_22 -> Node_12;
Node_23 -> Node_17;
}

