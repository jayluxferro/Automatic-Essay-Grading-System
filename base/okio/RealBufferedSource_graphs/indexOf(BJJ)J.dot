digraph "CFG forokio.RealBufferedSource.indexOf(BJJ)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r9.closed != false) goto L_0x005d\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004}"];
Node_3 [shape=record,label="{3\:\ 0x0008|if ((r11 \> 0 ? 1 : (r11 == 0 ? 0 : \-1)) \< 0) goto L_0x0040\l}"];
Node_4 [shape=record,label="{4\:\ 0x000a}"];
Node_5 [shape=record,label="{5\:\ 0x000c|if ((r13 \> r11 ? 1 : (r13 == r11 ? 0 : \-1)) \< 0) goto L_0x0040\l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|LOOP_START\lPHI: r11 \l  PHI: (r11v6 long) = (r11v0 long), (r11v7 long) binds: [B:5:0x000c, B:15:0x0039] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:6:0x000e\-\>B:15:0x0039\l}"];
Node_7 [shape=record,label="{7\:\ 0x0012|if ((r11 \> r13 ? 1 : (r11 == r13 ? 0 : \-1)) \>= 0) goto L_0x003f\l}"];
Node_8 [shape=record,label="{8\:\ 0x0014|long r0 = r9.buffer.indexOf(r10, r11, r13)\l}"];
Node_9 [shape=record,label="{9\:\ 0x001f|if ((r0 \> \-1 ? 1 : (r0 == \-1 ? 0 : \-1)) == 0) goto L_0x0022\l}"];
Node_10 [shape=record,label="{10\:\ 0x0021|RETURN\l|return r0\l}"];
Node_11 [shape=record,label="{11\:\ 0x0022|long r0 = r9.buffer.size\l}"];
Node_12 [shape=record,label="{12\:\ 0x0028|if ((r0 \> r13 ? 1 : (r0 == r13 ? 0 : \-1)) \>= 0) goto L_0x003e\l}"];
Node_13 [shape=record,label="{13\:\ 0x002a}"];
Node_14 [shape=record,label="{14\:\ 0x0036|if ((r9.source.read(r9.buffer, android.support.p000v4.media.session.PlaybackStateCompat.ACTION_PLAY_FROM_URI) \> \-1 ? 1 : (r9.source.read(r9.buffer, android.support.p000v4.media.session.PlaybackStateCompat.ACTION_PLAY_FROM_URI) == \-1 ? 0 : \-1)) != 0) goto L_0x0039\l}"];
Node_15 [shape=record,label="{15\:\ 0x0039|LOOP_END\lLOOP:0: B:6:0x000e\-\>B:15:0x0039\l|long r11 = java.lang.Math.max(r11, r0)\l}"];
Node_16 [shape=record,label="{16\:\ 0x003e|RETURN\l|return \-1\l}"];
Node_17 [shape=record,label="{17\:\ 0x003f|RETURN\l|return \-1\l}"];
Node_18 [shape=record,label="{18\:\ 0x0040|java.lang.Object[] r0 = new java.lang.Object[]\{java.lang.Long.valueOf(r11), java.lang.Long.valueOf(r13)\}\l}"];
Node_19 [shape=record,label="{19\:\ 0x005c|throw new java.lang.IllegalArgumentException(java.lang.String.format(\"fromIndex=%s toIndex=%s\", r0))\l}"];
Node_20 [shape=record,label="{20\:\ 0x005d}"];
Node_21 [shape=record,label="{21\:\ 0x0064|throw new java.lang.IllegalStateException(\"closed\")\l}"];
Node_22 [shape=record,label="{22\:\ 0x003f|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x003e|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x003e|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x0021|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public long okio.RealBufferedSource.indexOf((r9v0 'this' okio.RealBufferedSource A[IMMUTABLE_TYPE, THIS]), (r10v0 byte A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_20;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_18;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_18;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_22;
Node_8 -> Node_9;
Node_9 -> Node_11;
Node_9 -> Node_25[style=dashed];
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_24;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_23[style=dashed];
Node_15 -> Node_6;
Node_18 -> Node_19;
Node_20 -> Node_21;
Node_22 -> Node_17;
Node_23 -> Node_16;
Node_24 -> Node_16;
Node_25 -> Node_10;
}

