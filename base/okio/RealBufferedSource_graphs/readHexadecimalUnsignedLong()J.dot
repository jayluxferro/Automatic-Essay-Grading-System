digraph "CFG forokio.RealBufferedSource.readHexadecimalUnsignedLong()J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|require(1)\lr1 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|LOOP_START\lPHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:0:0x0000, B:15:0x0030] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0007\-\>B:15:0x0030\l|int r2 = r1 + 1\l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|if (request((long) r2) == false) goto L_0x004a\l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|byte r3 = r6.buffer.getByte((long) r1)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0019|if (r3 \< 48) goto L_0x001f\l}"];
Node_5 [shape=record,label="{5\:\ 0x001b}"];
Node_6 [shape=record,label="{6\:\ 0x001d|if (r3 \<= 57) goto L_0x0030\l}"];
Node_7 [shape=record,label="{7\:\ 0x001f}"];
Node_8 [shape=record,label="{8\:\ 0x0021|if (r3 \< 97) goto L_0x0027\l}"];
Node_9 [shape=record,label="{9\:\ 0x0023}"];
Node_10 [shape=record,label="{10\:\ 0x0025|if (r3 \<= 102) goto L_0x0030\l}"];
Node_11 [shape=record,label="{11\:\ 0x0027}"];
Node_12 [shape=record,label="{12\:\ 0x0029|if (r3 \< 65) goto L_0x0032\l}"];
Node_13 [shape=record,label="{13\:\ 0x002b}"];
Node_14 [shape=record,label="{14\:\ 0x002d|if (r3 \<= 70) goto L_0x0030\l}"];
Node_15 [shape=record,label="{15\:\ 0x0030|LOOP_END\lLOOP:0: B:1:0x0007\-\>B:15:0x0030\l|r1 = r2\l}"];
Node_16 [shape=record,label="{16\:\ 0x0032|if (r1 == 0) goto L_0x0035\l}"];
Node_17 [shape=record,label="{17\:\ 0x0035|java.lang.Object[] r2 = new java.lang.Object[]\{java.lang.Byte.valueOf(r3)\}\l}"];
Node_18 [shape=record,label="{18\:\ 0x0049|throw new java.lang.NumberFormatException(java.lang.String.format(\"Expected leading [0\-9a\-fA\-F] character but was %#x\", r2))\l}"];
Node_19 [shape=record,label="{19\:\ 0x004a}"];
Node_20 [shape=record,label="{20\:\ 0x0050|RETURN\l|return r6.buffer.readHexadecimalUnsignedLong()\l}"];
Node_21 [shape=record,label="{21\:\ 0x0032|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x0032|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x004a|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x0030|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x0030|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x0030|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public long okio.RealBufferedSource.readHexadecimalUnsignedLong((r6v0 'this' okio.RealBufferedSource A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_23;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_24;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_11;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_25;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_21;
Node_13 -> Node_14;
Node_14 -> Node_22[style=dashed];
Node_14 -> Node_26;
Node_15 -> Node_1;
Node_16 -> Node_17;
Node_16 -> Node_19[style=dashed];
Node_17 -> Node_18;
Node_19 -> Node_20;
Node_21 -> Node_16;
Node_22 -> Node_16;
Node_23 -> Node_19;
Node_24 -> Node_15;
Node_25 -> Node_15;
Node_26 -> Node_15;
}

