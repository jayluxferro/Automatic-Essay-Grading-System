digraph "CFG forokio.RealBufferedSource.read(Ljava\/nio\/ByteBuffer;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|if ((r4.buffer.size \> 0 ? 1 : (r4.buffer.size == 0 ? 0 : \-1)) != 0) goto L_0x001c\l}"];
Node_2 [shape=record,label="{2\:\ 0x000a}"];
Node_3 [shape=record,label="{3\:\ 0x0018|if ((r4.source.read(r4.buffer, android.support.p000v4.media.session.PlaybackStateCompat.ACTION_PLAY_FROM_URI) \> \-1 ? 1 : (r4.source.read(r4.buffer, android.support.p000v4.media.session.PlaybackStateCompat.ACTION_PLAY_FROM_URI) == \-1 ? 0 : \-1)) != 0) goto L_0x001c\l}"];
Node_4 [shape=record,label="{4\:\ 0x001a|RETURN\l|return \-1\l}"];
Node_5 [shape=record,label="{5\:\ 0x001c}"];
Node_6 [shape=record,label="{6\:\ 0x0022|RETURN\l|return r4.buffer.read(r5)\l}"];
MethodNode[shape=record,label="{public int okio.RealBufferedSource.read((r4v0 'this' okio.RealBufferedSource A[IMMUTABLE_TYPE, THIS]), (r5v0 java.nio.ByteBuffer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_5 -> Node_6;
}

