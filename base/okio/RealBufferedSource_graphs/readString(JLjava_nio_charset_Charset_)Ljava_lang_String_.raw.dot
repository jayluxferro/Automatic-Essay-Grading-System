digraph "CFG forokio.RealBufferedSource.readString(JLjava\/nio\/charset\/Charset;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:okio.RealBufferedSource), (r2 I:long) okio.RealBufferedSource.require(long):void type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000c \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: IGET  (r0 I:okio.Buffer) = (r1 I:okio.RealBufferedSource) okio.RealBufferedSource.buffer okio.Buffer \l0x0007: INVOKE  (r2 I:java.lang.String) = \l  (r0 I:okio.Buffer)\l  (r2 I:long)\l  (r4 I:java.nio.charset.Charset)\l okio.Buffer.readString(long, java.nio.charset.Charset):java.lang.String type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: RETURN  (r2 I:java.lang.String) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: NEW_INSTANCE  (r2 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x000e: CONST_STR  (r3 I:java.lang.String) =  \"charset == null\" \l0x0010: INVOKE  \l  (r2 I:java.lang.IllegalArgumentException)\l  (r3 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public java.lang.String okio.RealBufferedSource.readString((r1 'this' I:okio.RealBufferedSource A[IMMUTABLE_TYPE, THIS]), (r2 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.nio.charset.Charset A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

