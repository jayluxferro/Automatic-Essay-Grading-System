digraph "CFG forokio.RealBufferedSource.readString(JLjava\/nio\/charset\/Charset;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|require(r2)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|if (r4 == null) goto L_0x000c\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005}"];
Node_3 [shape=record,label="{3\:\ 0x000b|RETURN\l|return r1.buffer.readString(r2, r4)\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c}"];
Node_5 [shape=record,label="{5\:\ 0x0013|throw new java.lang.IllegalArgumentException(\"charset == null\")\l}"];
MethodNode[shape=record,label="{public java.lang.String okio.RealBufferedSource.readString((r1v0 'this' okio.RealBufferedSource A[IMMUTABLE_TYPE, THIS]), (r2v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.nio.charset.Charset A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

