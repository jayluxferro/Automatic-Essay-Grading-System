digraph "CFG forokio.Segment.pop()Lokio\/Segment;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|if (r4.next == r4) goto L_0x0008\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|okio.Segment r0 = r4.next\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|r0 = null\l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|PHI: r0 \l  PHI: (r0v1 okio.Segment) = (r0v2 okio.Segment), (r0v3 okio.Segment) binds: [B:3:0x0008, B:2:0x0005] A[DONT_GENERATE, DONT_INLINE]\l|okio.Segment r2 = r4.prev\lr2.next = r4.next\lokio.Segment r2 = r4.next\lr2.prev = r4.prev\lr4.next = null\lr4.prev = null\l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|RETURN\l|return r0\l}"];
MethodNode[shape=record,label="{public okio.Segment okio.Segment.pop((r4v0 'this' okio.Segment A[IMMUTABLE_TYPE, THIS]))  | Annotation[RUNTIME, javax.annotation.Nullable, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

