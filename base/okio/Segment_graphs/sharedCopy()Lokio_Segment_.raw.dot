digraph "CFG forokio.Segment.sharedCopy()Lokio\/Segment;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0001: IPUT  (r0 I:boolean), (r7 I:okio.Segment) okio.Segment.shared boolean \l0x0003: NEW_INSTANCE  (r0 I:okio.Segment) =  okio.Segment \l0x0005: IGET  (r2 I:byte[]) = (r7 I:okio.Segment) okio.Segment.data byte[] \l0x0007: IGET  (r3 I:int) = (r7 I:okio.Segment) okio.Segment.pos int \l0x0009: IGET  (r4 I:int) = (r7 I:okio.Segment) okio.Segment.limit int \l0x000b: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000c: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000d: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x000e: INVOKE  \l  (r1 I:okio.Segment)\l  (r2 I:byte[])\l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:boolean)\l  (r6 I:boolean)\l okio.Segment.\<init\>(byte[], int, int, boolean, boolean):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0011|0x0011: RETURN  (r0 I:okio.Segment) \l}"];
MethodNode[shape=record,label="{okio.Segment okio.Segment.sharedCopy((r7 'this' I:okio.Segment A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

