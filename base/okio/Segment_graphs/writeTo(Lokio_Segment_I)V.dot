digraph "CFG forokio.Segment.writeTo(Lokio\/Segment;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r6.owner == false) goto L_0x0052\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004}"];
Node_3 [shape=record,label="{3\:\ 0x0009|if ((r6.limit + r7) \<= 8192) goto L_0x003c\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b}"];
Node_5 [shape=record,label="{5\:\ 0x000d|if (r6.shared != false) goto L_0x0036\l}"];
Node_6 [shape=record,label="{6\:\ 0x000f}"];
Node_7 [shape=record,label="{7\:\ 0x0015|if (((r6.limit + r7) \- r6.pos) \> 8192) goto L_0x0030\l}"];
Node_8 [shape=record,label="{8\:\ 0x0017|java.lang.System.arraycopy(r6.data, r6.pos, r6.data, 0, r6.limit \- r6.pos)\lr6.limit = r6.limit \- r6.pos\lr6.pos = 0\l}"];
Node_9 [shape=record,label="{9\:\ 0x0030}"];
Node_10 [shape=record,label="{10\:\ 0x0035|throw new java.lang.IllegalArgumentException()\l}"];
Node_11 [shape=record,label="{11\:\ 0x0036}"];
Node_12 [shape=record,label="{12\:\ 0x003b|throw new java.lang.IllegalArgumentException()\l}"];
Node_13 [shape=record,label="{13\:\ 0x003c|java.lang.System.arraycopy(r5.data, r5.pos, r6.data, r6.limit, r7)\lr6.limit = r6.limit + r7\lr5.pos = r5.pos + r7\l}"];
Node_14 [shape=record,label="{14\:\ 0x0051|RETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ 0x0052}"];
Node_16 [shape=record,label="{16\:\ 0x0057|throw new java.lang.IllegalArgumentException()\l}"];
MethodNode[shape=record,label="{public void okio.Segment.writeTo((r5v0 'this' okio.Segment A[IMMUTABLE_TYPE, THIS]), (r6v0 okio.Segment A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_15;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_13;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_13;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_15 -> Node_16;
}

