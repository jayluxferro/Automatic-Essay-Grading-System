digraph "CFG forokio.Segment.pop()Lokio\/Segment;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:okio.Segment) = (r4 I:okio.Segment) okio.Segment.next okio.Segment \l0x0002: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0008 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: IGET  (r0 I:okio.Segment) = (r4 I:okio.Segment) okio.Segment.next okio.Segment \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: IGET  (r2 I:okio.Segment) = (r4 I:okio.Segment) okio.Segment.prev okio.Segment \l0x000b: IGET  (r3 I:okio.Segment) = (r4 I:okio.Segment) okio.Segment.next okio.Segment \l0x000d: IPUT  (r3 I:okio.Segment), (r2 I:okio.Segment) okio.Segment.next okio.Segment \l0x000f: IGET  (r2 I:okio.Segment) = (r4 I:okio.Segment) okio.Segment.next okio.Segment \l0x0011: IGET  (r3 I:okio.Segment) = (r4 I:okio.Segment) okio.Segment.prev okio.Segment \l0x0013: IPUT  (r3 I:okio.Segment), (r2 I:okio.Segment) okio.Segment.prev okio.Segment \l0x0015: IPUT  (r1 I:okio.Segment), (r4 I:okio.Segment) okio.Segment.next okio.Segment \l0x0017: IPUT  (r1 I:okio.Segment), (r4 I:okio.Segment) okio.Segment.prev okio.Segment \l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|0x0019: RETURN  (r0 I:okio.Segment) \l}"];
MethodNode[shape=record,label="{public okio.Segment okio.Segment.pop((r4 'this' I:okio.Segment A[IMMUTABLE_TYPE, THIS]))  | Annotation[RUNTIME, javax.annotation.Nullable, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

