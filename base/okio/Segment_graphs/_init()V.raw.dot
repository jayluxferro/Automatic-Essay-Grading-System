digraph "CFG forokio.Segment.\<init\>()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: CONST  (r0 I:?[int, float, short, byte, char]) = \l  (8192(0x2000, float:1.14794E\-41) ?[int, float, short, byte, char])\l \l0x0005: NEW_ARRAY  (r0 I:byte[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: byte[] \l0x0007: IPUT  (r0 I:byte[]), (r1 I:okio.Segment) okio.Segment.data byte[] \l0x0009: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000a: IPUT  (r0 I:boolean), (r1 I:okio.Segment) okio.Segment.owner boolean \l0x000c: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000d: IPUT  (r0 I:boolean), (r1 I:okio.Segment) okio.Segment.shared boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|0x000f: RETURN   \l}"];
MethodNode[shape=record,label="{void okio.Segment.\<init\>((r1 'this' I:okio.Segment A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

