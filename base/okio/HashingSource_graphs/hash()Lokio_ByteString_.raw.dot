digraph "CFG forokio.HashingSource.hash()Lokio\/ByteString;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.security.MessageDigest) = (r1 I:okio.HashingSource) okio.HashingSource.messageDigest java.security.MessageDigest \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:java.security.MessageDigest) = (r1 I:okio.HashingSource) okio.HashingSource.messageDigest java.security.MessageDigest \l0x0006: INVOKE  (r0 I:byte[]) = (r0 I:java.security.MessageDigest) java.security.MessageDigest.digest():byte[] type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: IGET  (r0 I:javax.crypto.Mac) = (r1 I:okio.HashingSource) okio.HashingSource.mac javax.crypto.Mac \l0x000d: INVOKE  (r0 I:byte[]) = (r0 I:javax.crypto.Mac) javax.crypto.Mac.doFinal():byte[] type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: INVOKE  (r0 I:okio.ByteString) = (r0 I:byte[]) okio.ByteString.of(byte[]):okio.ByteString type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: RETURN  (r0 I:okio.ByteString) \l}"];
MethodNode[shape=record,label="{public okio.ByteString okio.HashingSource.hash((r1 'this' I:okio.HashingSource A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

