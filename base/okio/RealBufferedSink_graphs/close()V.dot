digraph "CFG forokio.RealBufferedSink.close()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r5.closed == false) goto L_0x0005\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|RETURN\l|return\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|r0 = null\l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|SYNTHETIC\lSplitter:B:4:0x0006\l}"];
Node_5 [shape=record,label="{5\:\ ?|Catch:\{ Throwable \-\> 0x001c \}\lSplitter:B:4:0x0006\l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|Catch:\{ Throwable \-\> 0x001c \}\l|if ((r5.buffer.size \> 0 ? 1 : (r5.buffer.size == 0 ? 0 : \-1)) \<= 0) goto L_0x001d     \/\/ Catch:\{ Throwable \-\> 0x001c \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x0010|Catch:\{ Throwable \-\> 0x001c \}\l|r5.sink.write(r5.buffer, r5.buffer.size)     \/\/ Catch:\{ Throwable \-\> 0x001c \}\l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|ExcHandler: Throwable (th java.lang.Throwable)\lSplitter:B:4:0x0006\l|java.lang.Throwable r0 = th\l}"];
Node_9 [shape=record,label="{9\:\ 0x001d|SYNTHETIC\lPHI: r0 \l  PHI: (r0v2 'th' java.lang.Throwable) = (r0v5 'th' java.lang.Throwable), (r0v1 'th' java.lang.Throwable), (r0v1 'th' java.lang.Throwable) binds: [B:8:0x001c, B:6:0x000e, B:7:0x0010] A[DONT_GENERATE, DONT_INLINE]\lSplitter:B:9:0x001d\l}"];
Node_10 [shape=record,label="{10\:\ ?|Catch:\{ Throwable \-\> 0x0023 \}\lSplitter:B:9:0x001d\l|r5.sink.close()     \/\/ Catch:\{ Throwable \-\> 0x0023 \}\l}"];
Node_11 [shape=record,label="{11\:\ 0x0023|ExcHandler: Throwable (r1v1 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:9:0x001d\l|java.lang.Throwable r1 = move\-exception\l}"];
Node_12 [shape=record,label="{12\:\ 0x0024|if (r0 != null) goto L_0x0027\l}"];
Node_13 [shape=record,label="{13\:\ 0x0026|r0 = r1\l}"];
Node_14 [shape=record,label="{14\:\ 0x0027|PHI: r0 \l  PHI: (r0v3 'th' java.lang.Throwable) = (r0v2 'th' java.lang.Throwable), (r0v4 'th' java.lang.Throwable), (r0v2 'th' java.lang.Throwable) binds: [B:12:0x0024, B:13:0x0026, B:10:?] A[DONT_GENERATE, DONT_INLINE]\l|r5.closed = true\l}"];
Node_15 [shape=record,label="{15\:\ 0x002a|if (r0 == null) goto L_?\l}"];
Node_16 [shape=record,label="{16\:\ 0x002c|okio.Util.sneakyRethrow(r0)\l}"];
Node_17 [shape=record,label="{17\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_18 [shape=record,label="{18\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void okio.RealBufferedSink.close((r5v0 'this' okio.RealBufferedSink A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_10 -> Node_14;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_18;
Node_16 -> Node_17;
}

