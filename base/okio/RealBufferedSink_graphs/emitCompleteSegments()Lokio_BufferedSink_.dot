digraph "CFG forokio.RealBufferedSink.emitCompleteSegments()Lokio\/BufferedSink;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r4.closed != false) goto L_0x0018\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|long r0 = r4.buffer.completeSegmentByteCount()\l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|if ((r0 \> 0 ? 1 : (r0 == 0 ? 0 : \-1)) \<= 0) goto L_0x0017\l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|r4.sink.write(r4.buffer, r0)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|RETURN\l|return r4\l}"];
Node_6 [shape=record,label="{6\:\ 0x0018}"];
Node_7 [shape=record,label="{7\:\ 0x001f|throw new java.lang.IllegalStateException(\"closed\")\l}"];
MethodNode[shape=record,label="{public okio.BufferedSink okio.RealBufferedSink.emitCompleteSegments((r4v0 'this' okio.RealBufferedSink A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_6 -> Node_7;
}

