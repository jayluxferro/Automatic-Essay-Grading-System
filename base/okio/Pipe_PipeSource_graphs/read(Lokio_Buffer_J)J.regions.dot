digraph "CFG forokio.Pipe.PipeSource.read(Lokio\/Buffer;J)J" {
subgraph cluster_Region_131649122 {
label = "R(2:0|4)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
subgraph cluster_SynchronizedRegion_1751536 {
label = "Synchronized:R(2:1|(1:(2:(3:(1:(2:(1:11)|(1:12)))|13|15)|(1:17))))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004}"];
subgraph cluster_Region_1955375355 {
label = "R(1:(2:(3:(1:(2:(1:11)|(1:12)))|13|15)|(1:17)))";
node [shape=record,color=blue];
subgraph cluster_Region_1668233786 {
label = "R(2:(3:(1:(2:(1:11)|(1:12)))|13|15)|(1:17))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_570770411 {
label = "IF [B:4:0x0009] THEN: R(3:(1:(2:(1:11)|(1:12)))|13|15) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0009|if (okio.Pipe.this.sourceClosed == false) goto L_0x000b\l}"];
subgraph cluster_Region_1717845288 {
label = "R(3:(1:(2:(1:11)|(1:12)))|13|15)";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_1996864354 {
label = "LOOP:0: (1:(2:(1:11)|(1:12)))";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0017|if (okio.Pipe.this.buffer.size() == 0) goto L_0x0019\l}"];
subgraph cluster_Region_1717505545 {
label = "R(1:(2:(1:11)|(1:12)))";
node [shape=record,color=blue];
subgraph cluster_Region_2096842258 {
label = "R(2:(1:11)|(1:12))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1953060989 {
label = "IF [B:8:0x001d] THEN: R(1:11) ELSE: null";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x001d|if (okio.Pipe.this.sinkClosed == true) goto L_0x001f\l}"];
subgraph cluster_Region_787292985 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0022|RETURN\l|return \-1\l}"];
}
}
subgraph cluster_Region_819744683 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0023|LOOP_END\lLOOP:0: B:5:0x000b\-\>B:12:0x0023\l|r5.timeout.waitUntilNotified(okio.Pipe.this.buffer)\l}"];
}
}
}
}
Node_13 [shape=record,label="{13\:\ 0x002d|long long r6 = okio.Pipe.this.buffer.read(r6, r7)\lokio.Pipe.this.buffer.notifyAll()\l}"];
Node_15 [shape=record,label="{15\:\ 0x003d|RETURN\l|return r6\l}"];
}
}
subgraph cluster_Region_372331636 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0045|throw new java.lang.IllegalStateException(\"closed\")\l}"];
}
}
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0005|SYNTHETIC\l}"];
Node_3 [shape=record,color=red,label="{3\:\ ?}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000b|LOOP_START\lLOOP:0: B:5:0x000b\-\>B:12:0x0023\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0019}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x001f}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0021|DONT_GENERATE\l|monitor\-exit(\l\/\/ error: 0x0021: MONITOR_EXIT  \l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x003c|DONT_GENERATE\l|monitor\-exit(\l\/\/ error: 0x003c: MONITOR_EXIT  \l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x003e}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0046|REMOVE\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0047|REMOVE\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0048|REMOVE\l|throw r6\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x002d|SYNTHETIC\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x001f|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public long okio.Pipe.PipeSource.read((r5v0 'this' okio.Pipe$PipeSource A[IMMUTABLE_TYPE, THIS]), (r6v0 okio.Buffer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_4 -> Node_5;
Node_4 -> Node_16[style=dashed];
Node_6 -> Node_7;
Node_6 -> Node_21[style=dashed];
Node_8 -> Node_12[style=dashed];
Node_8 -> Node_22;
Node_12 -> Node_5;
Node_13 -> Node_14;
Node_2 -> Node_3;
Node_2 -> Node_18;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_21 -> Node_13;
Node_22 -> Node_9;
}

