digraph "CFG forokio.SegmentedByteString.toByteArray()[B" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|byte[] r0 = new byte[r8.directory[r8.segments.length + \-1]]\lint r1 = r8.segments.length\lr2 = 0\lr3 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0010|LOOP_START\lPHI: r2 r3 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:0:0x0000, B:2:0x0012] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v1 int) = (r3v0 int), (r3v2 int) binds: [B:0:0x0000, B:2:0x0012] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0010\-\>B:2:0x0012\l|if (r2 \>= r1) goto L_0x0029\l}"];
Node_2 [shape=record,label="{2\:\ 0x0012|LOOP_END\lLOOP:0: B:1:0x0010\-\>B:2:0x0012\l|r4 = r8.directory[r1 + r2]\lr5 = r8.directory[r2]\ljava.lang.System.arraycopy(r8.segments[r2], r4, r0, r3, r5 \- r3)\lint r2 = r2 + 1\lr3 = r5\l}"];
Node_3 [shape=record,label="{3\:\ 0x0029|RETURN\l|return r0\l}"];
Node_4 [shape=record,label="{4\:\ 0x0029|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public byte[] okio.SegmentedByteString.toByteArray((r8v0 'this' okio.SegmentedByteString A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_1;
Node_4 -> Node_3;
}

