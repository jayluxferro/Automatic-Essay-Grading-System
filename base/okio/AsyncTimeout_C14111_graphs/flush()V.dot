digraph "CFG forokio.AsyncTimeout.1.flush()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r3.this$0.enter()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|SYNTHETIC\lSplitter:B:1:0x0005\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ IOException \-\> 0x0013, all \-\> 0x0011 \}\lSplitter:B:1:0x0005\l|r2.flush()     \/\/ Catch:\{ IOException \-\> 0x0013, all \-\> 0x0011 \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|r3.this$0.exit(true)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|RETURN\l|return\l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|ExcHandler: all (r0v3 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:7:0x0014\l|java.lang.Throwable r0 = move\-exception\l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|ExcHandler: IOException (r0v1 'e' java.io.IOException A[CUSTOM_DECLARE])\lSplitter:B:1:0x0005\l|java.io.IOException r0 = move\-exception\l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|SYNTHETIC\lSplitter:B:7:0x0014\l}"];
Node_8 [shape=record,label="{8\:\ ?|Catch:\{ IOException \-\> 0x0013, all \-\> 0x0011 \}\lSplitter:B:7:0x0014\l}"];
Node_9 [shape=record,label="{9\:\ 0x001a|Catch:\{ IOException \-\> 0x0013, all \-\> 0x0011 \}\l|throw r3.this$0.exit(r0)     \/\/ Catch:\{ IOException \-\> 0x0013, all \-\> 0x0011 \}\l}"];
Node_10 [shape=record,label="{10\:\ 0x001b|r3.this$0.exit(false)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0021|throw r0\l}"];
MethodNode[shape=record,label="{public void okio.AsyncTimeout.1.flush((r3v0 'this' okio.AsyncTimeout$1 A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_2 -> Node_6;
Node_3 -> Node_4;
Node_5 -> Node_10;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_5;
Node_8 -> Node_9;
Node_10 -> Node_11;
}

